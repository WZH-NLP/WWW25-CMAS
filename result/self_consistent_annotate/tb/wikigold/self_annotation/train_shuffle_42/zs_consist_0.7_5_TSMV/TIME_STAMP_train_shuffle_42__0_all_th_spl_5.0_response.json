[
    {
        "idx": 1173,
        "sentence": "Unknown , 1 June 1985 -- 14 July 1985 ; Major General John C. Scheidt Jr. , 15 July 1985 ; Brigadier General Philip M. Drew , 12 August 1986 ; Brigadier General John A. Corder , 3 August 1987 ; Brigadier General Gerald A. Daniel , 22 April 1988 ; Brigadier General Glenn A. Profitt II , 24 January 1989 -- unkn .",
        "label": "{'Gerald A. Daniel': 'Person', 'Philip M. Drew': 'Person', 'John C. Scheidt Jr.': 'Person', 'Glenn A. Profitt II': 'Person', 'John A. Corder': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Unknown , 1 June 1985 -- 14 July 1985 ; Major General John C. Scheidt Jr. , 15 July 1985 ; Brigadier General Philip M. Drew , 12 August 1986 ; Brigadier General John A. Corder , 3 August 1987 ; Brigadier General Gerald A. Daniel , 22 April 1988 ; Brigadier General Glenn A. Profitt II , 24 January 1989 -- unkn .\nAnswer: ",
        "responses": "['[{\"John C. Scheidt Jr.\": \"Person\"}, {\"Philip M. Drew\": \"Person\"}, {\"John A. Corder\": \"Person\"}, {\"Gerald A. Daniel\": \"Person\"}, {\"Glenn A. Profitt II\": \"Person\"}]', '[{\"John C. Scheidt Jr.\": \"Person\"}, {\"Philip M. Drew\": \"Person\"}, {\"John A. Corder\": \"Person\"}, {\"Gerald A. Daniel\": \"Person\"}, {\"Glenn A. Profitt II\": \"Person\"}]', '[{\"John C. Scheidt Jr.\": \"Person\"}, {\"Philip M. Drew\": \"Person\"}, {\"John A. Corder\": \"Person\"}, {\"Gerald A. Daniel\": \"Person\"}, {\"Glenn A. Profitt II\": \"Person\"}]', '[{\"John C. Scheidt Jr.\": \"Person\"}, {\"Philip M. Drew\": \"Person\"}, {\"John A. Corder\": \"Person\"}, {\"Gerald A. Daniel\": \"Person\"}, {\"Glenn A. Profitt II\": \"Person\"}]', '[{\"John C. Scheidt Jr.\": \"Person\"}, {\"Philip M. Drew\": \"Person\"}, {\"John A. Corder\": \"Person\"}, {\"Gerald A. Daniel\": \"Person\"}, {\"Glenn A. Profitt II\": \"Person\"}]']",
        "prediction_per_consist": "[{'John C. Scheidt Jr.': 'Person', 'Philip M. Drew': 'Person', 'John A. Corder': 'Person', 'Gerald A. Daniel': 'Person', 'Glenn A. Profitt II': 'Person'}, {'John C. Scheidt Jr.': 'Person', 'Philip M. Drew': 'Person', 'John A. Corder': 'Person', 'Gerald A. Daniel': 'Person', 'Glenn A. Profitt II': 'Person'}, {'John C. Scheidt Jr.': 'Person', 'Philip M. Drew': 'Person', 'John A. Corder': 'Person', 'Gerald A. Daniel': 'Person', 'Glenn A. Profitt II': 'Person'}, {'John C. Scheidt Jr.': 'Person', 'Philip M. Drew': 'Person', 'John A. Corder': 'Person', 'Gerald A. Daniel': 'Person', 'Glenn A. Profitt II': 'Person'}, {'John C. Scheidt Jr.': 'Person', 'Philip M. Drew': 'Person', 'John A. Corder': 'Person', 'Gerald A. Daniel': 'Person', 'Glenn A. Profitt II': 'Person'}]",
        "prediction": "{'John C. Scheidt Jr.': 'Person', 'Philip M. Drew': 'Person', 'John A. Corder': 'Person', 'Gerald A. Daniel': 'Person', 'Glenn A. Profitt II': 'Person'}",
        "consistency_score": "{'entities': {('John C. Scheidt Jr.', 'Person'): 5, ('Philip M. Drew', 'Person'): 5, ('John A. Corder', 'Person'): 5, ('Gerald A. Daniel', 'Person'): 5, ('Glenn A. Profitt II', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('John C. Scheidt Jr.', 'Person'): 5, ('Philip M. Drew', 'Person'): 5, ('John A. Corder', 'Person'): 5, ('Gerald A. Daniel', 'Person'): 5, ('Glenn A. Profitt II', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 575,
        "sentence": "The appearance of locomotive # 7 was permanently changed by replacement of a smaller number plate on the front of the boiler .",
        "label": "{}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The appearance of locomotive # 7 was permanently changed by replacement of a smaller number plate on the front of the boiler .\nAnswer: ",
        "responses": "['[{\"7\": \"Miscellaneous\"}]', '[{\"7\": \"Miscellaneous\"}]', '[{\"7\": \"Miscellaneous\"}]', '[{\"7\": \"Miscellaneous\"}]', '[{\"7\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'7': 'Miscellaneous'}, {'7': 'Miscellaneous'}, {'7': 'Miscellaneous'}, {'7': 'Miscellaneous'}, {'7': 'Miscellaneous'}]",
        "prediction": "{'7': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('7', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('7', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 513,
        "sentence": "Cowley finished his career with 195 goals and 353 assists for 548 points in 549 NHL games .",
        "label": "{'NHL': 'Organization', 'Cowley': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Cowley finished his career with 195 goals and 353 assists for 548 points in 549 NHL games .\nAnswer: ",
        "responses": "['[{\"Cowley\": \"Person\"}, {\"NHL\": \"Organization\"}]', '[{\"Cowley\": \"Person\"}, {\"NHL\": \"Organization\"}]', '[{\"Cowley\": \"Person\"}, {\"NHL\": \"Organization\"}]', '[{\"Cowley\": \"Person\"}, {\"NHL\": \"Organization\"}]', '[{\"Cowley\": \"Person\"}, {\"NHL\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Cowley': 'Person', 'NHL': 'Organization'}, {'Cowley': 'Person', 'NHL': 'Organization'}, {'Cowley': 'Person', 'NHL': 'Organization'}, {'Cowley': 'Person', 'NHL': 'Organization'}, {'Cowley': 'Person', 'NHL': 'Organization'}]",
        "prediction": "{'Cowley': 'Person', 'NHL': 'Organization'}",
        "consistency_score": "{'entities': {('Cowley', 'Person'): 5, ('NHL', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Cowley', 'Person'): 5, ('NHL', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 243,
        "sentence": "Indeed , the inscriptions on the Cup when it was successfully defended in 1894 only stated \" Montreal HC \" .",
        "label": "{'Montreal HC': 'Organization', 'Cup': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Indeed , the inscriptions on the Cup when it was successfully defended in 1894 only stated \" Montreal HC \" .\nAnswer: ",
        "responses": "['[{\"Montreal HC\": \"Organization\"}]', '[{\"Montreal HC\": \"Organization\"}]', '[{\"Montreal HC\": \"Organization\"}]', '[{\"Montreal HC\": \"Organization\"}]', '[{\"Montreal HC\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Montreal HC': 'Organization'}, {'Montreal HC': 'Organization'}, {'Montreal HC': 'Organization'}, {'Montreal HC': 'Organization'}, {'Montreal HC': 'Organization'}]",
        "prediction": "{'Montreal HC': 'Organization'}",
        "consistency_score": "{'entities': {('Montreal HC', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Montreal HC', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 659,
        "sentence": "Other venues where he drew large and devoted audiences included New York 's Waldorf-Astoria , Chicago 's Palmer House and the Los Angeles ' Coconut Grove .",
        "label": "{'Palmer House': 'Organization', 'Waldorf-Astoria': 'Organization', 'New York': 'Location', 'Chicago': 'Location', 'Los Angeles': 'Location', 'Coconut Grove': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Other venues where he drew large and devoted audiences included New York 's Waldorf-Astoria , Chicago 's Palmer House and the Los Angeles ' Coconut Grove .\nAnswer: ",
        "responses": "['[{\"New York\": \"Location\"}, {\"Waldorf-Astoria\": \"Location\"}, {\"Chicago\": \"Location\"}, {\"Palmer House\": \"Location\"}, {\"Los Angeles\": \"Location\"}, {\"Coconut Grove\": \"Location\"}]', '[{\"New York\": \"Location\"}, {\"Waldorf-Astoria\": \"Location\"}, {\"Chicago\": \"Location\"}, {\"Palmer House\": \"Location\"}, {\"Los Angeles\": \"Location\"}, {\"Coconut Grove\": \"Location\"}]', '[{\"New York\": \"Location\"}, {\"Waldorf-Astoria\": \"Location\"}, {\"Chicago\": \"Location\"}, {\"Palmer House\": \"Location\"}, {\"Los Angeles\": \"Location\"}, {\"Coconut Grove\": \"Location\"}]', '[{\"New York\": \"Location\"}, {\"Waldorf-Astoria\": \"Location\"}, {\"Chicago\": \"Location\"}, {\"Palmer House\": \"Location\"}, {\"Los Angeles\": \"Location\"}, {\"Coconut Grove\": \"Location\"}]', '[{\"New York\": \"Location\"}, {\"Waldorf-Astoria\": \"Location\"}, {\"Chicago\": \"Location\"}, {\"Palmer House\": \"Location\"}, {\"Los Angeles\": \"Location\"}, {\"Coconut Grove\": \"Location\"}]']",
        "prediction_per_consist": "[{'New York': 'Location', 'Waldorf-Astoria': 'Location', 'Chicago': 'Location', 'Palmer House': 'Location', 'Los Angeles': 'Location', 'Coconut Grove': 'Location'}, {'New York': 'Location', 'Waldorf-Astoria': 'Location', 'Chicago': 'Location', 'Palmer House': 'Location', 'Los Angeles': 'Location', 'Coconut Grove': 'Location'}, {'New York': 'Location', 'Waldorf-Astoria': 'Location', 'Chicago': 'Location', 'Palmer House': 'Location', 'Los Angeles': 'Location', 'Coconut Grove': 'Location'}, {'New York': 'Location', 'Waldorf-Astoria': 'Location', 'Chicago': 'Location', 'Palmer House': 'Location', 'Los Angeles': 'Location', 'Coconut Grove': 'Location'}, {'New York': 'Location', 'Waldorf-Astoria': 'Location', 'Chicago': 'Location', 'Palmer House': 'Location', 'Los Angeles': 'Location', 'Coconut Grove': 'Location'}]",
        "prediction": "{'New York': 'Location', 'Waldorf-Astoria': 'Location', 'Chicago': 'Location', 'Palmer House': 'Location', 'Los Angeles': 'Location', 'Coconut Grove': 'Location'}",
        "consistency_score": "{'entities': {('New York', 'Location'): 5, ('Waldorf-Astoria', 'Location'): 5, ('Chicago', 'Location'): 5, ('Palmer House', 'Location'): 5, ('Los Angeles', 'Location'): 5, ('Coconut Grove', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('New York', 'Location'): 5, ('Waldorf-Astoria', 'Location'): 5, ('Chicago', 'Location'): 5, ('Palmer House', 'Location'): 5, ('Los Angeles', 'Location'): 5, ('Coconut Grove', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 848,
        "sentence": "He originally studied at the University of Cambridge , before taking a PhD at the University of London in 1972 , supervised by Bertram Wehrfritz , with a dissertation on group theory .",
        "label": "{'University of Cambridge': 'Organization', 'Bertram Wehrfritz': 'Person', 'University of London': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He originally studied at the University of Cambridge , before taking a PhD at the University of London in 1972 , supervised by Bertram Wehrfritz , with a dissertation on group theory .\nAnswer: ",
        "responses": "['[{\"University of Cambridge\": \"Organization\"}, {\"University of London\": \"Organization\"}, {\"Bertram Wehrfritz\": \"Person\"}]', '[{\"University of Cambridge\": \"Organization\"}, {\"University of London\": \"Organization\"}, {\"Bertram Wehrfritz\": \"Person\"}]', '[{\"University of Cambridge\": \"Organization\"}, {\"University of London\": \"Organization\"}, {\"Bertram Wehrfritz\": \"Person\"}]', '[{\"University of Cambridge\": \"Organization\"}, {\"University of London\": \"Organization\"}, {\"Bertram Wehrfritz\": \"Person\"}]', '[{\"University of Cambridge\": \"Organization\"}, {\"University of London\": \"Organization\"}, {\"Bertram Wehrfritz\": \"Person\"}]']",
        "prediction_per_consist": "[{'University of Cambridge': 'Organization', 'University of London': 'Organization', 'Bertram Wehrfritz': 'Person'}, {'University of Cambridge': 'Organization', 'University of London': 'Organization', 'Bertram Wehrfritz': 'Person'}, {'University of Cambridge': 'Organization', 'University of London': 'Organization', 'Bertram Wehrfritz': 'Person'}, {'University of Cambridge': 'Organization', 'University of London': 'Organization', 'Bertram Wehrfritz': 'Person'}, {'University of Cambridge': 'Organization', 'University of London': 'Organization', 'Bertram Wehrfritz': 'Person'}]",
        "prediction": "{'University of Cambridge': 'Organization', 'University of London': 'Organization', 'Bertram Wehrfritz': 'Person'}",
        "consistency_score": "{'entities': {('University of Cambridge', 'Organization'): 5, ('University of London', 'Organization'): 5, ('Bertram Wehrfritz', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('University of Cambridge', 'Organization'): 5, ('University of London', 'Organization'): 5, ('Bertram Wehrfritz', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 132,
        "sentence": "6PR , known as 882 6PR , commenced broadcasting on October 14 , 1931 .",
        "label": "{'6PR': 'Organization', '882 6PR': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: 6PR , known as 882 6PR , commenced broadcasting on October 14 , 1931 .\nAnswer: ",
        "responses": "['[{\"6PR\": \"Organization\"}]', '[{\"6PR\": \"Organization\"}]', '[{\"6PR\": \"Organization\"}]', '[{\"6PR\": \"Organization\"}]', '[{\"6PR\": \"Organization\"}]']",
        "prediction_per_consist": "[{'6PR': 'Organization'}, {'6PR': 'Organization'}, {'6PR': 'Organization'}, {'6PR': 'Organization'}, {'6PR': 'Organization'}]",
        "prediction": "{'6PR': 'Organization'}",
        "consistency_score": "{'entities': {('6PR', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('6PR', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 974,
        "sentence": "In 1808 , Friedrich and Dorothea converted to Catholicism .",
        "label": "{'Dorothea': 'Person', 'Catholicism': 'Miscellaneous', 'Friedrich': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: In 1808 , Friedrich and Dorothea converted to Catholicism .\nAnswer: ",
        "responses": "['[{\"Friedrich\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Catholicism\": \"Miscellaneous\"}]', '[{\"Friedrich\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Catholicism\": \"Miscellaneous\"}]', '[{\"Friedrich\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Catholicism\": \"Miscellaneous\"}]', '[{\"Friedrich\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Catholicism\": \"Miscellaneous\"}]', '[{\"Friedrich\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Catholicism\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Friedrich': 'Person', 'Dorothea': 'Person', 'Catholicism': 'Miscellaneous'}, {'Friedrich': 'Person', 'Dorothea': 'Person', 'Catholicism': 'Miscellaneous'}, {'Friedrich': 'Person', 'Dorothea': 'Person', 'Catholicism': 'Miscellaneous'}, {'Friedrich': 'Person', 'Dorothea': 'Person', 'Catholicism': 'Miscellaneous'}, {'Friedrich': 'Person', 'Dorothea': 'Person', 'Catholicism': 'Miscellaneous'}]",
        "prediction": "{'Friedrich': 'Person', 'Dorothea': 'Person', 'Catholicism': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Friedrich', 'Person'): 5, ('Dorothea', 'Person'): 5, ('Catholicism', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Friedrich', 'Person'): 5, ('Dorothea', 'Person'): 5, ('Catholicism', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 925,
        "sentence": "After Diego Silang 's death , his wife , Josefa Gabriela , took over the revolt and fought courageously .",
        "label": "{'Josefa Gabriela': 'Person', 'Diego Silang': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: After Diego Silang 's death , his wife , Josefa Gabriela , took over the revolt and fought courageously .\nAnswer: ",
        "responses": "['[{\"Diego Silang\": \"Person\"}, {\"Josefa Gabriela\": \"Person\"}]', '[{\"Diego Silang\": \"Person\"}, {\"Josefa Gabriela\": \"Person\"}]', '[{\"Diego Silang\": \"Person\"}, {\"Josefa Gabriela\": \"Person\"}]', '[{\"Diego Silang\": \"Person\"}, {\"Josefa Gabriela\": \"Person\"}]', '[{\"Diego Silang\": \"Person\"}, {\"Josefa Gabriela\": \"Person\"}]']",
        "prediction_per_consist": "[{'Diego Silang': 'Person', 'Josefa Gabriela': 'Person'}, {'Diego Silang': 'Person', 'Josefa Gabriela': 'Person'}, {'Diego Silang': 'Person', 'Josefa Gabriela': 'Person'}, {'Diego Silang': 'Person', 'Josefa Gabriela': 'Person'}, {'Diego Silang': 'Person', 'Josefa Gabriela': 'Person'}]",
        "prediction": "{'Diego Silang': 'Person', 'Josefa Gabriela': 'Person'}",
        "consistency_score": "{'entities': {('Diego Silang', 'Person'): 5, ('Josefa Gabriela', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Diego Silang', 'Person'): 5, ('Josefa Gabriela', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1308,
        "sentence": "Has a daughter named Breana Symone from his first marriage .",
        "label": "{'Breana Symone': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Has a daughter named Breana Symone from his first marriage .\nAnswer: ",
        "responses": "['[{\"Breana Symone\": \"Person\"}]', '[{\"Breana Symone\": \"Person\"}]', '[{\"Breana Symone\": \"Person\"}]', '[{\"Breana Symone\": \"Person\"}]', '[{\"Breana Symone\": \"Person\"}]']",
        "prediction_per_consist": "[{'Breana Symone': 'Person'}, {'Breana Symone': 'Person'}, {'Breana Symone': 'Person'}, {'Breana Symone': 'Person'}, {'Breana Symone': 'Person'}]",
        "prediction": "{'Breana Symone': 'Person'}",
        "consistency_score": "{'entities': {('Breana Symone', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Breana Symone', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 742,
        "sentence": "Some students at the school told the media after the incident that they knew he had \" something planned \" .",
        "label": "{}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Some students at the school told the media after the incident that they knew he had \" something planned \" .\nAnswer: ",
        "responses": "['[{\"school\": \"Organization\"}]', '[{\"school\": \"Organization\"}]', '[{\"school\": \"Organization\"}]', '[{\"school\": \"Organization\"}]', '[{\"school\": \"Organization\"}]']",
        "prediction_per_consist": "[{'school': 'Organization'}, {'school': 'Organization'}, {'school': 'Organization'}, {'school': 'Organization'}, {'school': 'Organization'}]",
        "prediction": "{'school': 'Organization'}",
        "consistency_score": "{'entities': {('school', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('school', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 896,
        "sentence": "He is the lead guitarist and songwriter of the band Gigi .",
        "label": "{'Gigi': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He is the lead guitarist and songwriter of the band Gigi .\nAnswer: ",
        "responses": "['[{\"Gigi\": \"Organization\"}]', '[{\"Gigi\": \"Organization\"}]', '[{\"Gigi\": \"Organization\"}]', '[{\"Gigi\": \"Organization\"}]', '[{\"Gigi\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Gigi': 'Organization'}, {'Gigi': 'Organization'}, {'Gigi': 'Organization'}, {'Gigi': 'Organization'}, {'Gigi': 'Organization'}]",
        "prediction": "{'Gigi': 'Organization'}",
        "consistency_score": "{'entities': {('Gigi', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Gigi', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 669,
        "sentence": "Carter began playing his first professional gigs when he was nine .",
        "label": "{'Carter': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Carter began playing his first professional gigs when he was nine .\nAnswer: ",
        "responses": "['[{\"Carter\": \"Person\"}]', '[{\"Carter\": \"Person\"}]', '[{\"Carter\": \"Person\"}]', '[{\"Carter\": \"Person\"}]', '[{\"Carter\": \"Person\"}]']",
        "prediction_per_consist": "[{'Carter': 'Person'}, {'Carter': 'Person'}, {'Carter': 'Person'}, {'Carter': 'Person'}, {'Carter': 'Person'}]",
        "prediction": "{'Carter': 'Person'}",
        "consistency_score": "{'entities': {('Carter', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Carter', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 494,
        "sentence": "Was voted Longhorn Defensive MVP by the Dallas Morning News and Houston Post both in 1969 and 1970 .",
        "label": "{'Houston Post': 'Organization', 'Dallas Morning News': 'Organization', 'Longhorn Defensive MVP': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Was voted Longhorn Defensive MVP by the Dallas Morning News and Houston Post both in 1969 and 1970 .\nAnswer: ",
        "responses": "['[{\"Longhorn\": \"Organization\"}, {\"Dallas Morning News\": \"Organization\"}, {\"Houston Post\": \"Organization\"}]', '[{\"Longhorn\": \"Organization\"}, {\"Dallas Morning News\": \"Organization\"}, {\"Houston Post\": \"Organization\"}]', '[{\"Longhorn\": \"Organization\"}, {\"Dallas Morning News\": \"Organization\"}, {\"Houston Post\": \"Organization\"}]', '[{\"Longhorn\": \"Organization\"}, {\"Dallas Morning News\": \"Organization\"}, {\"Houston Post\": \"Organization\"}]', '[{\"Longhorn\": \"Organization\"}, {\"Dallas Morning News\": \"Organization\"}, {\"Houston Post\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Longhorn': 'Organization', 'Dallas Morning News': 'Organization', 'Houston Post': 'Organization'}, {'Longhorn': 'Organization', 'Dallas Morning News': 'Organization', 'Houston Post': 'Organization'}, {'Longhorn': 'Organization', 'Dallas Morning News': 'Organization', 'Houston Post': 'Organization'}, {'Longhorn': 'Organization', 'Dallas Morning News': 'Organization', 'Houston Post': 'Organization'}, {'Longhorn': 'Organization', 'Dallas Morning News': 'Organization', 'Houston Post': 'Organization'}]",
        "prediction": "{'Longhorn': 'Organization', 'Dallas Morning News': 'Organization', 'Houston Post': 'Organization'}",
        "consistency_score": "{'entities': {('Longhorn', 'Organization'): 5, ('Dallas Morning News', 'Organization'): 5, ('Houston Post', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Longhorn', 'Organization'): 5, ('Dallas Morning News', 'Organization'): 5, ('Houston Post', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1288,
        "sentence": "At the CIA fair , Hayley gets into an argument with Director Avery Bullock .",
        "label": "{'Hayley': 'Person', 'Avery Bullock': 'Person', 'CIA': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: At the CIA fair , Hayley gets into an argument with Director Avery Bullock .\nAnswer: ",
        "responses": "['[{\"CIA\": \"Organization\"}, {\"Hayley\": \"Person\"}, {\"Director Avery Bullock\": \"Person\"}]', '[{\"CIA\": \"Organization\"}, {\"Hayley\": \"Person\"}, {\"Director Avery Bullock\": \"Person\"}]', '[{\"CIA\": \"Organization\"}, {\"Hayley\": \"Person\"}, {\"Director Avery Bullock\": \"Person\"}]', '[{\"CIA\": \"Organization\"}, {\"Hayley\": \"Person\"}, {\"Director Avery Bullock\": \"Person\"}]', '[{\"CIA\": \"Organization\"}, {\"Hayley\": \"Person\"}, {\"Director Avery Bullock\": \"Person\"}]']",
        "prediction_per_consist": "[{'CIA': 'Organization', 'Hayley': 'Person', 'Director Avery Bullock': 'Person'}, {'CIA': 'Organization', 'Hayley': 'Person', 'Director Avery Bullock': 'Person'}, {'CIA': 'Organization', 'Hayley': 'Person', 'Director Avery Bullock': 'Person'}, {'CIA': 'Organization', 'Hayley': 'Person', 'Director Avery Bullock': 'Person'}, {'CIA': 'Organization', 'Hayley': 'Person', 'Director Avery Bullock': 'Person'}]",
        "prediction": "{'CIA': 'Organization', 'Hayley': 'Person', 'Director Avery Bullock': 'Person'}",
        "consistency_score": "{'entities': {('CIA', 'Organization'): 5, ('Hayley', 'Person'): 5, ('Director Avery Bullock', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('CIA', 'Organization'): 5, ('Hayley', 'Person'): 5, ('Director Avery Bullock', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 126,
        "sentence": "F-86 Sabre , 1957-1960 ; F-100 Super Sabre , 1958 -- 1961 ; F-104 Starfighter , 1959 -- 1964 ; F-102 Delta Dagger , 1960 -- 1964 ; F-105 Thunderchief , 1963 -- 1964 .",
        "label": "{'F-100 Super Sabre': 'Miscellaneous', 'F-102 Delta Dagger': 'Miscellaneous', 'F-86 Sabre': 'Miscellaneous', 'F-104 Starfighter': 'Miscellaneous', 'F-105 Thunderchief': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: F-86 Sabre , 1957-1960 ; F-100 Super Sabre , 1958 -- 1961 ; F-104 Starfighter , 1959 -- 1964 ; F-102 Delta Dagger , 1960 -- 1964 ; F-105 Thunderchief , 1963 -- 1964 .\nAnswer: ",
        "responses": "['[{\"F-86 Sabre\": \"Miscellaneous\"}, {\"F-100 Super Sabre\": \"Miscellaneous\"}, {\"F-104 Starfighter\": \"Miscellaneous\"}, {\"F-102 Delta Dagger\": \"Miscellaneous\"}, {\"F-105 Thunderchief\": \"Miscellaneous\"}]', '[{\"F-86 Sabre\": \"Miscellaneous\"}, {\"F-100 Super Sabre\": \"Miscellaneous\"}, {\"F-104 Starfighter\": \"Miscellaneous\"}, {\"F-102 Delta Dagger\": \"Miscellaneous\"}, {\"F-105 Thunderchief\": \"Miscellaneous\"}]', '[{\"F-86 Sabre\": \"Miscellaneous\"}, {\"F-100 Super Sabre\": \"Miscellaneous\"}, {\"F-104 Starfighter\": \"Miscellaneous\"}, {\"F-102 Delta Dagger\": \"Miscellaneous\"}, {\"F-105 Thunderchief\": \"Miscellaneous\"}]', '[{\"F-86 Sabre\": \"Miscellaneous\"}, {\"F-100 Super Sabre\": \"Miscellaneous\"}, {\"F-104 Starfighter\": \"Miscellaneous\"}, {\"F-102 Delta Dagger\": \"Miscellaneous\"}, {\"F-105 Thunderchief\": \"Miscellaneous\"}]', '[{\"F-86 Sabre\": \"Miscellaneous\"}, {\"F-100 Super Sabre\": \"Miscellaneous\"}, {\"F-104 Starfighter\": \"Miscellaneous\"}, {\"F-102 Delta Dagger\": \"Miscellaneous\"}, {\"F-105 Thunderchief\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'F-86 Sabre': 'Miscellaneous', 'F-100 Super Sabre': 'Miscellaneous', 'F-104 Starfighter': 'Miscellaneous', 'F-102 Delta Dagger': 'Miscellaneous', 'F-105 Thunderchief': 'Miscellaneous'}, {'F-86 Sabre': 'Miscellaneous', 'F-100 Super Sabre': 'Miscellaneous', 'F-104 Starfighter': 'Miscellaneous', 'F-102 Delta Dagger': 'Miscellaneous', 'F-105 Thunderchief': 'Miscellaneous'}, {'F-86 Sabre': 'Miscellaneous', 'F-100 Super Sabre': 'Miscellaneous', 'F-104 Starfighter': 'Miscellaneous', 'F-102 Delta Dagger': 'Miscellaneous', 'F-105 Thunderchief': 'Miscellaneous'}, {'F-86 Sabre': 'Miscellaneous', 'F-100 Super Sabre': 'Miscellaneous', 'F-104 Starfighter': 'Miscellaneous', 'F-102 Delta Dagger': 'Miscellaneous', 'F-105 Thunderchief': 'Miscellaneous'}, {'F-86 Sabre': 'Miscellaneous', 'F-100 Super Sabre': 'Miscellaneous', 'F-104 Starfighter': 'Miscellaneous', 'F-102 Delta Dagger': 'Miscellaneous', 'F-105 Thunderchief': 'Miscellaneous'}]",
        "prediction": "{'F-86 Sabre': 'Miscellaneous', 'F-100 Super Sabre': 'Miscellaneous', 'F-104 Starfighter': 'Miscellaneous', 'F-102 Delta Dagger': 'Miscellaneous', 'F-105 Thunderchief': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('F-86 Sabre', 'Miscellaneous'): 5, ('F-100 Super Sabre', 'Miscellaneous'): 5, ('F-104 Starfighter', 'Miscellaneous'): 5, ('F-102 Delta Dagger', 'Miscellaneous'): 5, ('F-105 Thunderchief', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('F-86 Sabre', 'Miscellaneous'): 5, ('F-100 Super Sabre', 'Miscellaneous'): 5, ('F-104 Starfighter', 'Miscellaneous'): 5, ('F-102 Delta Dagger', 'Miscellaneous'): 5, ('F-105 Thunderchief', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1171,
        "sentence": "Madrid , Spain , 8 April 1957 ; Torrejon Air Base , Spain , 1 October 1957 -- 1 January 1965 .",
        "label": "{'Spain': 'Location', 'Torrejon Air Base': 'Organization', 'Madrid': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Madrid , Spain , 8 April 1957 ; Torrejon Air Base , Spain , 1 October 1957 -- 1 January 1965 .\nAnswer: ",
        "responses": "['[{\"Madrid\": \"Location\"}, {\"Spain\": \"Location\"}, {\"Torrejon Air Base\": \"Location\"}, {\"Spain\": \"Location\"}]', '[{\"Madrid\": \"Location\"}, {\"Spain\": \"Location\"}, {\"Torrejon Air Base\": \"Location\"}, {\"Spain\": \"Location\"}]', '[{\"Madrid\": \"Location\"}, {\"Spain\": \"Location\"}, {\"Torrejon Air Base\": \"Location\"}, {\"Spain\": \"Location\"}]', '[{\"Madrid\": \"Location\"}, {\"Spain\": \"Location\"}, {\"Torrejon Air Base\": \"Location\"}, {\"Spain\": \"Location\"}]', '[{\"Madrid\": \"Location\"}, {\"Spain\": \"Location\"}, {\"Torrejon Air Base\": \"Location\"}, {\"Spain\": \"Location\"}]']",
        "prediction_per_consist": "[{'Madrid': 'Location', 'Spain': 'Location', 'Torrejon Air Base': 'Location'}, {'Madrid': 'Location', 'Spain': 'Location', 'Torrejon Air Base': 'Location'}, {'Madrid': 'Location', 'Spain': 'Location', 'Torrejon Air Base': 'Location'}, {'Madrid': 'Location', 'Spain': 'Location', 'Torrejon Air Base': 'Location'}, {'Madrid': 'Location', 'Spain': 'Location', 'Torrejon Air Base': 'Location'}]",
        "prediction": "{'Madrid': 'Location', 'Spain': 'Location', 'Torrejon Air Base': 'Location'}",
        "consistency_score": "{'entities': {('Madrid', 'Location'): 5, ('Spain', 'Location'): 5, ('Torrejon Air Base', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Madrid', 'Location'): 5, ('Spain', 'Location'): 5, ('Torrejon Air Base', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1162,
        "sentence": "The Echelon is a publicity street team for the band 30 Seconds to Mars , which helps in bringing friends to the shows , phoning local radio stations to request the band 's songs , putting up posters , posting to band forums or related bulletin boards online , and maintaining magazines or websites dedicated to the band .",
        "label": "{'30 Seconds to Mars': 'Organization', 'Echelon': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The Echelon is a publicity street team for the band 30 Seconds to Mars , which helps in bringing friends to the shows , phoning local radio stations to request the band 's songs , putting up posters , posting to band forums or related bulletin boards online , and maintaining magazines or websites dedicated to the band .\nAnswer: ",
        "responses": "['[{\"Echelon\": \"Organization\"}, {\"30 Seconds to Mars\": \"Organization\"}]', '[{\"Echelon\": \"Organization\"}, {\"30 Seconds to Mars\": \"Organization\"}]', '[{\"Echelon\": \"Organization\"}, {\"30 Seconds to Mars\": \"Organization\"}]', '[{\"Echelon\": \"Organization\"}, {\"30 Seconds to Mars\": \"Organization\"}]', '[{\"Echelon\": \"Organization\"}, {\"30 Seconds to Mars\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Echelon': 'Organization', '30 Seconds to Mars': 'Organization'}, {'Echelon': 'Organization', '30 Seconds to Mars': 'Organization'}, {'Echelon': 'Organization', '30 Seconds to Mars': 'Organization'}, {'Echelon': 'Organization', '30 Seconds to Mars': 'Organization'}, {'Echelon': 'Organization', '30 Seconds to Mars': 'Organization'}]",
        "prediction": "{'Echelon': 'Organization', '30 Seconds to Mars': 'Organization'}",
        "consistency_score": "{'entities': {('Echelon', 'Organization'): 5, ('30 Seconds to Mars', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Echelon', 'Organization'): 5, ('30 Seconds to Mars', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 15,
        "sentence": "After the surrender at Appomattox Courthouse , it was ordered to the North Carolina border to support William T. Sherman , but the Confederate surrender there made further support unnecessary .",
        "label": "{'William T. Sherman': 'Person', 'Appomattox Courthouse': 'Location', 'Confederate': 'Organization', 'North Carolina': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: After the surrender at Appomattox Courthouse , it was ordered to the North Carolina border to support William T. Sherman , but the Confederate surrender there made further support unnecessary .\nAnswer: ",
        "responses": "['[{\"Appomattox Courthouse\": \"Location\"}, {\"North Carolina\": \"Location\"}, {\"William T. Sherman\": \"Person\"}, {\"Confederate\": \"Organization\"}]', '[{\"Appomattox Courthouse\": \"Location\"}, {\"North Carolina\": \"Location\"}, {\"William T. Sherman\": \"Person\"}, {\"Confederate\": \"Organization\"}]', '[{\"Appomattox Courthouse\": \"Location\"}, {\"North Carolina\": \"Location\"}, {\"William T. Sherman\": \"Person\"}, {\"Confederate\": \"Organization\"}]', '[{\"Appomattox Courthouse\": \"Location\"}, {\"North Carolina\": \"Location\"}, {\"William T. Sherman\": \"Person\"}, {\"Confederate\": \"Organization\"}]', '[{\"Appomattox Courthouse\": \"Location\"}, {\"North Carolina\": \"Location\"}, {\"William T. Sherman\": \"Person\"}, {\"Confederate\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Appomattox Courthouse': 'Location', 'North Carolina': 'Location', 'William T. Sherman': 'Person', 'Confederate': 'Organization'}, {'Appomattox Courthouse': 'Location', 'North Carolina': 'Location', 'William T. Sherman': 'Person', 'Confederate': 'Organization'}, {'Appomattox Courthouse': 'Location', 'North Carolina': 'Location', 'William T. Sherman': 'Person', 'Confederate': 'Organization'}, {'Appomattox Courthouse': 'Location', 'North Carolina': 'Location', 'William T. Sherman': 'Person', 'Confederate': 'Organization'}, {'Appomattox Courthouse': 'Location', 'North Carolina': 'Location', 'William T. Sherman': 'Person', 'Confederate': 'Organization'}]",
        "prediction": "{'Appomattox Courthouse': 'Location', 'North Carolina': 'Location', 'William T. Sherman': 'Person', 'Confederate': 'Organization'}",
        "consistency_score": "{'entities': {('Appomattox Courthouse', 'Location'): 5, ('North Carolina', 'Location'): 5, ('William T. Sherman', 'Person'): 5, ('Confederate', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Appomattox Courthouse', 'Location'): 5, ('North Carolina', 'Location'): 5, ('William T. Sherman', 'Person'): 5, ('Confederate', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1009,
        "sentence": "Bobick had now improved enough as a boxer to be a legitimate title threat .",
        "label": "{'Bobick': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Bobick had now improved enough as a boxer to be a legitimate title threat .\nAnswer: ",
        "responses": "['[{\"Bobick\": \"Person\"}]', '[{\"Bobick\": \"Person\"}]', '[{\"Bobick\": \"Person\"}]', '[{\"Bobick\": \"Person\"}]', '[{\"Bobick\": \"Person\"}]']",
        "prediction_per_consist": "[{'Bobick': 'Person'}, {'Bobick': 'Person'}, {'Bobick': 'Person'}, {'Bobick': 'Person'}, {'Bobick': 'Person'}]",
        "prediction": "{'Bobick': 'Person'}",
        "consistency_score": "{'entities': {('Bobick', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Bobick', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1348,
        "sentence": "He was born in Satu Mare and debuted in Divizia A with Steaua Bucureşti in 1992 .",
        "label": "{'Steaua Bucureşti': 'Organization', 'Divizia A': 'Organization', 'Satu Mare': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He was born in Satu Mare and debuted in Divizia A with Steaua Bucureşti in 1992 .\nAnswer: ",
        "responses": "['[{\"Satu Mare\": \"Location\"}, {\"Divizia A\": \"Miscellaneous\"}, {\"Steaua Bucureşti\": \"Organization\"}, {\"1992\": \"Miscellaneous\"}]', '[{\"Satu Mare\": \"Location\"}, {\"Divizia A\": \"Miscellaneous\"}, {\"Steaua Bucureşti\": \"Organization\"}, {\"1992\": \"Miscellaneous\"}]', '[{\"Satu Mare\": \"Location\"}, {\"Divizia A\": \"Miscellaneous\"}, {\"Steaua Bucureşti\": \"Organization\"}, {\"1992\": \"Miscellaneous\"}]', '[{\"Satu Mare\": \"Location\"}, {\"Divizia A\": \"Miscellaneous\"}, {\"Steaua Bucureşti\": \"Organization\"}, {\"1992\": \"Miscellaneous\"}]', '[{\"Satu Mare\": \"Location\"}, {\"Divizia A\": \"Miscellaneous\"}, {\"Steaua Bucureşti\": \"Organization\"}, {\"1992\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Satu Mare': 'Location', 'Divizia A': 'Miscellaneous', 'Steaua Bucureşti': 'Organization', '1992': 'Miscellaneous'}, {'Satu Mare': 'Location', 'Divizia A': 'Miscellaneous', 'Steaua Bucureşti': 'Organization', '1992': 'Miscellaneous'}, {'Satu Mare': 'Location', 'Divizia A': 'Miscellaneous', 'Steaua Bucureşti': 'Organization', '1992': 'Miscellaneous'}, {'Satu Mare': 'Location', 'Divizia A': 'Miscellaneous', 'Steaua Bucureşti': 'Organization', '1992': 'Miscellaneous'}, {'Satu Mare': 'Location', 'Divizia A': 'Miscellaneous', 'Steaua Bucureşti': 'Organization', '1992': 'Miscellaneous'}]",
        "prediction": "{'Satu Mare': 'Location', 'Divizia A': 'Miscellaneous', 'Steaua Bucureşti': 'Organization', '1992': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Satu Mare', 'Location'): 5, ('Divizia A', 'Miscellaneous'): 5, ('Steaua Bucureşti', 'Organization'): 5, ('1992', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Satu Mare', 'Location'): 5, ('Divizia A', 'Miscellaneous'): 5, ('Steaua Bucureşti', 'Organization'): 5, ('1992', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1102,
        "sentence": "Also , another gamemode named \" Space Mix \" uses all four buttons along with all keys and turn tables ( excludes pedals ) , becoming the hardest gamemode in the game .",
        "label": "{}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Also , another gamemode named \" Space Mix \" uses all four buttons along with all keys and turn tables ( excludes pedals ) , becoming the hardest gamemode in the game .\nAnswer: ",
        "responses": "['[{\"Space Mix\": \"Miscellaneous\"}]', '[{\"Space Mix\": \"Miscellaneous\"}]', '[{\"Space Mix\": \"Miscellaneous\"}]', '[{\"Space Mix\": \"Miscellaneous\"}]', '[{\"Space Mix\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Space Mix': 'Miscellaneous'}, {'Space Mix': 'Miscellaneous'}, {'Space Mix': 'Miscellaneous'}, {'Space Mix': 'Miscellaneous'}, {'Space Mix': 'Miscellaneous'}]",
        "prediction": "{'Space Mix': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Space Mix', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Space Mix', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 750,
        "sentence": "The circuit was inaugurated on August , 7 , 1948 .",
        "label": "{}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The circuit was inaugurated on August , 7 , 1948 .\nAnswer: ",
        "responses": "['[{\"August\": \"Miscellaneous\"}]', '[{\"August\": \"Miscellaneous\"}]', '[{\"August\": \"Miscellaneous\"}]', '[{\"August\": \"Miscellaneous\"}]', '[{\"August\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'August': 'Miscellaneous'}, {'August': 'Miscellaneous'}, {'August': 'Miscellaneous'}, {'August': 'Miscellaneous'}, {'August': 'Miscellaneous'}]",
        "prediction": "{'August': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('August', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('August', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 698,
        "sentence": "Gaudin attended Crescent City High School in Metairie , Louisiana .",
        "label": "{'Louisiana': 'Location', 'Crescent City High School': 'Organization', 'Metairie': 'Location', 'Gaudin': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Gaudin attended Crescent City High School in Metairie , Louisiana .\nAnswer: ",
        "responses": "['[{\"Gaudin\": \"Person\"}, {\"Crescent City High School\": \"Organization\"}, {\"Metairie\": \"Location\"}, {\"Louisiana\": \"Location\"}]', '[{\"Gaudin\": \"Person\"}, {\"Crescent City High School\": \"Organization\"}, {\"Metairie\": \"Location\"}, {\"Louisiana\": \"Location\"}]', '[{\"Gaudin\": \"Person\"}, {\"Crescent City High School\": \"Organization\"}, {\"Metairie\": \"Location\"}, {\"Louisiana\": \"Location\"}]', '[{\"Gaudin\": \"Person\"}, {\"Crescent City High School\": \"Organization\"}, {\"Metairie\": \"Location\"}, {\"Louisiana\": \"Location\"}]', '[{\"Gaudin\": \"Person\"}, {\"Crescent City High School\": \"Organization\"}, {\"Metairie\": \"Location\"}, {\"Louisiana\": \"Location\"}]']",
        "prediction_per_consist": "[{'Gaudin': 'Person', 'Crescent City High School': 'Organization', 'Metairie': 'Location', 'Louisiana': 'Location'}, {'Gaudin': 'Person', 'Crescent City High School': 'Organization', 'Metairie': 'Location', 'Louisiana': 'Location'}, {'Gaudin': 'Person', 'Crescent City High School': 'Organization', 'Metairie': 'Location', 'Louisiana': 'Location'}, {'Gaudin': 'Person', 'Crescent City High School': 'Organization', 'Metairie': 'Location', 'Louisiana': 'Location'}, {'Gaudin': 'Person', 'Crescent City High School': 'Organization', 'Metairie': 'Location', 'Louisiana': 'Location'}]",
        "prediction": "{'Gaudin': 'Person', 'Crescent City High School': 'Organization', 'Metairie': 'Location', 'Louisiana': 'Location'}",
        "consistency_score": "{'entities': {('Gaudin', 'Person'): 5, ('Crescent City High School', 'Organization'): 5, ('Metairie', 'Location'): 5, ('Louisiana', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Gaudin', 'Person'): 5, ('Crescent City High School', 'Organization'): 5, ('Metairie', 'Location'): 5, ('Louisiana', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 957,
        "sentence": "From the top of the hill , superb panoramic views of the surrounding countryside , including Old Goa , the capital of Goa , Panaji , the meandering Mandovi river , and the bridges across it can be seen .",
        "label": "{'Mandovi river': 'Location', 'Old Goa': 'Location', 'Goa': 'Location', 'Panaji': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: From the top of the hill , superb panoramic views of the surrounding countryside , including Old Goa , the capital of Goa , Panaji , the meandering Mandovi river , and the bridges across it can be seen .\nAnswer: ",
        "responses": "['[{\"Goa\": \"Location\"}, {\"Panaji\": \"Location\"}, {\"Mandovi river\": \"Location\"}]', '[{\"Goa\": \"Location\"}, {\"Panaji\": \"Location\"}, {\"Mandovi river\": \"Location\"}]', '[{\"Goa\": \"Location\"}, {\"Panaji\": \"Location\"}, {\"Mandovi river\": \"Location\"}]', '[{\"Goa\": \"Location\"}, {\"Panaji\": \"Location\"}, {\"Mandovi river\": \"Location\"}]', '[{\"Goa\": \"Location\"}, {\"Panaji\": \"Location\"}, {\"Mandovi river\": \"Location\"}]']",
        "prediction_per_consist": "[{'Goa': 'Location', 'Panaji': 'Location', 'Mandovi river': 'Location'}, {'Goa': 'Location', 'Panaji': 'Location', 'Mandovi river': 'Location'}, {'Goa': 'Location', 'Panaji': 'Location', 'Mandovi river': 'Location'}, {'Goa': 'Location', 'Panaji': 'Location', 'Mandovi river': 'Location'}, {'Goa': 'Location', 'Panaji': 'Location', 'Mandovi river': 'Location'}]",
        "prediction": "{'Goa': 'Location', 'Panaji': 'Location', 'Mandovi river': 'Location'}",
        "consistency_score": "{'entities': {('Goa', 'Location'): 5, ('Panaji', 'Location'): 5, ('Mandovi river', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Goa', 'Location'): 5, ('Panaji', 'Location'): 5, ('Mandovi river', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1067,
        "sentence": "He was a member of the Ohio Senate from 1830 to 1832 and was elected as an Anti-Jacksonian to the Twenty-fourth United States Congress , serving from March 4 1835 to March 3 1837 .",
        "label": "{'Ohio Senate': 'Organization', 'United States Congress': 'Organization', 'Anti-Jacksonian': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He was a member of the Ohio Senate from 1830 to 1832 and was elected as an Anti-Jacksonian to the Twenty-fourth United States Congress , serving from March 4 1835 to March 3 1837 .\nAnswer: ",
        "responses": "['[{\"Ohio Senate\": \"Organization\"}, {\"Anti-Jacksonian\": \"Miscellaneous\"}, {\"Twenty-fourth United States Congress\": \"Organization\"}]', '[{\"Ohio Senate\": \"Organization\"}, {\"Anti-Jacksonian\": \"Miscellaneous\"}, {\"Twenty-fourth United States Congress\": \"Organization\"}]', '[{\"Ohio Senate\": \"Organization\"}, {\"Anti-Jacksonian\": \"Miscellaneous\"}, {\"Twenty-fourth United States Congress\": \"Organization\"}]', '[{\"Ohio Senate\": \"Organization\"}, {\"Anti-Jacksonian\": \"Miscellaneous\"}, {\"Twenty-fourth United States Congress\": \"Organization\"}]', '[{\"Ohio Senate\": \"Organization\"}, {\"Anti-Jacksonian\": \"Miscellaneous\"}, {\"Twenty-fourth United States Congress\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Ohio Senate': 'Organization', 'Anti-Jacksonian': 'Miscellaneous', 'Twenty-fourth United States Congress': 'Organization'}, {'Ohio Senate': 'Organization', 'Anti-Jacksonian': 'Miscellaneous', 'Twenty-fourth United States Congress': 'Organization'}, {'Ohio Senate': 'Organization', 'Anti-Jacksonian': 'Miscellaneous', 'Twenty-fourth United States Congress': 'Organization'}, {'Ohio Senate': 'Organization', 'Anti-Jacksonian': 'Miscellaneous', 'Twenty-fourth United States Congress': 'Organization'}, {'Ohio Senate': 'Organization', 'Anti-Jacksonian': 'Miscellaneous', 'Twenty-fourth United States Congress': 'Organization'}]",
        "prediction": "{'Ohio Senate': 'Organization', 'Anti-Jacksonian': 'Miscellaneous', 'Twenty-fourth United States Congress': 'Organization'}",
        "consistency_score": "{'entities': {('Ohio Senate', 'Organization'): 5, ('Anti-Jacksonian', 'Miscellaneous'): 5, ('Twenty-fourth United States Congress', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Ohio Senate', 'Organization'): 5, ('Anti-Jacksonian', 'Miscellaneous'): 5, ('Twenty-fourth United States Congress', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1322,
        "sentence": "New script editor Eric Saward requested that Bailey devise another story idea , but neither the submitted outlines for May Time ( later renamed Manwatch ) nor The Children of Seth were taken further .",
        "label": "{'Manwatch': 'Miscellaneous', 'May Time': 'Miscellaneous', 'Bailey': 'Person', 'The Children of Seth': 'Miscellaneous', 'Eric Saward': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: New script editor Eric Saward requested that Bailey devise another story idea , but neither the submitted outlines for May Time ( later renamed Manwatch ) nor The Children of Seth were taken further .\nAnswer: ",
        "responses": "['[{\"Eric Saward\": \"Person\"}, {\"Bailey\": \"Person\"}, {\"May Time\": \"Miscellaneous\"}, {\"Manwatch\": \"Miscellaneous\"}, {\"The Children of Seth\": \"Miscellaneous\"}]', '[{\"Eric Saward\": \"Person\"}, {\"Bailey\": \"Person\"}, {\"May Time\": \"Miscellaneous\"}, {\"Manwatch\": \"Miscellaneous\"}, {\"The Children of Seth\": \"Miscellaneous\"}]', '[{\"Eric Saward\": \"Person\"}, {\"Bailey\": \"Person\"}, {\"May Time\": \"Miscellaneous\"}, {\"Manwatch\": \"Miscellaneous\"}, {\"The Children of Seth\": \"Miscellaneous\"}]', '[{\"Eric Saward\": \"Person\"}, {\"Bailey\": \"Person\"}, {\"May Time\": \"Miscellaneous\"}, {\"Manwatch\": \"Miscellaneous\"}, {\"The Children of Seth\": \"Miscellaneous\"}]', '[{\"Eric Saward\": \"Person\"}, {\"Bailey\": \"Person\"}, {\"May Time\": \"Miscellaneous\"}, {\"Manwatch\": \"Miscellaneous\"}, {\"The Children of Seth\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Eric Saward': 'Person', 'Bailey': 'Person', 'May Time': 'Miscellaneous', 'Manwatch': 'Miscellaneous', 'The Children of Seth': 'Miscellaneous'}, {'Eric Saward': 'Person', 'Bailey': 'Person', 'May Time': 'Miscellaneous', 'Manwatch': 'Miscellaneous', 'The Children of Seth': 'Miscellaneous'}, {'Eric Saward': 'Person', 'Bailey': 'Person', 'May Time': 'Miscellaneous', 'Manwatch': 'Miscellaneous', 'The Children of Seth': 'Miscellaneous'}, {'Eric Saward': 'Person', 'Bailey': 'Person', 'May Time': 'Miscellaneous', 'Manwatch': 'Miscellaneous', 'The Children of Seth': 'Miscellaneous'}, {'Eric Saward': 'Person', 'Bailey': 'Person', 'May Time': 'Miscellaneous', 'Manwatch': 'Miscellaneous', 'The Children of Seth': 'Miscellaneous'}]",
        "prediction": "{'Eric Saward': 'Person', 'Bailey': 'Person', 'May Time': 'Miscellaneous', 'Manwatch': 'Miscellaneous', 'The Children of Seth': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Eric Saward', 'Person'): 5, ('Bailey', 'Person'): 5, ('May Time', 'Miscellaneous'): 5, ('Manwatch', 'Miscellaneous'): 5, ('The Children of Seth', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Eric Saward', 'Person'): 5, ('Bailey', 'Person'): 5, ('May Time', 'Miscellaneous'): 5, ('Manwatch', 'Miscellaneous'): 5, ('The Children of Seth', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 639,
        "sentence": "Whilst still a teenager , Citrone opened a gymnasium in North Shields and met Sunderland A.F.C. footballer Dave Buchanan , with whom he bought a health club in Redcar .",
        "label": "{'Sunderland A.F.C.': 'Organization', 'Citrone': 'Person', 'Dave Buchanan': 'Person', 'North Shields': 'Location', 'Redcar': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Whilst still a teenager , Citrone opened a gymnasium in North Shields and met Sunderland A.F.C. footballer Dave Buchanan , with whom he bought a health club in Redcar .\nAnswer: ",
        "responses": "['[{\"Citrone\": \"Person\"}, {\"North Shields\": \"Location\"}, {\"Sunderland A.F.C.\": \"Organization\"}, {\"Dave Buchanan\": \"Person\"}, {\"Redcar\": \"Location\"}]', '[{\"Citrone\": \"Person\"}, {\"North Shields\": \"Location\"}, {\"Sunderland A.F.C.\": \"Organization\"}, {\"Dave Buchanan\": \"Person\"}, {\"Redcar\": \"Location\"}]', '[{\"Citrone\": \"Person\"}, {\"North Shields\": \"Location\"}, {\"Sunderland A.F.C.\": \"Organization\"}, {\"Dave Buchanan\": \"Person\"}, {\"Redcar\": \"Location\"}]', '[{\"Citrone\": \"Person\"}, {\"North Shields\": \"Location\"}, {\"Sunderland A.F.C.\": \"Organization\"}, {\"Dave Buchanan\": \"Person\"}, {\"Redcar\": \"Location\"}]', '[{\"Citrone\": \"Person\"}, {\"North Shields\": \"Location\"}, {\"Sunderland A.F.C.\": \"Organization\"}, {\"Dave Buchanan\": \"Person\"}, {\"Redcar\": \"Location\"}]']",
        "prediction_per_consist": "[{'Citrone': 'Person', 'North Shields': 'Location', 'Sunderland A.F.C.': 'Organization', 'Dave Buchanan': 'Person', 'Redcar': 'Location'}, {'Citrone': 'Person', 'North Shields': 'Location', 'Sunderland A.F.C.': 'Organization', 'Dave Buchanan': 'Person', 'Redcar': 'Location'}, {'Citrone': 'Person', 'North Shields': 'Location', 'Sunderland A.F.C.': 'Organization', 'Dave Buchanan': 'Person', 'Redcar': 'Location'}, {'Citrone': 'Person', 'North Shields': 'Location', 'Sunderland A.F.C.': 'Organization', 'Dave Buchanan': 'Person', 'Redcar': 'Location'}, {'Citrone': 'Person', 'North Shields': 'Location', 'Sunderland A.F.C.': 'Organization', 'Dave Buchanan': 'Person', 'Redcar': 'Location'}]",
        "prediction": "{'Citrone': 'Person', 'North Shields': 'Location', 'Sunderland A.F.C.': 'Organization', 'Dave Buchanan': 'Person', 'Redcar': 'Location'}",
        "consistency_score": "{'entities': {('Citrone', 'Person'): 5, ('North Shields', 'Location'): 5, ('Sunderland A.F.C.', 'Organization'): 5, ('Dave Buchanan', 'Person'): 5, ('Redcar', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Citrone', 'Person'): 5, ('North Shields', 'Location'): 5, ('Sunderland A.F.C.', 'Organization'): 5, ('Dave Buchanan', 'Person'): 5, ('Redcar', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 107,
        "sentence": "Its fighter squadrons flew air defense interceptions over Spanish airspace .",
        "label": "{'Spanish': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Its fighter squadrons flew air defense interceptions over Spanish airspace .\nAnswer: ",
        "responses": "['[{\"Spanish\": \"Location\"}]', '[{\"Spanish\": \"Location\"}]', '[{\"Spanish\": \"Location\"}]', '[{\"Spanish\": \"Location\"}]', '[{\"Spanish\": \"Location\"}]']",
        "prediction_per_consist": "[{'Spanish': 'Location'}, {'Spanish': 'Location'}, {'Spanish': 'Location'}, {'Spanish': 'Location'}, {'Spanish': 'Location'}]",
        "prediction": "{'Spanish': 'Location'}",
        "consistency_score": "{'entities': {('Spanish', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Spanish', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 745,
        "sentence": "Chris Penley 's death gave 9 people vital organs .",
        "label": "{'Chris Penley': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Chris Penley 's death gave 9 people vital organs .\nAnswer: ",
        "responses": "['[{\"Chris Penley\": \"Person\"}]', '[{\"Chris Penley\": \"Person\"}]', '[{\"Chris Penley\": \"Person\"}]', '[{\"Chris Penley\": \"Person\"}]', '[{\"Chris Penley\": \"Person\"}]']",
        "prediction_per_consist": "[{'Chris Penley': 'Person'}, {'Chris Penley': 'Person'}, {'Chris Penley': 'Person'}, {'Chris Penley': 'Person'}, {'Chris Penley': 'Person'}]",
        "prediction": "{'Chris Penley': 'Person'}",
        "consistency_score": "{'entities': {('Chris Penley', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Chris Penley', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1214,
        "sentence": "A Portuguesa is the national anthem of Portugal .",
        "label": "{'A Portuguesa': 'Miscellaneous', 'Portugal': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: A Portuguesa is the national anthem of Portugal .\nAnswer: ",
        "responses": "['[{\"Portuguesa\": \"Miscellaneous\"}, {\"Portugal\": \"Location\"}]', '[{\"Portuguesa\": \"Miscellaneous\"}, {\"Portugal\": \"Location\"}]', '[{\"Portuguesa\": \"Miscellaneous\"}, {\"Portugal\": \"Location\"}]', '[{\"Portuguesa\": \"Miscellaneous\"}, {\"Portugal\": \"Location\"}]', '[{\"Portuguesa\": \"Miscellaneous\"}, {\"Portugal\": \"Location\"}]']",
        "prediction_per_consist": "[{'Portuguesa': 'Miscellaneous', 'Portugal': 'Location'}, {'Portuguesa': 'Miscellaneous', 'Portugal': 'Location'}, {'Portuguesa': 'Miscellaneous', 'Portugal': 'Location'}, {'Portuguesa': 'Miscellaneous', 'Portugal': 'Location'}, {'Portuguesa': 'Miscellaneous', 'Portugal': 'Location'}]",
        "prediction": "{'Portuguesa': 'Miscellaneous', 'Portugal': 'Location'}",
        "consistency_score": "{'entities': {('Portuguesa', 'Miscellaneous'): 5, ('Portugal', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Portuguesa', 'Miscellaneous'): 5, ('Portugal', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 395,
        "sentence": "The realist troops were encamped at Condo-Condo under the orders of Pazuela and Major Saturnino Castro , which allowed them to cut off Cárdenas ' troops and any communication between Belgrano and the Cochabamban forces .",
        "label": "{'Cárdenas': 'Person', 'Saturnino Castro': 'Person', 'Belgrano': 'Person', 'Cochabamban': 'Miscellaneous', 'Condo-Condo': 'Location', 'Pazuela': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The realist troops were encamped at Condo-Condo under the orders of Pazuela and Major Saturnino Castro , which allowed them to cut off Cárdenas ' troops and any communication between Belgrano and the Cochabamban forces .\nAnswer: ",
        "responses": "['[{\"Pazuela\": \"Person\"}, {\"Major Saturnino Castro\": \"Person\"}, {\"Cárdenas\": \"Person\"}, {\"Belgrano\": \"Person\"}, {\"Cochabamban\": \"Location\"}]', '[{\"Pazuela\": \"Person\"}, {\"Major Saturnino Castro\": \"Person\"}, {\"Cárdenas\": \"Person\"}, {\"Belgrano\": \"Person\"}, {\"Cochabamban\": \"Location\"}]', '[{\"Pazuela\": \"Person\"}, {\"Major Saturnino Castro\": \"Person\"}, {\"Cárdenas\": \"Person\"}, {\"Belgrano\": \"Person\"}, {\"Cochabamban\": \"Location\"}]', '[{\"Pazuela\": \"Person\"}, {\"Major Saturnino Castro\": \"Person\"}, {\"Cárdenas\": \"Person\"}, {\"Belgrano\": \"Person\"}, {\"Cochabamban\": \"Location\"}]', '[{\"Pazuela\": \"Person\"}, {\"Major Saturnino Castro\": \"Person\"}, {\"Cárdenas\": \"Person\"}, {\"Belgrano\": \"Person\"}, {\"Cochabamban\": \"Location\"}]']",
        "prediction_per_consist": "[{'Pazuela': 'Person', 'Major Saturnino Castro': 'Person', 'Cárdenas': 'Person', 'Belgrano': 'Person', 'Cochabamban': 'Location'}, {'Pazuela': 'Person', 'Major Saturnino Castro': 'Person', 'Cárdenas': 'Person', 'Belgrano': 'Person', 'Cochabamban': 'Location'}, {'Pazuela': 'Person', 'Major Saturnino Castro': 'Person', 'Cárdenas': 'Person', 'Belgrano': 'Person', 'Cochabamban': 'Location'}, {'Pazuela': 'Person', 'Major Saturnino Castro': 'Person', 'Cárdenas': 'Person', 'Belgrano': 'Person', 'Cochabamban': 'Location'}, {'Pazuela': 'Person', 'Major Saturnino Castro': 'Person', 'Cárdenas': 'Person', 'Belgrano': 'Person', 'Cochabamban': 'Location'}]",
        "prediction": "{'Pazuela': 'Person', 'Major Saturnino Castro': 'Person', 'Cárdenas': 'Person', 'Belgrano': 'Person', 'Cochabamban': 'Location'}",
        "consistency_score": "{'entities': {('Pazuela', 'Person'): 5, ('Major Saturnino Castro', 'Person'): 5, ('Cárdenas', 'Person'): 5, ('Belgrano', 'Person'): 5, ('Cochabamban', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Pazuela', 'Person'): 5, ('Major Saturnino Castro', 'Person'): 5, ('Cárdenas', 'Person'): 5, ('Belgrano', 'Person'): 5, ('Cochabamban', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1046,
        "sentence": "However this was not the first time Hitzig had experienced the interaction between the brain and electricity ; earlier in his career as a physician working with the Prussian Army he experimented on wounded soldiers whose skulls were fractured by bullets .",
        "label": "{'Hitzig': 'Person', 'Prussian Army': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: However this was not the first time Hitzig had experienced the interaction between the brain and electricity ; earlier in his career as a physician working with the Prussian Army he experimented on wounded soldiers whose skulls were fractured by bullets .\nAnswer: ",
        "responses": "['[{\"Hitzig\": \"Person\"}, {\"Prussian Army\": \"Organization\"}]', '[{\"Hitzig\": \"Person\"}, {\"Prussian Army\": \"Organization\"}]', '[{\"Hitzig\": \"Person\"}, {\"Prussian Army\": \"Organization\"}]', '[{\"Hitzig\": \"Person\"}, {\"Prussian Army\": \"Organization\"}]', '[{\"Hitzig\": \"Person\"}, {\"Prussian Army\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Hitzig': 'Person', 'Prussian Army': 'Organization'}, {'Hitzig': 'Person', 'Prussian Army': 'Organization'}, {'Hitzig': 'Person', 'Prussian Army': 'Organization'}, {'Hitzig': 'Person', 'Prussian Army': 'Organization'}, {'Hitzig': 'Person', 'Prussian Army': 'Organization'}]",
        "prediction": "{'Hitzig': 'Person', 'Prussian Army': 'Organization'}",
        "consistency_score": "{'entities': {('Hitzig', 'Person'): 5, ('Prussian Army', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Hitzig', 'Person'): 5, ('Prussian Army', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 354,
        "sentence": "Its current president is Kang Young Joong .",
        "label": "{'Kang Young Joong': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Its current president is Kang Young Joong .\nAnswer: ",
        "responses": "['[{\"Kang Young Joong\": \"Person\"}]', '[{\"Kang Young Joong\": \"Person\"}]', '[{\"Kang Young Joong\": \"Person\"}]', '[{\"Kang Young Joong\": \"Person\"}]', '[{\"Kang Young Joong\": \"Person\"}]']",
        "prediction_per_consist": "[{'Kang Young Joong': 'Person'}, {'Kang Young Joong': 'Person'}, {'Kang Young Joong': 'Person'}, {'Kang Young Joong': 'Person'}, {'Kang Young Joong': 'Person'}]",
        "prediction": "{'Kang Young Joong': 'Person'}",
        "consistency_score": "{'entities': {('Kang Young Joong', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Kang Young Joong', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 981,
        "sentence": "To fully appreciate the importance of this cultural scene , see the entries for Moses Mendelssohn , Gotthold Ephraim Lessing , Friedrich Schlegel , Germaine de Staë , Felix Mendelssohn , Ludwi Tieck , Novalis , and others .",
        "label": "{'Felix Mendelssohn': 'Person', 'Friedrich Schlegel': 'Person', 'Moses Mendelssohn': 'Person', 'Ludwi Tieck': 'Person', 'Gotthold Ephraim Lessing': 'Person', 'Novalis': 'Person', 'Germaine de Staë': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: To fully appreciate the importance of this cultural scene , see the entries for Moses Mendelssohn , Gotthold Ephraim Lessing , Friedrich Schlegel , Germaine de Staë , Felix Mendelssohn , Ludwi Tieck , Novalis , and others .\nAnswer: ",
        "responses": "['[{\"Moses Mendelssohn\": \"Person\"}, {\"Gotthold Ephraim Lessing\": \"Person\"}, {\"Friedrich Schlegel\": \"Person\"}, {\"Germaine de Staë\": \"Person\"}, {\"Felix Mendelssohn\": \"Person\"}, {\"Ludwi Tieck\": \"Person\"}, {\"Novalis\": \"Person\"}]', '[{\"Moses Mendelssohn\": \"Person\"}, {\"Gotthold Ephraim Lessing\": \"Person\"}, {\"Friedrich Schlegel\": \"Person\"}, {\"Germaine de Staë\": \"Person\"}, {\"Felix Mendelssohn\": \"Person\"}, {\"Ludwi Tieck\": \"Person\"}, {\"Novalis\": \"Person\"}]', '[{\"Moses Mendelssohn\": \"Person\"}, {\"Gotthold Ephraim Lessing\": \"Person\"}, {\"Friedrich Schlegel\": \"Person\"}, {\"Germaine de Staë\": \"Person\"}, {\"Felix Mendelssohn\": \"Person\"}, {\"Ludwi Tieck\": \"Person\"}, {\"Novalis\": \"Person\"}]', '[{\"Moses Mendelssohn\": \"Person\"}, {\"Gotthold Ephraim Lessing\": \"Person\"}, {\"Friedrich Schlegel\": \"Person\"}, {\"Germaine de Staë\": \"Person\"}, {\"Felix Mendelssohn\": \"Person\"}, {\"Ludwi Tieck\": \"Person\"}, {\"Novalis\": \"Person\"}]', '[{\"Moses Mendelssohn\": \"Person\"}, {\"Gotthold Ephraim Lessing\": \"Person\"}, {\"Friedrich Schlegel\": \"Person\"}, {\"Germaine de Staë\": \"Person\"}, {\"Felix Mendelssohn\": \"Person\"}, {\"Ludwi Tieck\": \"Person\"}, {\"Novalis\": \"Person\"}]']",
        "prediction_per_consist": "[{'Moses Mendelssohn': 'Person', 'Gotthold Ephraim Lessing': 'Person', 'Friedrich Schlegel': 'Person', 'Germaine de Staë': 'Person', 'Felix Mendelssohn': 'Person', 'Ludwi Tieck': 'Person', 'Novalis': 'Person'}, {'Moses Mendelssohn': 'Person', 'Gotthold Ephraim Lessing': 'Person', 'Friedrich Schlegel': 'Person', 'Germaine de Staë': 'Person', 'Felix Mendelssohn': 'Person', 'Ludwi Tieck': 'Person', 'Novalis': 'Person'}, {'Moses Mendelssohn': 'Person', 'Gotthold Ephraim Lessing': 'Person', 'Friedrich Schlegel': 'Person', 'Germaine de Staë': 'Person', 'Felix Mendelssohn': 'Person', 'Ludwi Tieck': 'Person', 'Novalis': 'Person'}, {'Moses Mendelssohn': 'Person', 'Gotthold Ephraim Lessing': 'Person', 'Friedrich Schlegel': 'Person', 'Germaine de Staë': 'Person', 'Felix Mendelssohn': 'Person', 'Ludwi Tieck': 'Person', 'Novalis': 'Person'}, {'Moses Mendelssohn': 'Person', 'Gotthold Ephraim Lessing': 'Person', 'Friedrich Schlegel': 'Person', 'Germaine de Staë': 'Person', 'Felix Mendelssohn': 'Person', 'Ludwi Tieck': 'Person', 'Novalis': 'Person'}]",
        "prediction": "{'Moses Mendelssohn': 'Person', 'Gotthold Ephraim Lessing': 'Person', 'Friedrich Schlegel': 'Person', 'Germaine de Staë': 'Person', 'Felix Mendelssohn': 'Person', 'Ludwi Tieck': 'Person', 'Novalis': 'Person'}",
        "consistency_score": "{'entities': {('Moses Mendelssohn', 'Person'): 5, ('Gotthold Ephraim Lessing', 'Person'): 5, ('Friedrich Schlegel', 'Person'): 5, ('Germaine de Staë', 'Person'): 5, ('Felix Mendelssohn', 'Person'): 5, ('Ludwi Tieck', 'Person'): 5, ('Novalis', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Moses Mendelssohn', 'Person'): 5, ('Gotthold Ephraim Lessing', 'Person'): 5, ('Friedrich Schlegel', 'Person'): 5, ('Germaine de Staë', 'Person'): 5, ('Felix Mendelssohn', 'Person'): 5, ('Ludwi Tieck', 'Person'): 5, ('Novalis', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 49,
        "sentence": "Bowling Green was picked to finish fifth in the MAC East Division by the MAC News Media Association .",
        "label": "{'MAC News Media Association': 'Organization', 'Bowling Green': 'Organization', 'MAC East Division': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Bowling Green was picked to finish fifth in the MAC East Division by the MAC News Media Association .\nAnswer: ",
        "responses": "['[{\"Bowling Green\": \"Location\"}, {\"MAC East Division\": \"Miscellaneous\"}, {\"MAC News Media Association\": \"Organization\"}]', '[{\"Bowling Green\": \"Location\"}, {\"MAC East Division\": \"Miscellaneous\"}, {\"MAC News Media Association\": \"Organization\"}]', '[{\"Bowling Green\": \"Location\"}, {\"MAC East Division\": \"Miscellaneous\"}, {\"MAC News Media Association\": \"Organization\"}]', '[{\"Bowling Green\": \"Location\"}, {\"MAC East Division\": \"Miscellaneous\"}, {\"MAC News Media Association\": \"Organization\"}]', '[{\"Bowling Green\": \"Location\"}, {\"MAC East Division\": \"Miscellaneous\"}, {\"MAC News Media Association\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Bowling Green': 'Location', 'MAC East Division': 'Miscellaneous', 'MAC News Media Association': 'Organization'}, {'Bowling Green': 'Location', 'MAC East Division': 'Miscellaneous', 'MAC News Media Association': 'Organization'}, {'Bowling Green': 'Location', 'MAC East Division': 'Miscellaneous', 'MAC News Media Association': 'Organization'}, {'Bowling Green': 'Location', 'MAC East Division': 'Miscellaneous', 'MAC News Media Association': 'Organization'}, {'Bowling Green': 'Location', 'MAC East Division': 'Miscellaneous', 'MAC News Media Association': 'Organization'}]",
        "prediction": "{'Bowling Green': 'Location', 'MAC East Division': 'Miscellaneous', 'MAC News Media Association': 'Organization'}",
        "consistency_score": "{'entities': {('Bowling Green', 'Location'): 5, ('MAC East Division', 'Miscellaneous'): 5, ('MAC News Media Association', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Bowling Green', 'Location'): 5, ('MAC East Division', 'Miscellaneous'): 5, ('MAC News Media Association', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 68,
        "sentence": "They were supported on this tour by Head Automatica , The Receiving End of Sirens , Cobra Starship , and several other bands including Street Drum Corps .",
        "label": "{'Cobra Starship': 'Organization', 'Street Drum Corps': 'Organization', 'Head Automatica': 'Organization', 'The Receiving End of Sirens': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: They were supported on this tour by Head Automatica , The Receiving End of Sirens , Cobra Starship , and several other bands including Street Drum Corps .\nAnswer: ",
        "responses": "['[{\"Head Automatica\": \"Organization\"}, {\"The Receiving End of Sirens\": \"Organization\"}, {\"Cobra Starship\": \"Organization\"}, {\"Street Drum Corps\": \"Organization\"}]', '[{\"Head Automatica\": \"Organization\"}, {\"The Receiving End of Sirens\": \"Organization\"}, {\"Cobra Starship\": \"Organization\"}, {\"Street Drum Corps\": \"Organization\"}]', '[{\"Head Automatica\": \"Organization\"}, {\"The Receiving End of Sirens\": \"Organization\"}, {\"Cobra Starship\": \"Organization\"}, {\"Street Drum Corps\": \"Organization\"}]', '[{\"Head Automatica\": \"Organization\"}, {\"The Receiving End of Sirens\": \"Organization\"}, {\"Cobra Starship\": \"Organization\"}, {\"Street Drum Corps\": \"Organization\"}]', '[{\"Head Automatica\": \"Organization\"}, {\"The Receiving End of Sirens\": \"Organization\"}, {\"Cobra Starship\": \"Organization\"}, {\"Street Drum Corps\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Head Automatica': 'Organization', 'The Receiving End of Sirens': 'Organization', 'Cobra Starship': 'Organization', 'Street Drum Corps': 'Organization'}, {'Head Automatica': 'Organization', 'The Receiving End of Sirens': 'Organization', 'Cobra Starship': 'Organization', 'Street Drum Corps': 'Organization'}, {'Head Automatica': 'Organization', 'The Receiving End of Sirens': 'Organization', 'Cobra Starship': 'Organization', 'Street Drum Corps': 'Organization'}, {'Head Automatica': 'Organization', 'The Receiving End of Sirens': 'Organization', 'Cobra Starship': 'Organization', 'Street Drum Corps': 'Organization'}, {'Head Automatica': 'Organization', 'The Receiving End of Sirens': 'Organization', 'Cobra Starship': 'Organization', 'Street Drum Corps': 'Organization'}]",
        "prediction": "{'Head Automatica': 'Organization', 'The Receiving End of Sirens': 'Organization', 'Cobra Starship': 'Organization', 'Street Drum Corps': 'Organization'}",
        "consistency_score": "{'entities': {('Head Automatica', 'Organization'): 5, ('The Receiving End of Sirens', 'Organization'): 5, ('Cobra Starship', 'Organization'): 5, ('Street Drum Corps', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Head Automatica', 'Organization'): 5, ('The Receiving End of Sirens', 'Organization'): 5, ('Cobra Starship', 'Organization'): 5, ('Street Drum Corps', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 977,
        "sentence": "Since she was the daughter of the greatest Jewish philosopher of the Enlightenment - Moses Mendelssohn - ( of equal stature with Immanuel Kant , and translator of John Locke and Alexander Pope , as well as Hebrew scriptures into German ) , Dorothea was surrounded throughout her life by the leading poets , critics , musicians , novelists , and philosophers of Europe .",
        "label": "{'John Locke': 'Person', 'Moses Mendelssohn': 'Person', 'Alexander Pope': 'Person', 'Dorothea': 'Person', 'Hebrew': 'Miscellaneous', 'Europe': 'Location', 'German': 'Miscellaneous', 'Jewish': 'Miscellaneous', 'Immanuel Kant': 'Person', 'Enlightenment': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Since she was the daughter of the greatest Jewish philosopher of the Enlightenment - Moses Mendelssohn - ( of equal stature with Immanuel Kant , and translator of John Locke and Alexander Pope , as well as Hebrew scriptures into German ) , Dorothea was surrounded throughout her life by the leading poets , critics , musicians , novelists , and philosophers of Europe .\nAnswer: ",
        "responses": "['[{\"Moses Mendelssohn\": \"Person\"}, {\"Immanuel Kant\": \"Person\"}, {\"John Locke\": \"Person\"}, {\"Alexander Pope\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Europe\": \"Location\"}]', '[{\"Moses Mendelssohn\": \"Person\"}, {\"Immanuel Kant\": \"Person\"}, {\"John Locke\": \"Person\"}, {\"Alexander Pope\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Europe\": \"Location\"}]', '[{\"Moses Mendelssohn\": \"Person\"}, {\"Immanuel Kant\": \"Person\"}, {\"John Locke\": \"Person\"}, {\"Alexander Pope\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Europe\": \"Location\"}]', '[{\"Moses Mendelssohn\": \"Person\"}, {\"Immanuel Kant\": \"Person\"}, {\"John Locke\": \"Person\"}, {\"Alexander Pope\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Europe\": \"Location\"}]', '[{\"Moses Mendelssohn\": \"Person\"}, {\"Immanuel Kant\": \"Person\"}, {\"John Locke\": \"Person\"}, {\"Alexander Pope\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Europe\": \"Location\"}]']",
        "prediction_per_consist": "[{'Moses Mendelssohn': 'Person', 'Immanuel Kant': 'Person', 'John Locke': 'Person', 'Alexander Pope': 'Person', 'Dorothea': 'Person', 'Europe': 'Location'}, {'Moses Mendelssohn': 'Person', 'Immanuel Kant': 'Person', 'John Locke': 'Person', 'Alexander Pope': 'Person', 'Dorothea': 'Person', 'Europe': 'Location'}, {'Moses Mendelssohn': 'Person', 'Immanuel Kant': 'Person', 'John Locke': 'Person', 'Alexander Pope': 'Person', 'Dorothea': 'Person', 'Europe': 'Location'}, {'Moses Mendelssohn': 'Person', 'Immanuel Kant': 'Person', 'John Locke': 'Person', 'Alexander Pope': 'Person', 'Dorothea': 'Person', 'Europe': 'Location'}, {'Moses Mendelssohn': 'Person', 'Immanuel Kant': 'Person', 'John Locke': 'Person', 'Alexander Pope': 'Person', 'Dorothea': 'Person', 'Europe': 'Location'}]",
        "prediction": "{'Moses Mendelssohn': 'Person', 'Immanuel Kant': 'Person', 'John Locke': 'Person', 'Alexander Pope': 'Person', 'Dorothea': 'Person', 'Europe': 'Location'}",
        "consistency_score": "{'entities': {('Moses Mendelssohn', 'Person'): 5, ('Immanuel Kant', 'Person'): 5, ('John Locke', 'Person'): 5, ('Alexander Pope', 'Person'): 5, ('Dorothea', 'Person'): 5, ('Europe', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Moses Mendelssohn', 'Person'): 5, ('Immanuel Kant', 'Person'): 5, ('John Locke', 'Person'): 5, ('Alexander Pope', 'Person'): 5, ('Dorothea', 'Person'): 5, ('Europe', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 526,
        "sentence": "The Brain Injury Rehabilitation Trust ( BIRT ) is a provider of specialist brain injury rehabilitation in the UK .",
        "label": "{'Brain Injury Rehabilitation Trust': 'Organization', 'UK': 'Location', 'BIRT': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The Brain Injury Rehabilitation Trust ( BIRT ) is a provider of specialist brain injury rehabilitation in the UK .\nAnswer: ",
        "responses": "['[{\"Brain Injury Rehabilitation Trust\": \"Organization\"}, {\"BIRT\": \"Organization\"}, {\"UK\": \"Location\"}]', '[{\"Brain Injury Rehabilitation Trust\": \"Organization\"}, {\"BIRT\": \"Organization\"}, {\"UK\": \"Location\"}]', '[{\"Brain Injury Rehabilitation Trust\": \"Organization\"}, {\"BIRT\": \"Organization\"}, {\"UK\": \"Location\"}]', '[{\"Brain Injury Rehabilitation Trust\": \"Organization\"}, {\"BIRT\": \"Organization\"}, {\"UK\": \"Location\"}]', '[{\"Brain Injury Rehabilitation Trust\": \"Organization\"}, {\"BIRT\": \"Organization\"}, {\"UK\": \"Location\"}]']",
        "prediction_per_consist": "[{'Brain Injury Rehabilitation Trust': 'Organization', 'BIRT': 'Organization', 'UK': 'Location'}, {'Brain Injury Rehabilitation Trust': 'Organization', 'BIRT': 'Organization', 'UK': 'Location'}, {'Brain Injury Rehabilitation Trust': 'Organization', 'BIRT': 'Organization', 'UK': 'Location'}, {'Brain Injury Rehabilitation Trust': 'Organization', 'BIRT': 'Organization', 'UK': 'Location'}, {'Brain Injury Rehabilitation Trust': 'Organization', 'BIRT': 'Organization', 'UK': 'Location'}]",
        "prediction": "{'Brain Injury Rehabilitation Trust': 'Organization', 'BIRT': 'Organization', 'UK': 'Location'}",
        "consistency_score": "{'entities': {('Brain Injury Rehabilitation Trust', 'Organization'): 5, ('BIRT', 'Organization'): 5, ('UK', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Brain Injury Rehabilitation Trust', 'Organization'): 5, ('BIRT', 'Organization'): 5, ('UK', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1032,
        "sentence": "Eberhard Faber is a brand of pencils .",
        "label": "{'Eberhard Faber': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Eberhard Faber is a brand of pencils .\nAnswer: ",
        "responses": "['[{\"Eberhard Faber\": \"Organization\"}]', '[{\"Eberhard Faber\": \"Organization\"}]', '[{\"Eberhard Faber\": \"Organization\"}]', '[{\"Eberhard Faber\": \"Organization\"}]', '[{\"Eberhard Faber\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Eberhard Faber': 'Organization'}, {'Eberhard Faber': 'Organization'}, {'Eberhard Faber': 'Organization'}, {'Eberhard Faber': 'Organization'}, {'Eberhard Faber': 'Organization'}]",
        "prediction": "{'Eberhard Faber': 'Organization'}",
        "consistency_score": "{'entities': {('Eberhard Faber', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Eberhard Faber', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1276,
        "sentence": "There are still signs of the B&SR evident in a few places if one searches carefully for them .",
        "label": "{'B&SR': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: There are still signs of the B&SR evident in a few places if one searches carefully for them .\nAnswer: ",
        "responses": "['[{\"B&SR\": \"Organization\"}]', '[{\"B&SR\": \"Organization\"}]', '[{\"B&SR\": \"Organization\"}]', '[{\"B&SR\": \"Organization\"}]', '[{\"B&SR\": \"Organization\"}]']",
        "prediction_per_consist": "[{'B&SR': 'Organization'}, {'B&SR': 'Organization'}, {'B&SR': 'Organization'}, {'B&SR': 'Organization'}, {'B&SR': 'Organization'}]",
        "prediction": "{'B&SR': 'Organization'}",
        "consistency_score": "{'entities': {('B&SR', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('B&SR', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 794,
        "sentence": "The Commonwealth Bank Tennis Classic is a tennis tournament on the WTA Tour held in Bali , Indonesia .",
        "label": "{'Commonwealth Bank Tennis Classic': 'Miscellaneous', 'Bali': 'Location', 'WTA': 'Organization', 'Indonesia': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The Commonwealth Bank Tennis Classic is a tennis tournament on the WTA Tour held in Bali , Indonesia .\nAnswer: ",
        "responses": "['[{\"Commonwealth Bank Tennis Classic\": \"Organization\"}, {\"WTA Tour\": \"Organization\"}, {\"Bali\": \"Location\"}, {\"Indonesia\": \"Location\"}]', '[{\"Commonwealth Bank Tennis Classic\": \"Organization\"}, {\"WTA Tour\": \"Organization\"}, {\"Bali\": \"Location\"}, {\"Indonesia\": \"Location\"}]', '[{\"Commonwealth Bank Tennis Classic\": \"Organization\"}, {\"WTA Tour\": \"Organization\"}, {\"Bali\": \"Location\"}, {\"Indonesia\": \"Location\"}]', '[{\"Commonwealth Bank Tennis Classic\": \"Organization\"}, {\"WTA Tour\": \"Organization\"}, {\"Bali\": \"Location\"}, {\"Indonesia\": \"Location\"}]', '[{\"Commonwealth Bank Tennis Classic\": \"Organization\"}, {\"WTA Tour\": \"Organization\"}, {\"Bali\": \"Location\"}, {\"Indonesia\": \"Location\"}]']",
        "prediction_per_consist": "[{'Commonwealth Bank Tennis Classic': 'Organization', 'WTA Tour': 'Organization', 'Bali': 'Location', 'Indonesia': 'Location'}, {'Commonwealth Bank Tennis Classic': 'Organization', 'WTA Tour': 'Organization', 'Bali': 'Location', 'Indonesia': 'Location'}, {'Commonwealth Bank Tennis Classic': 'Organization', 'WTA Tour': 'Organization', 'Bali': 'Location', 'Indonesia': 'Location'}, {'Commonwealth Bank Tennis Classic': 'Organization', 'WTA Tour': 'Organization', 'Bali': 'Location', 'Indonesia': 'Location'}, {'Commonwealth Bank Tennis Classic': 'Organization', 'WTA Tour': 'Organization', 'Bali': 'Location', 'Indonesia': 'Location'}]",
        "prediction": "{'Commonwealth Bank Tennis Classic': 'Organization', 'WTA Tour': 'Organization', 'Bali': 'Location', 'Indonesia': 'Location'}",
        "consistency_score": "{'entities': {('Commonwealth Bank Tennis Classic', 'Organization'): 5, ('WTA Tour', 'Organization'): 5, ('Bali', 'Location'): 5, ('Indonesia', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Commonwealth Bank Tennis Classic', 'Organization'): 5, ('WTA Tour', 'Organization'): 5, ('Bali', 'Location'): 5, ('Indonesia', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 862,
        "sentence": "In 1997 , Microsoft purchased a Datecs license for the distribution of the spelling and hyphenation product - Flex Word .",
        "label": "{'Flex Word': 'Miscellaneous', 'Microsoft': 'Organization', 'Datecs': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: In 1997 , Microsoft purchased a Datecs license for the distribution of the spelling and hyphenation product - Flex Word .\nAnswer: ",
        "responses": "['[{\"Microsoft\": \"Organization\"}, {\"Datecs\": \"Organization\"}, {\"Flex Word\": \"Miscellaneous\"}]', '[{\"Microsoft\": \"Organization\"}, {\"Datecs\": \"Organization\"}, {\"Flex Word\": \"Miscellaneous\"}]', '[{\"Microsoft\": \"Organization\"}, {\"Datecs\": \"Organization\"}, {\"Flex Word\": \"Miscellaneous\"}]', '[{\"Microsoft\": \"Organization\"}, {\"Datecs\": \"Organization\"}, {\"Flex Word\": \"Miscellaneous\"}]', '[{\"Microsoft\": \"Organization\"}, {\"Datecs\": \"Organization\"}, {\"Flex Word\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Microsoft': 'Organization', 'Datecs': 'Organization', 'Flex Word': 'Miscellaneous'}, {'Microsoft': 'Organization', 'Datecs': 'Organization', 'Flex Word': 'Miscellaneous'}, {'Microsoft': 'Organization', 'Datecs': 'Organization', 'Flex Word': 'Miscellaneous'}, {'Microsoft': 'Organization', 'Datecs': 'Organization', 'Flex Word': 'Miscellaneous'}, {'Microsoft': 'Organization', 'Datecs': 'Organization', 'Flex Word': 'Miscellaneous'}]",
        "prediction": "{'Microsoft': 'Organization', 'Datecs': 'Organization', 'Flex Word': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Microsoft', 'Organization'): 5, ('Datecs', 'Organization'): 5, ('Flex Word', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Microsoft', 'Organization'): 5, ('Datecs', 'Organization'): 5, ('Flex Word', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 612,
        "sentence": "Meanwhile , the area around the reservoir had come to be known as Lincoln Reservoir Park .",
        "label": "{'Lincoln Reservoir Park': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Meanwhile , the area around the reservoir had come to be known as Lincoln Reservoir Park .\nAnswer: ",
        "responses": "['[{\"Lincoln Reservoir Park\": \"Location\"}]', '[{\"Lincoln Reservoir Park\": \"Location\"}]', '[{\"Lincoln Reservoir Park\": \"Location\"}]', '[{\"Lincoln Reservoir Park\": \"Location\"}]', '[{\"Lincoln Reservoir Park\": \"Location\"}]']",
        "prediction_per_consist": "[{'Lincoln Reservoir Park': 'Location'}, {'Lincoln Reservoir Park': 'Location'}, {'Lincoln Reservoir Park': 'Location'}, {'Lincoln Reservoir Park': 'Location'}, {'Lincoln Reservoir Park': 'Location'}]",
        "prediction": "{'Lincoln Reservoir Park': 'Location'}",
        "consistency_score": "{'entities': {('Lincoln Reservoir Park', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Lincoln Reservoir Park', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1026,
        "sentence": "The Netherlands East Indies government operated from Australia during the war .",
        "label": "{'Netherlands East Indies': 'Location', 'Australia': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The Netherlands East Indies government operated from Australia during the war .\nAnswer: ",
        "responses": "['[{\"Netherlands East Indies\": \"Location\"}, {\"Australia\": \"Location\"}]', '[{\"Netherlands East Indies\": \"Location\"}, {\"Australia\": \"Location\"}]', '[{\"Netherlands East Indies\": \"Location\"}, {\"Australia\": \"Location\"}]', '[{\"Netherlands East Indies\": \"Location\"}, {\"Australia\": \"Location\"}]', '[{\"Netherlands East Indies\": \"Location\"}, {\"Australia\": \"Location\"}]']",
        "prediction_per_consist": "[{'Netherlands East Indies': 'Location', 'Australia': 'Location'}, {'Netherlands East Indies': 'Location', 'Australia': 'Location'}, {'Netherlands East Indies': 'Location', 'Australia': 'Location'}, {'Netherlands East Indies': 'Location', 'Australia': 'Location'}, {'Netherlands East Indies': 'Location', 'Australia': 'Location'}]",
        "prediction": "{'Netherlands East Indies': 'Location', 'Australia': 'Location'}",
        "consistency_score": "{'entities': {('Netherlands East Indies', 'Location'): 5, ('Australia', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Netherlands East Indies', 'Location'): 5, ('Australia', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 586,
        "sentence": "Dr. Don Wright will join BCIT as President in March , 2008 .",
        "label": "{'Don Wright': 'Person', 'BCIT': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Dr. Don Wright will join BCIT as President in March , 2008 .\nAnswer: ",
        "responses": "['[{\"Dr. Don Wright\": \"Person\"}, {\"BCIT\": \"Organization\"}]', '[{\"Dr. Don Wright\": \"Person\"}, {\"BCIT\": \"Organization\"}]', '[{\"Dr. Don Wright\": \"Person\"}, {\"BCIT\": \"Organization\"}]', '[{\"Dr. Don Wright\": \"Person\"}, {\"BCIT\": \"Organization\"}]', '[{\"Dr. Don Wright\": \"Person\"}, {\"BCIT\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Dr. Don Wright': 'Person', 'BCIT': 'Organization'}, {'Dr. Don Wright': 'Person', 'BCIT': 'Organization'}, {'Dr. Don Wright': 'Person', 'BCIT': 'Organization'}, {'Dr. Don Wright': 'Person', 'BCIT': 'Organization'}, {'Dr. Don Wright': 'Person', 'BCIT': 'Organization'}]",
        "prediction": "{'Dr. Don Wright': 'Person', 'BCIT': 'Organization'}",
        "consistency_score": "{'entities': {('Dr. Don Wright', 'Person'): 5, ('BCIT', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Dr. Don Wright', 'Person'): 5, ('BCIT', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 975,
        "sentence": "( She may have adopted the name \" Dorothea \" from a 17th century Dorothea von Schlegel who composed Catholic hymns ) .",
        "label": "{'Dorothea': 'Person', 'Catholic': 'Miscellaneous', 'Dorothea von Schlegel': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: ( She may have adopted the name \" Dorothea \" from a 17th century Dorothea von Schlegel who composed Catholic hymns ) .\nAnswer: ",
        "responses": "['[{\"Dorothea\": \"Person\"}, {\"Dorothea von Schlegel\": \"Person\"}]', '[{\"Dorothea\": \"Person\"}, {\"Dorothea von Schlegel\": \"Person\"}]', '[{\"Dorothea\": \"Person\"}, {\"Dorothea von Schlegel\": \"Person\"}]', '[{\"Dorothea\": \"Person\"}, {\"Dorothea von Schlegel\": \"Person\"}]', '[{\"Dorothea\": \"Person\"}, {\"Dorothea von Schlegel\": \"Person\"}]']",
        "prediction_per_consist": "[{'Dorothea': 'Person', 'Dorothea von Schlegel': 'Person'}, {'Dorothea': 'Person', 'Dorothea von Schlegel': 'Person'}, {'Dorothea': 'Person', 'Dorothea von Schlegel': 'Person'}, {'Dorothea': 'Person', 'Dorothea von Schlegel': 'Person'}, {'Dorothea': 'Person', 'Dorothea von Schlegel': 'Person'}]",
        "prediction": "{'Dorothea': 'Person', 'Dorothea von Schlegel': 'Person'}",
        "consistency_score": "{'entities': {('Dorothea', 'Person'): 5, ('Dorothea von Schlegel', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Dorothea', 'Person'): 5, ('Dorothea von Schlegel', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1393,
        "sentence": "His brother Rodney also was a professional boxer with a 37-7 record .",
        "label": "{'Rodney': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: His brother Rodney also was a professional boxer with a 37-7 record .\nAnswer: ",
        "responses": "['[{\"Rodney\": \"Person\"}]', '[{\"Rodney\": \"Person\"}]', '[{\"Rodney\": \"Person\"}]', '[{\"Rodney\": \"Person\"}]', '[{\"Rodney\": \"Person\"}]']",
        "prediction_per_consist": "[{'Rodney': 'Person'}, {'Rodney': 'Person'}, {'Rodney': 'Person'}, {'Rodney': 'Person'}, {'Rodney': 'Person'}]",
        "prediction": "{'Rodney': 'Person'}",
        "consistency_score": "{'entities': {('Rodney', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Rodney', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 385,
        "sentence": "Determinated to bar the expedition 's road , Sarraounia wrote to Voulet a provocative letter full of insults ; the French took up the challenge , and on April 15 left the camp marching towards the villages of Lougou and Tougana , where Sarraounia had concentrated her forces .",
        "label": "{'Sarraounia': 'Person', 'Tougana': 'Location', 'French': 'Miscellaneous', 'Voulet': 'Person', 'Lougou': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Determinated to bar the expedition 's road , Sarraounia wrote to Voulet a provocative letter full of insults ; the French took up the challenge , and on April 15 left the camp marching towards the villages of Lougou and Tougana , where Sarraounia had concentrated her forces .\nAnswer: ",
        "responses": "['[{\"Sarraounia\": \"Person\"}, {\"Voulet\": \"Person\"}, {\"French\": \"Miscellaneous\"}, {\"Lougou\": \"Location\"}, {\"Tougana\": \"Location\"}]', '[{\"Sarraounia\": \"Person\"}, {\"Voulet\": \"Person\"}, {\"French\": \"Miscellaneous\"}, {\"Lougou\": \"Location\"}, {\"Tougana\": \"Location\"}]', '[{\"Sarraounia\": \"Person\"}, {\"Voulet\": \"Person\"}, {\"French\": \"Miscellaneous\"}, {\"Lougou\": \"Location\"}, {\"Tougana\": \"Location\"}, {\"Sarraounia\": \"Person\"}]', '[{\"Sarraounia\": \"Person\"}, {\"Voulet\": \"Person\"}, {\"French\": \"Miscellaneous\"}, {\"Lougou\": \"Location\"}, {\"Tougana\": \"Location\"}, {\"Sarraounia\": \"Person\"}]', '[{\"Sarraounia\": \"Person\"}, {\"Voulet\": \"Person\"}, {\"French\": \"Miscellaneous\"}, {\"Lougou\": \"Location\"}, {\"Tougana\": \"Location\"}, {\"Sarraounia\": \"Person\"}]']",
        "prediction_per_consist": "[{'Sarraounia': 'Person', 'Voulet': 'Person', 'French': 'Miscellaneous', 'Lougou': 'Location', 'Tougana': 'Location'}, {'Sarraounia': 'Person', 'Voulet': 'Person', 'French': 'Miscellaneous', 'Lougou': 'Location', 'Tougana': 'Location'}, {'Sarraounia': 'Person', 'Voulet': 'Person', 'French': 'Miscellaneous', 'Lougou': 'Location', 'Tougana': 'Location'}, {'Sarraounia': 'Person', 'Voulet': 'Person', 'French': 'Miscellaneous', 'Lougou': 'Location', 'Tougana': 'Location'}, {'Sarraounia': 'Person', 'Voulet': 'Person', 'French': 'Miscellaneous', 'Lougou': 'Location', 'Tougana': 'Location'}]",
        "prediction": "{'Sarraounia': 'Person', 'Voulet': 'Person', 'French': 'Miscellaneous', 'Lougou': 'Location', 'Tougana': 'Location'}",
        "consistency_score": "{'entities': {('Sarraounia', 'Person'): 5, ('Voulet', 'Person'): 5, ('French', 'Miscellaneous'): 5, ('Lougou', 'Location'): 5, ('Tougana', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Sarraounia', 'Person'): 5, ('Voulet', 'Person'): 5, ('French', 'Miscellaneous'): 5, ('Lougou', 'Location'): 5, ('Tougana', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 945,
        "sentence": "The Konkan Railway passes through the village and the nearest stop to the village is the train station at Karmali .",
        "label": "{'Karmali': 'Location', 'Konkan Railway': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The Konkan Railway passes through the village and the nearest stop to the village is the train station at Karmali .\nAnswer: ",
        "responses": "['[{\"Konkan Railway\": \"Organization\"}, {\"Karmali\": \"Location\"}]', '[{\"Konkan Railway\": \"Organization\"}, {\"Karmali\": \"Location\"}]', '[{\"Konkan Railway\": \"Organization\"}, {\"Karmali\": \"Location\"}]', '[{\"Konkan Railway\": \"Organization\"}, {\"Karmali\": \"Location\"}]', '[{\"Konkan Railway\": \"Organization\"}, {\"Karmali\": \"Location\"}]']",
        "prediction_per_consist": "[{'Konkan Railway': 'Organization', 'Karmali': 'Location'}, {'Konkan Railway': 'Organization', 'Karmali': 'Location'}, {'Konkan Railway': 'Organization', 'Karmali': 'Location'}, {'Konkan Railway': 'Organization', 'Karmali': 'Location'}, {'Konkan Railway': 'Organization', 'Karmali': 'Location'}]",
        "prediction": "{'Konkan Railway': 'Organization', 'Karmali': 'Location'}",
        "consistency_score": "{'entities': {('Konkan Railway', 'Organization'): 5, ('Karmali', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Konkan Railway', 'Organization'): 5, ('Karmali', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 908,
        "sentence": "This journey lead him to Jack Lesmana , an Indonesian jazz legend , who introduced him to other professional musicians .",
        "label": "{'Indonesian': 'Miscellaneous', 'Jack Lesmana': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: This journey lead him to Jack Lesmana , an Indonesian jazz legend , who introduced him to other professional musicians .\nAnswer: ",
        "responses": "['[{\"Jack Lesmana\": \"Person\"}, {\"Indonesian\": \"Location\"}]', '[{\"Jack Lesmana\": \"Person\"}, {\"Indonesian\": \"Location\"}]', '[{\"Jack Lesmana\": \"Person\"}, {\"Indonesian\": \"Location\"}]', '[{\"Jack Lesmana\": \"Person\"}, {\"Indonesian\": \"Location\"}]', '[{\"Jack Lesmana\": \"Person\"}, {\"Indonesian\": \"Location\"}]']",
        "prediction_per_consist": "[{'Jack Lesmana': 'Person', 'Indonesian': 'Location'}, {'Jack Lesmana': 'Person', 'Indonesian': 'Location'}, {'Jack Lesmana': 'Person', 'Indonesian': 'Location'}, {'Jack Lesmana': 'Person', 'Indonesian': 'Location'}, {'Jack Lesmana': 'Person', 'Indonesian': 'Location'}]",
        "prediction": "{'Jack Lesmana': 'Person', 'Indonesian': 'Location'}",
        "consistency_score": "{'entities': {('Jack Lesmana', 'Person'): 5, ('Indonesian', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Jack Lesmana', 'Person'): 5, ('Indonesian', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 134,
        "sentence": "6PR is owned by Fairfax Media , an Australian media company that owns television and radio businesses throughout Australia .",
        "label": "{'Australia': 'Location', 'Australian': 'Miscellaneous', '6PR': 'Organization', 'Fairfax Media': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: 6PR is owned by Fairfax Media , an Australian media company that owns television and radio businesses throughout Australia .\nAnswer: ",
        "responses": "['[{\"6PR\": \"Organization\"}, {\"Fairfax Media\": \"Organization\"}, {\"Australian\": \"Location\"}, {\"Australia\": \"Location\"}]', '[{\"6PR\": \"Organization\"}, {\"Fairfax Media\": \"Organization\"}, {\"Australian\": \"Location\"}, {\"Australia\": \"Location\"}]', '[{\"6PR\": \"Organization\"}, {\"Fairfax Media\": \"Organization\"}, {\"Australian\": \"Location\"}, {\"Australia\": \"Location\"}]', '[{\"6PR\": \"Organization\"}, {\"Fairfax Media\": \"Organization\"}, {\"Australian\": \"Location\"}, {\"Australia\": \"Location\"}]', '[{\"6PR\": \"Organization\"}, {\"Fairfax Media\": \"Organization\"}, {\"Australian\": \"Location\"}, {\"Australia\": \"Location\"}]']",
        "prediction_per_consist": "[{'6PR': 'Organization', 'Fairfax Media': 'Organization', 'Australian': 'Location', 'Australia': 'Location'}, {'6PR': 'Organization', 'Fairfax Media': 'Organization', 'Australian': 'Location', 'Australia': 'Location'}, {'6PR': 'Organization', 'Fairfax Media': 'Organization', 'Australian': 'Location', 'Australia': 'Location'}, {'6PR': 'Organization', 'Fairfax Media': 'Organization', 'Australian': 'Location', 'Australia': 'Location'}, {'6PR': 'Organization', 'Fairfax Media': 'Organization', 'Australian': 'Location', 'Australia': 'Location'}]",
        "prediction": "{'6PR': 'Organization', 'Fairfax Media': 'Organization', 'Australian': 'Location', 'Australia': 'Location'}",
        "consistency_score": "{'entities': {('6PR', 'Organization'): 5, ('Fairfax Media', 'Organization'): 5, ('Australian', 'Location'): 5, ('Australia', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('6PR', 'Organization'): 5, ('Fairfax Media', 'Organization'): 5, ('Australian', 'Location'): 5, ('Australia', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 442,
        "sentence": "But Ben Player was bodyboarding 's newest world champion .",
        "label": "{'Ben Player': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: But Ben Player was bodyboarding 's newest world champion .\nAnswer: ",
        "responses": "['[{\"Ben Player\": \"Person\"}]', '[{\"Ben Player\": \"Person\"}]', '[{\"Ben Player\": \"Person\"}]', '[{\"Ben Player\": \"Person\"}]', '[{\"Ben Player\": \"Person\"}]']",
        "prediction_per_consist": "[{'Ben Player': 'Person'}, {'Ben Player': 'Person'}, {'Ben Player': 'Person'}, {'Ben Player': 'Person'}, {'Ben Player': 'Person'}]",
        "prediction": "{'Ben Player': 'Person'}",
        "consistency_score": "{'entities': {('Ben Player', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Ben Player', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 133,
        "sentence": "6PR 's focus is on news , talk and sport , and is Perth 's only commercial talkback radio station .",
        "label": "{'Perth': 'Location', '6PR': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: 6PR 's focus is on news , talk and sport , and is Perth 's only commercial talkback radio station .\nAnswer: ",
        "responses": "['[{\"6PR\": \"Organization\"}, {\"Perth\": \"Location\"}]', '[{\"6PR\": \"Organization\"}, {\"Perth\": \"Location\"}]', '[{\"6PR\": \"Organization\"}, {\"Perth\": \"Location\"}]', '[{\"6PR\": \"Organization\"}, {\"Perth\": \"Location\"}]', '[{\"6PR\": \"Organization\"}, {\"Perth\": \"Location\"}]']",
        "prediction_per_consist": "[{'6PR': 'Organization', 'Perth': 'Location'}, {'6PR': 'Organization', 'Perth': 'Location'}, {'6PR': 'Organization', 'Perth': 'Location'}, {'6PR': 'Organization', 'Perth': 'Location'}, {'6PR': 'Organization', 'Perth': 'Location'}]",
        "prediction": "{'6PR': 'Organization', 'Perth': 'Location'}",
        "consistency_score": "{'entities': {('6PR', 'Organization'): 5, ('Perth', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('6PR', 'Organization'): 5, ('Perth', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 207,
        "sentence": "He is known to have a three-and-a-half octave range voice , and has performed with John Denver on the song \" Let Us Begin ... \"",
        "label": "{'John Denver': 'Person', 'Let Us Begin ...': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He is known to have a three-and-a-half octave range voice , and has performed with John Denver on the song \" Let Us Begin ... \"\nAnswer: ",
        "responses": "['[{\"John Denver\": \"Person\"}]', '[{\"John Denver\": \"Person\"}]', '[{\"John Denver\": \"Person\"}]', '[{\"John Denver\": \"Person\"}]', '[{\"John Denver\": \"Person\"}]']",
        "prediction_per_consist": "[{'John Denver': 'Person'}, {'John Denver': 'Person'}, {'John Denver': 'Person'}, {'John Denver': 'Person'}, {'John Denver': 'Person'}]",
        "prediction": "{'John Denver': 'Person'}",
        "consistency_score": "{'entities': {('John Denver', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('John Denver', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1159,
        "sentence": "As of Spring 2007 , the band is supporting The Used as a part of the \" Taste of Chaos \" tour and have scheduled a string of dates in Europe supporting Linkin Park .",
        "label": "{'Linkin Park': 'Organization', 'The Used': 'Organization', 'Europe': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: As of Spring 2007 , the band is supporting The Used as a part of the \" Taste of Chaos \" tour and have scheduled a string of dates in Europe supporting Linkin Park .\nAnswer: ",
        "responses": "['[{\"Spring 2007\": \"Miscellaneous\"}, {\"The Used\": \"Organization\"}, {\"Taste of Chaos\": \"Miscellaneous\"}, {\"Europe\": \"Location\"}, {\"Linkin Park\": \"Organization\"}]', '[{\"Spring 2007\": \"Miscellaneous\"}, {\"The Used\": \"Organization\"}, {\"Taste of Chaos\": \"Miscellaneous\"}, {\"Europe\": \"Location\"}, {\"Linkin Park\": \"Organization\"}]', '[{\"Spring 2007\": \"Miscellaneous\"}, {\"The Used\": \"Organization\"}, {\"Taste of Chaos\": \"Miscellaneous\"}, {\"Europe\": \"Location\"}, {\"Linkin Park\": \"Organization\"}]', '[{\"Spring 2007\": \"Miscellaneous\"}, {\"The Used\": \"Organization\"}, {\"Taste of Chaos\": \"Miscellaneous\"}, {\"Europe\": \"Location\"}, {\"Linkin Park\": \"Organization\"}]', '[{\"Spring 2007\": \"Miscellaneous\"}, {\"The Used\": \"Organization\"}, {\"Taste of Chaos\": \"Miscellaneous\"}, {\"Europe\": \"Location\"}, {\"Linkin Park\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Spring 2007': 'Miscellaneous', 'The Used': 'Organization', 'Taste of Chaos': 'Miscellaneous', 'Europe': 'Location', 'Linkin Park': 'Organization'}, {'Spring 2007': 'Miscellaneous', 'The Used': 'Organization', 'Taste of Chaos': 'Miscellaneous', 'Europe': 'Location', 'Linkin Park': 'Organization'}, {'Spring 2007': 'Miscellaneous', 'The Used': 'Organization', 'Taste of Chaos': 'Miscellaneous', 'Europe': 'Location', 'Linkin Park': 'Organization'}, {'Spring 2007': 'Miscellaneous', 'The Used': 'Organization', 'Taste of Chaos': 'Miscellaneous', 'Europe': 'Location', 'Linkin Park': 'Organization'}, {'Spring 2007': 'Miscellaneous', 'The Used': 'Organization', 'Taste of Chaos': 'Miscellaneous', 'Europe': 'Location', 'Linkin Park': 'Organization'}]",
        "prediction": "{'Spring 2007': 'Miscellaneous', 'The Used': 'Organization', 'Taste of Chaos': 'Miscellaneous', 'Europe': 'Location', 'Linkin Park': 'Organization'}",
        "consistency_score": "{'entities': {('Spring 2007', 'Miscellaneous'): 5, ('The Used', 'Organization'): 5, ('Taste of Chaos', 'Miscellaneous'): 5, ('Europe', 'Location'): 5, ('Linkin Park', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Spring 2007', 'Miscellaneous'): 5, ('The Used', 'Organization'): 5, ('Taste of Chaos', 'Miscellaneous'): 5, ('Europe', 'Location'): 5, ('Linkin Park', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 57,
        "sentence": "Created in 1998 by Jared Leto and his brother , Shannon , 30 Seconds to Mars began as a small family project .",
        "label": "{'Jared Leto': 'Person', '30 Seconds to Mars': 'Organization', 'Shannon': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Created in 1998 by Jared Leto and his brother , Shannon , 30 Seconds to Mars began as a small family project .\nAnswer: ",
        "responses": "['[{\"Jared Leto\": \"Person\"}, {\"Shannon\": \"Person\"}, {\"30 Seconds to Mars\": \"Organization\"}]', '[{\"Jared Leto\": \"Person\"}, {\"Shannon\": \"Person\"}, {\"30 Seconds to Mars\": \"Organization\"}]', '[{\"Jared Leto\": \"Person\"}, {\"Shannon\": \"Person\"}, {\"30 Seconds to Mars\": \"Organization\"}]', '[{\"Jared Leto\": \"Person\"}, {\"Shannon\": \"Person\"}, {\"30 Seconds to Mars\": \"Organization\"}]', '[{\"Jared Leto\": \"Person\"}, {\"Shannon\": \"Person\"}, {\"30 Seconds to Mars\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Jared Leto': 'Person', 'Shannon': 'Person', '30 Seconds to Mars': 'Organization'}, {'Jared Leto': 'Person', 'Shannon': 'Person', '30 Seconds to Mars': 'Organization'}, {'Jared Leto': 'Person', 'Shannon': 'Person', '30 Seconds to Mars': 'Organization'}, {'Jared Leto': 'Person', 'Shannon': 'Person', '30 Seconds to Mars': 'Organization'}, {'Jared Leto': 'Person', 'Shannon': 'Person', '30 Seconds to Mars': 'Organization'}]",
        "prediction": "{'Jared Leto': 'Person', 'Shannon': 'Person', '30 Seconds to Mars': 'Organization'}",
        "consistency_score": "{'entities': {('Jared Leto', 'Person'): 5, ('Shannon', 'Person'): 5, ('30 Seconds to Mars', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Jared Leto', 'Person'): 5, ('Shannon', 'Person'): 5, ('30 Seconds to Mars', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 528,
        "sentence": "They offer a range of services to meet the needs of people at different stages of rehabilitation - including assessment , intensive rehabilitation , continuing rehabilitation , and community-based support .",
        "label": "{}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: They offer a range of services to meet the needs of people at different stages of rehabilitation - including assessment , intensive rehabilitation , continuing rehabilitation , and community-based support .\nAnswer: ",
        "responses": "['[{\"rehabilitation\": \"Miscellaneous\"}]', '[{\"rehabilitation\": \"Miscellaneous\"}]', '[{\"rehabilitation\": \"Miscellaneous\"}]', '[{\"rehabilitation\": \"Miscellaneous\"}]', '[{\"rehabilitation\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'rehabilitation': 'Miscellaneous'}, {'rehabilitation': 'Miscellaneous'}, {'rehabilitation': 'Miscellaneous'}, {'rehabilitation': 'Miscellaneous'}, {'rehabilitation': 'Miscellaneous'}]",
        "prediction": "{'rehabilitation': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('rehabilitation', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('rehabilitation', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 887,
        "sentence": "During his time in the US Navy , Langejans made regular practice of entertaining his fellow sailors with his accordion and guitar talents .",
        "label": "{'Langejans': 'Person', 'US Navy': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: During his time in the US Navy , Langejans made regular practice of entertaining his fellow sailors with his accordion and guitar talents .\nAnswer: ",
        "responses": "['[{\"US Navy\": \"Organization\"}, {\"Langejans\": \"Person\"}]', '[{\"US Navy\": \"Organization\"}, {\"Langejans\": \"Person\"}]', '[{\"Langejans\": \"Person\"}, {\"US Navy\": \"Organization\"}]', '[{\"Langejans\": \"Person\"}, {\"US Navy\": \"Organization\"}]', '[{\"US Navy\": \"Organization\"}, {\"Langejans\": \"Person\"}]']",
        "prediction_per_consist": "[{'US Navy': 'Organization', 'Langejans': 'Person'}, {'US Navy': 'Organization', 'Langejans': 'Person'}, {'Langejans': 'Person', 'US Navy': 'Organization'}, {'Langejans': 'Person', 'US Navy': 'Organization'}, {'US Navy': 'Organization', 'Langejans': 'Person'}]",
        "prediction": "{'US Navy': 'Organization', 'Langejans': 'Person'}",
        "consistency_score": "{'entities': {('US Navy', 'Organization'): 5, ('Langejans', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('US Navy', 'Organization'): 5, ('Langejans', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1250,
        "sentence": "In fact Ben Player 's biography reflects the twists and turns of the phenomenal growth of this comparatively new sport .",
        "label": "{'Ben Player': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: In fact Ben Player 's biography reflects the twists and turns of the phenomenal growth of this comparatively new sport .\nAnswer: ",
        "responses": "['[{\"Ben Player\": \"Person\"}]', '[{\"Ben Player\": \"Person\"}]', '[{\"Ben Player\": \"Person\"}]', '[{\"Ben Player\": \"Person\"}]', '[{\"Ben Player\": \"Person\"}]']",
        "prediction_per_consist": "[{'Ben Player': 'Person'}, {'Ben Player': 'Person'}, {'Ben Player': 'Person'}, {'Ben Player': 'Person'}, {'Ben Player': 'Person'}]",
        "prediction": "{'Ben Player': 'Person'}",
        "consistency_score": "{'entities': {('Ben Player', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Ben Player', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 653,
        "sentence": "Known as the \" Poet of the Piano \" , Carmen Cavallaro showed a gift for music from age 3 , picking out tunes on a toy piano .",
        "label": "{'Carmen Cavallaro': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Known as the \" Poet of the Piano \" , Carmen Cavallaro showed a gift for music from age 3 , picking out tunes on a toy piano .\nAnswer: ",
        "responses": "['[{\"Carmen Cavallaro\": \"Person\"}]', '[{\"Carmen Cavallaro\": \"Person\"}]', '[{\"Carmen Cavallaro\": \"Person\"}]', '[{\"Carmen Cavallaro\": \"Person\"}]', '[{\"Carmen Cavallaro\": \"Person\"}]']",
        "prediction_per_consist": "[{'Carmen Cavallaro': 'Person'}, {'Carmen Cavallaro': 'Person'}, {'Carmen Cavallaro': 'Person'}, {'Carmen Cavallaro': 'Person'}, {'Carmen Cavallaro': 'Person'}]",
        "prediction": "{'Carmen Cavallaro': 'Person'}",
        "consistency_score": "{'entities': {('Carmen Cavallaro', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Carmen Cavallaro', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 272,
        "sentence": "Angelo Fresquet ( born December 16 , 1973 , Fort Lauderdale , Florida ) is a Dynamic Speaker , Business Developer , Producer , Director , Actor , & well known Celebrity Special Events Coordinator .",
        "label": "{'Florida': 'Location', 'Angelo Fresquet': 'Person', 'Fort Lauderdale': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Angelo Fresquet ( born December 16 , 1973 , Fort Lauderdale , Florida ) is a Dynamic Speaker , Business Developer , Producer , Director , Actor , & well known Celebrity Special Events Coordinator .\nAnswer: ",
        "responses": "['[{\"Angelo Fresquet\": \"Person\"}, {\"Fort Lauderdale\": \"Location\"}, {\"Florida\": \"Location\"}]', '[{\"Angelo Fresquet\": \"Person\"}, {\"Fort Lauderdale\": \"Location\"}, {\"Florida\": \"Location\"}]', '[\\n    {\"Angelo Fresquet\": \"Person\"},\\n    {\"Fort Lauderdale\": \"Location\"},\\n    {\"Florida\": \"Location\"}\\n]', '[{\"Angelo Fresquet\": \"Person\"}, {\"Fort Lauderdale\": \"Location\"}, {\"Florida\": \"Location\"}]', '[{\"Angelo Fresquet\": \"Person\"}, {\"Fort Lauderdale\": \"Location\"}, {\"Florida\": \"Location\"}]']",
        "prediction_per_consist": "[{'Angelo Fresquet': 'Person', 'Fort Lauderdale': 'Location', 'Florida': 'Location'}, {'Angelo Fresquet': 'Person', 'Fort Lauderdale': 'Location', 'Florida': 'Location'}, {'Angelo Fresquet': 'Person', 'Fort Lauderdale': 'Location', 'Florida': 'Location'}, {'Angelo Fresquet': 'Person', 'Fort Lauderdale': 'Location', 'Florida': 'Location'}, {'Angelo Fresquet': 'Person', 'Fort Lauderdale': 'Location', 'Florida': 'Location'}]",
        "prediction": "{'Angelo Fresquet': 'Person', 'Fort Lauderdale': 'Location', 'Florida': 'Location'}",
        "consistency_score": "{'entities': {('Angelo Fresquet', 'Person'): 5, ('Fort Lauderdale', 'Location'): 5, ('Florida', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Angelo Fresquet', 'Person'): 5, ('Fort Lauderdale', 'Location'): 5, ('Florida', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1147,
        "sentence": "His engine had barely cleared the crossing when the locomotive of the Reading train , which left Philadelphia at 5:40 pm , struck the first car full in the centre , throwing it far off the track in a nearby ditch , and completely submerging it .",
        "label": "{'Reading': 'Location', 'Philadelphia': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: His engine had barely cleared the crossing when the locomotive of the Reading train , which left Philadelphia at 5:40 pm , struck the first car full in the centre , throwing it far off the track in a nearby ditch , and completely submerging it .\nAnswer: ",
        "responses": "['[{\"Reading\": \"Organization\"}, {\"Philadelphia\": \"Location\"}]', '[{\"Reading\": \"Organization\"}, {\"Philadelphia\": \"Location\"}]', '[{\"Reading\": \"Organization\"}, {\"Philadelphia\": \"Location\"}]', '[{\"Reading\": \"Organization\"}, {\"Philadelphia\": \"Location\"}]', '[{\"Reading\": \"Organization\"}, {\"Philadelphia\": \"Location\"}]']",
        "prediction_per_consist": "[{'Reading': 'Organization', 'Philadelphia': 'Location'}, {'Reading': 'Organization', 'Philadelphia': 'Location'}, {'Reading': 'Organization', 'Philadelphia': 'Location'}, {'Reading': 'Organization', 'Philadelphia': 'Location'}, {'Reading': 'Organization', 'Philadelphia': 'Location'}]",
        "prediction": "{'Reading': 'Organization', 'Philadelphia': 'Location'}",
        "consistency_score": "{'entities': {('Reading', 'Organization'): 5, ('Philadelphia', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Reading', 'Organization'): 5, ('Philadelphia', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 857,
        "sentence": "They performed their first gig in Galway in December 2006 .",
        "label": "{'Galway': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: They performed their first gig in Galway in December 2006 .\nAnswer: ",
        "responses": "['[{\"Galway\": \"Location\"}]', '[{\"Galway\": \"Location\"}]', '[{\"Galway\": \"Location\"}]', '[{\"Galway\": \"Location\"}]', '[{\"Galway\": \"Location\"}]']",
        "prediction_per_consist": "[{'Galway': 'Location'}, {'Galway': 'Location'}, {'Galway': 'Location'}, {'Galway': 'Location'}, {'Galway': 'Location'}]",
        "prediction": "{'Galway': 'Location'}",
        "consistency_score": "{'entities': {('Galway', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Galway', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 628,
        "sentence": "She is the sister of Howie Payne , the frontman of now defunct band The Stands and Sean Payne , the drummer of The Zutons .",
        "label": "{'The Zutons': 'Organization', 'The Stands': 'Organization', 'Sean Payne': 'Person', 'Howie Payne': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: She is the sister of Howie Payne , the frontman of now defunct band The Stands and Sean Payne , the drummer of The Zutons .\nAnswer: ",
        "responses": "['[{\"Howie Payne\": \"Person\"}, {\"The Stands\": \"Organization\"}, {\"Sean Payne\": \"Person\"}, {\"The Zutons\": \"Organization\"}]', '[{\"Howie Payne\": \"Person\"}, {\"The Stands\": \"Organization\"}, {\"Sean Payne\": \"Person\"}, {\"The Zutons\": \"Organization\"}]', '[{\"Howie Payne\": \"Person\"}, {\"The Stands\": \"Organization\"}, {\"Sean Payne\": \"Person\"}, {\"The Zutons\": \"Organization\"}]', '[{\"Howie Payne\": \"Person\"}, {\"The Stands\": \"Organization\"}, {\"Sean Payne\": \"Person\"}, {\"The Zutons\": \"Organization\"}]', '[{\"Howie Payne\": \"Person\"}, {\"The Stands\": \"Organization\"}, {\"Sean Payne\": \"Person\"}, {\"The Zutons\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Howie Payne': 'Person', 'The Stands': 'Organization', 'Sean Payne': 'Person', 'The Zutons': 'Organization'}, {'Howie Payne': 'Person', 'The Stands': 'Organization', 'Sean Payne': 'Person', 'The Zutons': 'Organization'}, {'Howie Payne': 'Person', 'The Stands': 'Organization', 'Sean Payne': 'Person', 'The Zutons': 'Organization'}, {'Howie Payne': 'Person', 'The Stands': 'Organization', 'Sean Payne': 'Person', 'The Zutons': 'Organization'}, {'Howie Payne': 'Person', 'The Stands': 'Organization', 'Sean Payne': 'Person', 'The Zutons': 'Organization'}]",
        "prediction": "{'Howie Payne': 'Person', 'The Stands': 'Organization', 'Sean Payne': 'Person', 'The Zutons': 'Organization'}",
        "consistency_score": "{'entities': {('Howie Payne', 'Person'): 5, ('The Stands', 'Organization'): 5, ('Sean Payne', 'Person'): 5, ('The Zutons', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Howie Payne', 'Person'): 5, ('The Stands', 'Organization'): 5, ('Sean Payne', 'Person'): 5, ('The Zutons', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1152,
        "sentence": "His action in running at a speed of forty-five miles an hour past a danger signal seemed inexplicable to those present at the inquest .",
        "label": "{}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: His action in running at a speed of forty-five miles an hour past a danger signal seemed inexplicable to those present at the inquest .\nAnswer: ",
        "responses": "['[{\"forty-five miles\": \"Miscellaneous\"}]', '[{\"forty-five miles\": \"Miscellaneous\"}]', '[{\"forty-five miles\": \"Miscellaneous\"}]', '[{\"forty-five miles\": \"Miscellaneous\"}]', '[{\"forty-five miles\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'forty-five miles': 'Miscellaneous'}, {'forty-five miles': 'Miscellaneous'}, {'forty-five miles': 'Miscellaneous'}, {'forty-five miles': 'Miscellaneous'}, {'forty-five miles': 'Miscellaneous'}]",
        "prediction": "{'forty-five miles': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('forty-five miles', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('forty-five miles', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1005,
        "sentence": "He was then rated by many to be the sport 's new \" White Hope , \" taking that label from then-declining Jerry Quarry .",
        "label": "{'Jerry Quarry': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He was then rated by many to be the sport 's new \" White Hope , \" taking that label from then-declining Jerry Quarry .\nAnswer: ",
        "responses": "['[{\"White Hope\": \"Miscellaneous\"}, {\"Jerry Quarry\": \"Person\"}]', '[{\"White Hope\": \"Miscellaneous\"}, {\"Jerry Quarry\": \"Person\"}]', '[{\"White Hope\": \"Miscellaneous\"}, {\"Jerry Quarry\": \"Person\"}]', '[{\"White Hope\": \"Miscellaneous\"}, {\"Jerry Quarry\": \"Person\"}]', '[{\"White Hope\": \"Miscellaneous\"}, {\"Jerry Quarry\": \"Person\"}]']",
        "prediction_per_consist": "[{'White Hope': 'Miscellaneous', 'Jerry Quarry': 'Person'}, {'White Hope': 'Miscellaneous', 'Jerry Quarry': 'Person'}, {'White Hope': 'Miscellaneous', 'Jerry Quarry': 'Person'}, {'White Hope': 'Miscellaneous', 'Jerry Quarry': 'Person'}, {'White Hope': 'Miscellaneous', 'Jerry Quarry': 'Person'}]",
        "prediction": "{'White Hope': 'Miscellaneous', 'Jerry Quarry': 'Person'}",
        "consistency_score": "{'entities': {('White Hope', 'Miscellaneous'): 5, ('Jerry Quarry', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('White Hope', 'Miscellaneous'): 5, ('Jerry Quarry', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 808,
        "sentence": "Since Connecticut is a member of the Multi-State Lottery Association ( MUSL ) , it is eligible to offer its other multi-state games .",
        "label": "{'MUSL': 'Organization', 'Connecticut': 'Location', 'Multi-State Lottery Association': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Since Connecticut is a member of the Multi-State Lottery Association ( MUSL ) , it is eligible to offer its other multi-state games .\nAnswer: ",
        "responses": "['[{\"Connecticut\": \"Location\"}, {\"Multi-State Lottery Association\": \"Organization\"}, {\"MUSL\": \"Organization\"}]', '[{\"Connecticut\": \"Location\"}, {\"Multi-State Lottery Association\": \"Organization\"}, {\"MUSL\": \"Organization\"}]', '[{\"Connecticut\": \"Location\"}, {\"Multi-State Lottery Association\": \"Organization\"}, {\"MUSL\": \"Organization\"}]', '[{\"Connecticut\": \"Location\"}, {\"Multi-State Lottery Association\": \"Organization\"}, {\"MUSL\": \"Organization\"}]', '[{\"Connecticut\": \"Location\"}, {\"Multi-State Lottery Association\": \"Organization\"}, {\"MUSL\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Connecticut': 'Location', 'Multi-State Lottery Association': 'Organization', 'MUSL': 'Organization'}, {'Connecticut': 'Location', 'Multi-State Lottery Association': 'Organization', 'MUSL': 'Organization'}, {'Connecticut': 'Location', 'Multi-State Lottery Association': 'Organization', 'MUSL': 'Organization'}, {'Connecticut': 'Location', 'Multi-State Lottery Association': 'Organization', 'MUSL': 'Organization'}, {'Connecticut': 'Location', 'Multi-State Lottery Association': 'Organization', 'MUSL': 'Organization'}]",
        "prediction": "{'Connecticut': 'Location', 'Multi-State Lottery Association': 'Organization', 'MUSL': 'Organization'}",
        "consistency_score": "{'entities': {('Connecticut', 'Location'): 5, ('Multi-State Lottery Association', 'Organization'): 5, ('MUSL', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Connecticut', 'Location'): 5, ('Multi-State Lottery Association', 'Organization'): 5, ('MUSL', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 576,
        "sentence": "Flat cars # 2-13 were the largest flat cars on any 2-foot gauge railway in Maine .",
        "label": "{'Maine': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Flat cars # 2-13 were the largest flat cars on any 2-foot gauge railway in Maine .\nAnswer: ",
        "responses": "['[{\"Maine\": \"Location\"}]', '[{\"Maine\": \"Location\"}]', '[{\"Maine\": \"Location\"}]', '[{\"Maine\": \"Location\"}]', '[{\"Maine\": \"Location\"}]']",
        "prediction_per_consist": "[{'Maine': 'Location'}, {'Maine': 'Location'}, {'Maine': 'Location'}, {'Maine': 'Location'}, {'Maine': 'Location'}]",
        "prediction": "{'Maine': 'Location'}",
        "consistency_score": "{'entities': {('Maine', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Maine', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 48,
        "sentence": "It was the 89th season of play for the Falcons .",
        "label": "{'Falcons': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: It was the 89th season of play for the Falcons .\nAnswer: ",
        "responses": "['[{\"Falcons\": \"Organization\"}]', '[{\"Falcons\": \"Organization\"}]', '[{\"Falcons\": \"Organization\"}]', '[{\"Falcons\": \"Organization\"}]', '[{\"Falcons\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Falcons': 'Organization'}, {'Falcons': 'Organization'}, {'Falcons': 'Organization'}, {'Falcons': 'Organization'}, {'Falcons': 'Organization'}]",
        "prediction": "{'Falcons': 'Organization'}",
        "consistency_score": "{'entities': {('Falcons', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Falcons', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 876,
        "sentence": "In fact , Professor Behe admitted that the study which forms the basis for the article did not rule out many known evolutionary mechanisms and that the research actually might support evolutionary pathways if a biologically realistic population size were used . \"",
        "label": "{'Behe': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: In fact , Professor Behe admitted that the study which forms the basis for the article did not rule out many known evolutionary mechanisms and that the research actually might support evolutionary pathways if a biologically realistic population size were used . \"\nAnswer: ",
        "responses": "['[{\"Professor Behe\": \"Person\"}]', '[{\"Professor Behe\": \"Person\"}]', '[{\"Professor Behe\": \"Person\"}]', '[{\"Professor Behe\": \"Person\"}]', '[{\"Professor Behe\": \"Person\"}]']",
        "prediction_per_consist": "[{'Professor Behe': 'Person'}, {'Professor Behe': 'Person'}, {'Professor Behe': 'Person'}, {'Professor Behe': 'Person'}, {'Professor Behe': 'Person'}]",
        "prediction": "{'Professor Behe': 'Person'}",
        "consistency_score": "{'entities': {('Professor Behe', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Professor Behe', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1062,
        "sentence": "The elegant Victorian canopies over the pavements survived until the 1980s .",
        "label": "{'Victorian': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The elegant Victorian canopies over the pavements survived until the 1980s .\nAnswer: ",
        "responses": "['[{\"Victorian\": \"Miscellaneous\"}]', '[{\"Victorian\": \"Miscellaneous\"}]', '[{\"Victorian\": \"Miscellaneous\"}]', '[{\"Victorian\": \"Miscellaneous\"}]', '[{\"Victorian\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Victorian': 'Miscellaneous'}, {'Victorian': 'Miscellaneous'}, {'Victorian': 'Miscellaneous'}, {'Victorian': 'Miscellaneous'}, {'Victorian': 'Miscellaneous'}]",
        "prediction": "{'Victorian': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Victorian', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Victorian', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 661,
        "sentence": "In this , he is often cited as being influenced by pianist Eddy Duchin .",
        "label": "{'Eddy Duchin': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: In this , he is often cited as being influenced by pianist Eddy Duchin .\nAnswer: ",
        "responses": "['[{\"Eddy Duchin\": \"Person\"}]', '[{\"Eddy Duchin\": \"Person\"}]', '[{\"Eddy Duchin\": \"Person\"}]', '[{\"Eddy Duchin\": \"Person\"}]', '[{\"Eddy Duchin\": \"Person\"}]']",
        "prediction_per_consist": "[{'Eddy Duchin': 'Person'}, {'Eddy Duchin': 'Person'}, {'Eddy Duchin': 'Person'}, {'Eddy Duchin': 'Person'}, {'Eddy Duchin': 'Person'}]",
        "prediction": "{'Eddy Duchin': 'Person'}",
        "consistency_score": "{'entities': {('Eddy Duchin', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Eddy Duchin', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 220,
        "sentence": "The 1893 champion of the league , Montreal Hockey Club was the first winner of the Stanley Cup , being awarded the Cup as the champions of the AHAC and the AHAC was considered the top league of Canada .",
        "label": "{'Cup': 'Miscellaneous', 'AHAC': 'Organization', 'Stanley Cup': 'Miscellaneous', 'Montreal Hockey Club': 'Organization', 'Canada': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The 1893 champion of the league , Montreal Hockey Club was the first winner of the Stanley Cup , being awarded the Cup as the champions of the AHAC and the AHAC was considered the top league of Canada .\nAnswer: ",
        "responses": "['[{\"Montreal Hockey Club\": \"Organization\"}, {\"Stanley Cup\": \"Miscellaneous\"}, {\"AHAC\": \"Organization\"}, {\"Canada\": \"Location\"}]', '[{\"Montreal Hockey Club\": \"Organization\"}, {\"Stanley Cup\": \"Miscellaneous\"}, {\"AHAC\": \"Organization\"}, {\"Canada\": \"Location\"}]', '[{\"Montreal Hockey Club\": \"Organization\"}, {\"Stanley Cup\": \"Miscellaneous\"}, {\"AHAC\": \"Organization\"}, {\"Canada\": \"Location\"}]', '[{\"Montreal Hockey Club\": \"Organization\"}, {\"Stanley Cup\": \"Miscellaneous\"}, {\"AHAC\": \"Organization\"}, {\"Canada\": \"Location\"}]', '[{\"Montreal Hockey Club\": \"Organization\"}, {\"Stanley Cup\": \"Miscellaneous\"}, {\"AHAC\": \"Organization\"}, {\"Canada\": \"Location\"}]']",
        "prediction_per_consist": "[{'Montreal Hockey Club': 'Organization', 'Stanley Cup': 'Miscellaneous', 'AHAC': 'Organization', 'Canada': 'Location'}, {'Montreal Hockey Club': 'Organization', 'Stanley Cup': 'Miscellaneous', 'AHAC': 'Organization', 'Canada': 'Location'}, {'Montreal Hockey Club': 'Organization', 'Stanley Cup': 'Miscellaneous', 'AHAC': 'Organization', 'Canada': 'Location'}, {'Montreal Hockey Club': 'Organization', 'Stanley Cup': 'Miscellaneous', 'AHAC': 'Organization', 'Canada': 'Location'}, {'Montreal Hockey Club': 'Organization', 'Stanley Cup': 'Miscellaneous', 'AHAC': 'Organization', 'Canada': 'Location'}]",
        "prediction": "{'Montreal Hockey Club': 'Organization', 'Stanley Cup': 'Miscellaneous', 'AHAC': 'Organization', 'Canada': 'Location'}",
        "consistency_score": "{'entities': {('Montreal Hockey Club', 'Organization'): 5, ('Stanley Cup', 'Miscellaneous'): 5, ('AHAC', 'Organization'): 5, ('Canada', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Montreal Hockey Club', 'Organization'): 5, ('Stanley Cup', 'Miscellaneous'): 5, ('AHAC', 'Organization'): 5, ('Canada', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 483,
        "sentence": "The area surrounding Kopački Rit offers rich hunting grounds for high game ( deer in particular ) and equally opulent fishing grounds .",
        "label": "{'Kopački Rit': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The area surrounding Kopački Rit offers rich hunting grounds for high game ( deer in particular ) and equally opulent fishing grounds .\nAnswer: ",
        "responses": "['[{\"Kopački Rit\": \"Location\"}]', '[{\"Kopački Rit\": \"Location\"}]', '[{\"Kopački Rit\": \"Location\"}]', '[{\"Kopački Rit\": \"Location\"}]', '[{\"Kopački Rit\": \"Location\"}]']",
        "prediction_per_consist": "[{'Kopački Rit': 'Location'}, {'Kopački Rit': 'Location'}, {'Kopački Rit': 'Location'}, {'Kopački Rit': 'Location'}, {'Kopački Rit': 'Location'}]",
        "prediction": "{'Kopački Rit': 'Location'}",
        "consistency_score": "{'entities': {('Kopački Rit', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Kopački Rit', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 525,
        "sentence": "The train services are operated by the Ffestiniog Railway Company .",
        "label": "{'Ffestiniog Railway Company': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The train services are operated by the Ffestiniog Railway Company .\nAnswer: ",
        "responses": "['[{\"Ffestiniog Railway Company\": \"Organization\"}]', '[{\"Ffestiniog Railway Company\": \"Organization\"}]', '[{\"Ffestiniog Railway Company\": \"Organization\"}]', '[{\"Ffestiniog Railway Company\": \"Organization\"}]', '[{\"Ffestiniog Railway Company\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Ffestiniog Railway Company': 'Organization'}, {'Ffestiniog Railway Company': 'Organization'}, {'Ffestiniog Railway Company': 'Organization'}, {'Ffestiniog Railway Company': 'Organization'}, {'Ffestiniog Railway Company': 'Organization'}]",
        "prediction": "{'Ffestiniog Railway Company': 'Organization'}",
        "consistency_score": "{'entities': {('Ffestiniog Railway Company', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Ffestiniog Railway Company', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 850,
        "sentence": "His postgraduate students have included Marcus du Sautoy and Geoff Smith .",
        "label": "{'Marcus du Sautoy': 'Person', 'Geoff Smith': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: His postgraduate students have included Marcus du Sautoy and Geoff Smith .\nAnswer: ",
        "responses": "['[{\"Marcus du Sautoy\": \"Person\"}, {\"Geoff Smith\": \"Person\"}]', '[{\"Marcus du Sautoy\": \"Person\"}, {\"Geoff Smith\": \"Person\"}]', '[{\"Marcus du Sautoy\": \"Person\"}, {\"Geoff Smith\": \"Person\"}]', '[{\"Marcus du Sautoy\": \"Person\"}, {\"Geoff Smith\": \"Person\"}]', '[{\"Marcus du Sautoy\": \"Person\"}, {\"Geoff Smith\": \"Person\"}]']",
        "prediction_per_consist": "[{'Marcus du Sautoy': 'Person', 'Geoff Smith': 'Person'}, {'Marcus du Sautoy': 'Person', 'Geoff Smith': 'Person'}, {'Marcus du Sautoy': 'Person', 'Geoff Smith': 'Person'}, {'Marcus du Sautoy': 'Person', 'Geoff Smith': 'Person'}, {'Marcus du Sautoy': 'Person', 'Geoff Smith': 'Person'}]",
        "prediction": "{'Marcus du Sautoy': 'Person', 'Geoff Smith': 'Person'}",
        "consistency_score": "{'entities': {('Marcus du Sautoy', 'Person'): 5, ('Geoff Smith', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Marcus du Sautoy', 'Person'): 5, ('Geoff Smith', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 837,
        "sentence": "Dahvin \" DaHv \" Daniels ( born August 23 , 1993 ) in Danvers , Massachusetts is an American rapper and singer .",
        "label": "{'Danvers': 'Location', 'American': 'Miscellaneous', 'Dahvin \" DaHv \" Daniels': 'Person', 'Massachusetts': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Dahvin \" DaHv \" Daniels ( born August 23 , 1993 ) in Danvers , Massachusetts is an American rapper and singer .\nAnswer: ",
        "responses": "['[{\"Dahvin\": \"Person\"}, {\"DaHv\": \"Person\"}, {\"Daniels\": \"Person\"}, {\"Danvers\": \"Location\"}, {\"Massachusetts\": \"Location\"}, {\"American\": \"Miscellaneous\"}]', '[{\"Dahvin\": \"Person\"}, {\"DaHv\": \"Person\"}, {\"Daniels\": \"Person\"}, {\"Danvers\": \"Location\"}, {\"Massachusetts\": \"Location\"}, {\"American\": \"Miscellaneous\"}]', '[{\"Dahvin\": \"Person\"}, {\"DaHv\": \"Person\"}, {\"Daniels\": \"Person\"}, {\"Danvers\": \"Location\"}, {\"Massachusetts\": \"Location\"}, {\"American\": \"Miscellaneous\"}]', '[{\"Dahvin\": \"Person\"}, {\"DaHv\": \"Person\"}, {\"Daniels\": \"Person\"}, {\"Danvers\": \"Location\"}, {\"Massachusetts\": \"Location\"}, {\"American\": \"Miscellaneous\"}]', '[{\"Dahvin\": \"Person\"}, {\"DaHv\": \"Person\"}, {\"Daniels\": \"Person\"}, {\"Danvers\": \"Location\"}, {\"Massachusetts\": \"Location\"}, {\"American\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Dahvin': 'Person', 'DaHv': 'Person', 'Daniels': 'Person', 'Danvers': 'Location', 'Massachusetts': 'Location', 'American': 'Miscellaneous'}, {'Dahvin': 'Person', 'DaHv': 'Person', 'Daniels': 'Person', 'Danvers': 'Location', 'Massachusetts': 'Location', 'American': 'Miscellaneous'}, {'Dahvin': 'Person', 'DaHv': 'Person', 'Daniels': 'Person', 'Danvers': 'Location', 'Massachusetts': 'Location', 'American': 'Miscellaneous'}, {'Dahvin': 'Person', 'DaHv': 'Person', 'Daniels': 'Person', 'Danvers': 'Location', 'Massachusetts': 'Location', 'American': 'Miscellaneous'}, {'Dahvin': 'Person', 'DaHv': 'Person', 'Daniels': 'Person', 'Danvers': 'Location', 'Massachusetts': 'Location', 'American': 'Miscellaneous'}]",
        "prediction": "{'Dahvin': 'Person', 'DaHv': 'Person', 'Daniels': 'Person', 'Danvers': 'Location', 'Massachusetts': 'Location', 'American': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Dahvin', 'Person'): 5, ('DaHv', 'Person'): 5, ('Daniels', 'Person'): 5, ('Danvers', 'Location'): 5, ('Massachusetts', 'Location'): 5, ('American', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Dahvin', 'Person'): 5, ('DaHv', 'Person'): 5, ('Daniels', 'Person'): 5, ('Danvers', 'Location'): 5, ('Massachusetts', 'Location'): 5, ('American', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 238,
        "sentence": "At the time , the Montreal Hockey Club was in a dispute with its parent organization , the Montreal Amateur Athletic Association ( MAAA ) .",
        "label": "{'Montreal Hockey Club': 'Organization', 'MAAA': 'Organization', 'Montreal Amateur Athletic Association': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: At the time , the Montreal Hockey Club was in a dispute with its parent organization , the Montreal Amateur Athletic Association ( MAAA ) .\nAnswer: ",
        "responses": "['[{\"Montreal Hockey Club\": \"Organization\"}, {\"Montreal Amateur Athletic Association\": \"Organization\"}]', '[{\"Montreal Hockey Club\": \"Organization\"}, {\"Montreal Amateur Athletic Association\": \"Organization\"}]', '[{\"Montreal Hockey Club\": \"Organization\"}, {\"Montreal Amateur Athletic Association\": \"Organization\"}]', '[{\"Montreal Hockey Club\": \"Organization\"}, {\"Montreal Amateur Athletic Association\": \"Organization\"}]', '[{\"Montreal Hockey Club\": \"Organization\"}, {\"Montreal Amateur Athletic Association\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Montreal Hockey Club': 'Organization', 'Montreal Amateur Athletic Association': 'Organization'}, {'Montreal Hockey Club': 'Organization', 'Montreal Amateur Athletic Association': 'Organization'}, {'Montreal Hockey Club': 'Organization', 'Montreal Amateur Athletic Association': 'Organization'}, {'Montreal Hockey Club': 'Organization', 'Montreal Amateur Athletic Association': 'Organization'}, {'Montreal Hockey Club': 'Organization', 'Montreal Amateur Athletic Association': 'Organization'}]",
        "prediction": "{'Montreal Hockey Club': 'Organization', 'Montreal Amateur Athletic Association': 'Organization'}",
        "consistency_score": "{'entities': {('Montreal Hockey Club', 'Organization'): 5, ('Montreal Amateur Athletic Association', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Montreal Hockey Club', 'Organization'): 5, ('Montreal Amateur Athletic Association', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1340,
        "sentence": "It specializes in the works of Maxfield Parrish , and houses the collection of Alma Gilbert .",
        "label": "{'Alma Gilbert': 'Person', 'Maxfield Parrish': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: It specializes in the works of Maxfield Parrish , and houses the collection of Alma Gilbert .\nAnswer: ",
        "responses": "['[{\"Maxfield Parrish\": \"Person\"}, {\"Alma Gilbert\": \"Person\"}]', '[{\"Maxfield Parrish\": \"Person\"}, {\"Alma Gilbert\": \"Person\"}]', '[{\"Maxfield Parrish\": \"Person\"}, {\"Alma Gilbert\": \"Person\"}]', '[{\"Maxfield Parrish\": \"Person\"}, {\"Alma Gilbert\": \"Person\"}]', '[{\"Maxfield Parrish\": \"Person\"}, {\"Alma Gilbert\": \"Person\"}]']",
        "prediction_per_consist": "[{'Maxfield Parrish': 'Person', 'Alma Gilbert': 'Person'}, {'Maxfield Parrish': 'Person', 'Alma Gilbert': 'Person'}, {'Maxfield Parrish': 'Person', 'Alma Gilbert': 'Person'}, {'Maxfield Parrish': 'Person', 'Alma Gilbert': 'Person'}, {'Maxfield Parrish': 'Person', 'Alma Gilbert': 'Person'}]",
        "prediction": "{'Maxfield Parrish': 'Person', 'Alma Gilbert': 'Person'}",
        "consistency_score": "{'entities': {('Maxfield Parrish', 'Person'): 5, ('Alma Gilbert', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Maxfield Parrish', 'Person'): 5, ('Alma Gilbert', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 382,
        "sentence": "Dou Jiande was later executed , resulting in some of his followers , led by Liu Heita , raising an unsuccessful rebellion against Tang .",
        "label": "{'Liu Heita': 'Person', 'Dou Jiande': 'Person', 'Tang': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Dou Jiande was later executed , resulting in some of his followers , led by Liu Heita , raising an unsuccessful rebellion against Tang .\nAnswer: ",
        "responses": "['[{\"Dou Jiande\": \"Person\"}, {\"Liu Heita\": \"Person\"}, {\"Tang\": \"Organization\"}]', '[{\"Dou Jiande\": \"Person\"}, {\"Liu Heita\": \"Person\"}, {\"Tang\": \"Organization\"}]', '[{\"Dou Jiande\": \"Person\"}, {\"Liu Heita\": \"Person\"}, {\"Tang\": \"Organization\"}]', '[{\"Dou Jiande\": \"Person\"}, {\"Liu Heita\": \"Person\"}, {\"Tang\": \"Organization\"}]', '[{\"Dou Jiande\": \"Person\"}, {\"Liu Heita\": \"Person\"}, {\"Tang\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Dou Jiande': 'Person', 'Liu Heita': 'Person', 'Tang': 'Organization'}, {'Dou Jiande': 'Person', 'Liu Heita': 'Person', 'Tang': 'Organization'}, {'Dou Jiande': 'Person', 'Liu Heita': 'Person', 'Tang': 'Organization'}, {'Dou Jiande': 'Person', 'Liu Heita': 'Person', 'Tang': 'Organization'}, {'Dou Jiande': 'Person', 'Liu Heita': 'Person', 'Tang': 'Organization'}]",
        "prediction": "{'Dou Jiande': 'Person', 'Liu Heita': 'Person', 'Tang': 'Organization'}",
        "consistency_score": "{'entities': {('Dou Jiande', 'Person'): 5, ('Liu Heita', 'Person'): 5, ('Tang', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Dou Jiande', 'Person'): 5, ('Liu Heita', 'Person'): 5, ('Tang', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 98,
        "sentence": "The show was hosted by LL Cool J .",
        "label": "{'LL Cool J': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The show was hosted by LL Cool J .\nAnswer: ",
        "responses": "['[{\"LL Cool J\": \"Person\"}]', '[{\"LL Cool J\": \"Person\"}]', '[{\"LL Cool J\": \"Person\"}]', '[{\"LL Cool J\": \"Person\"}]', '[{\"LL Cool J\": \"Person\"}]']",
        "prediction_per_consist": "[{'LL Cool J': 'Person'}, {'LL Cool J': 'Person'}, {'LL Cool J': 'Person'}, {'LL Cool J': 'Person'}, {'LL Cool J': 'Person'}]",
        "prediction": "{'LL Cool J': 'Person'}",
        "consistency_score": "{'entities': {('LL Cool J', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('LL Cool J', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 315,
        "sentence": "Proastiakos S.A. belongs to OSE , which is also a public company .",
        "label": "{'OSE': 'Organization', 'Proastiakos S.A.': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Proastiakos S.A. belongs to OSE , which is also a public company .\nAnswer: ",
        "responses": "['[{\"Proastiakos S.A.\": \"Organization\"}, {\"OSE\": \"Organization\"}]', '[{\"Proastiakos S.A.\": \"Organization\"}, {\"OSE\": \"Organization\"}]', '[{\"Proastiakos S.A.\": \"Organization\"}, {\"OSE\": \"Organization\"}]', '[{\"Proastiakos S.A.\": \"Organization\"}, {\"OSE\": \"Organization\"}]', '[{\"Proastiakos S.A.\": \"Organization\"}, {\"OSE\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Proastiakos S.A.': 'Organization', 'OSE': 'Organization'}, {'Proastiakos S.A.': 'Organization', 'OSE': 'Organization'}, {'Proastiakos S.A.': 'Organization', 'OSE': 'Organization'}, {'Proastiakos S.A.': 'Organization', 'OSE': 'Organization'}, {'Proastiakos S.A.': 'Organization', 'OSE': 'Organization'}]",
        "prediction": "{'Proastiakos S.A.': 'Organization', 'OSE': 'Organization'}",
        "consistency_score": "{'entities': {('Proastiakos S.A.', 'Organization'): 5, ('OSE', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Proastiakos S.A.', 'Organization'): 5, ('OSE', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 378,
        "sentence": "It is located to the east of the town , north of Whitebirk and near the boundary with Hyndburn .",
        "label": "{'Whitebirk': 'Location', 'Hyndburn': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: It is located to the east of the town , north of Whitebirk and near the boundary with Hyndburn .\nAnswer: ",
        "responses": "['[{\"Whitebirk\": \"Location\"}, {\"Hyndburn\": \"Location\"}]', '[{\"Whitebirk\": \"Location\"}, {\"Hyndburn\": \"Location\"}]', '[{\"Whitebirk\": \"Location\"}, {\"Hyndburn\": \"Location\"}]', '[{\"Whitebirk\": \"Location\"}, {\"Hyndburn\": \"Location\"}]', '[{\"Whitebirk\": \"Location\"}, {\"Hyndburn\": \"Location\"}]']",
        "prediction_per_consist": "[{'Whitebirk': 'Location', 'Hyndburn': 'Location'}, {'Whitebirk': 'Location', 'Hyndburn': 'Location'}, {'Whitebirk': 'Location', 'Hyndburn': 'Location'}, {'Whitebirk': 'Location', 'Hyndburn': 'Location'}, {'Whitebirk': 'Location', 'Hyndburn': 'Location'}]",
        "prediction": "{'Whitebirk': 'Location', 'Hyndburn': 'Location'}",
        "consistency_score": "{'entities': {('Whitebirk', 'Location'): 5, ('Hyndburn', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Whitebirk', 'Location'): 5, ('Hyndburn', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 999,
        "sentence": "Bobick 's first match was against Tommy Burns .",
        "label": "{'Tommy Burns': 'Person', 'Bobick': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Bobick 's first match was against Tommy Burns .\nAnswer: ",
        "responses": "['[{\"Bobick\": \"Person\"}, {\"Tommy Burns\": \"Person\"}]', '[{\"Bobick\": \"Person\"}, {\"Tommy Burns\": \"Person\"}]', '[{\"Bobick\": \"Person\"}, {\"Tommy Burns\": \"Person\"}]', '[{\"Bobick\": \"Person\"}, {\"Tommy Burns\": \"Person\"}]', '[{\"Bobick\": \"Person\"}, {\"Tommy Burns\": \"Person\"}]']",
        "prediction_per_consist": "[{'Bobick': 'Person', 'Tommy Burns': 'Person'}, {'Bobick': 'Person', 'Tommy Burns': 'Person'}, {'Bobick': 'Person', 'Tommy Burns': 'Person'}, {'Bobick': 'Person', 'Tommy Burns': 'Person'}, {'Bobick': 'Person', 'Tommy Burns': 'Person'}]",
        "prediction": "{'Bobick': 'Person', 'Tommy Burns': 'Person'}",
        "consistency_score": "{'entities': {('Bobick', 'Person'): 5, ('Tommy Burns', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Bobick', 'Person'): 5, ('Tommy Burns', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 979,
        "sentence": "( Mendelssohn was the model for Nathan der Weise in Lessing 's play of the same name . )",
        "label": "{'Nathan der Weise': 'Person', 'Lessing': 'Person', 'Mendelssohn': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: ( Mendelssohn was the model for Nathan der Weise in Lessing 's play of the same name . )\nAnswer: ",
        "responses": "['[{\"Mendelssohn\": \"Person\"}, {\"Nathan der Weise\": \"Person\"}, {\"Lessing\": \"Person\"}]', '[{\"Mendelssohn\": \"Person\"}, {\"Nathan der Weise\": \"Person\"}, {\"Lessing\": \"Person\"}]', '[{\"Mendelssohn\": \"Person\"}, {\"Nathan der Weise\": \"Person\"}, {\"Lessing\": \"Person\"}]', '[{\"Mendelssohn\": \"Person\"}, {\"Nathan der Weise\": \"Person\"}, {\"Lessing\": \"Person\"}]', '[{\"Mendelssohn\": \"Person\"}, {\"Nathan der Weise\": \"Person\"}, {\"Lessing\": \"Person\"}]']",
        "prediction_per_consist": "[{'Mendelssohn': 'Person', 'Nathan der Weise': 'Person', 'Lessing': 'Person'}, {'Mendelssohn': 'Person', 'Nathan der Weise': 'Person', 'Lessing': 'Person'}, {'Mendelssohn': 'Person', 'Nathan der Weise': 'Person', 'Lessing': 'Person'}, {'Mendelssohn': 'Person', 'Nathan der Weise': 'Person', 'Lessing': 'Person'}, {'Mendelssohn': 'Person', 'Nathan der Weise': 'Person', 'Lessing': 'Person'}]",
        "prediction": "{'Mendelssohn': 'Person', 'Nathan der Weise': 'Person', 'Lessing': 'Person'}",
        "consistency_score": "{'entities': {('Mendelssohn', 'Person'): 5, ('Nathan der Weise', 'Person'): 5, ('Lessing', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Mendelssohn', 'Person'): 5, ('Nathan der Weise', 'Person'): 5, ('Lessing', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 883,
        "sentence": "Stanley and cohorts were found liable for defamation and making death threats .",
        "label": "{'Stanley': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Stanley and cohorts were found liable for defamation and making death threats .\nAnswer: ",
        "responses": "['[{\"Stanley\": \"Person\"}]', '[{\"Stanley\": \"Person\"}]', '[{\"Stanley\": \"Person\"}]', '[{\"Stanley\": \"Person\"}]', '[{\"Stanley\": \"Person\"}]']",
        "prediction_per_consist": "[{'Stanley': 'Person'}, {'Stanley': 'Person'}, {'Stanley': 'Person'}, {'Stanley': 'Person'}, {'Stanley': 'Person'}]",
        "prediction": "{'Stanley': 'Person'}",
        "consistency_score": "{'entities': {('Stanley', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Stanley', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 314,
        "sentence": "The album cover 's artwork was provided by Mattias Noren .",
        "label": "{'Mattias Noren': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The album cover 's artwork was provided by Mattias Noren .\nAnswer: ",
        "responses": "['[{\"Mattias Noren\": \"Person\"}]', '[{\"Mattias Noren\": \"Person\"}]', '[{\"Mattias Noren\": \"Person\"}]', '[{\"Mattias Noren\": \"Person\"}]', '[{\"Mattias Noren\": \"Person\"}]']",
        "prediction_per_consist": "[{'Mattias Noren': 'Person'}, {'Mattias Noren': 'Person'}, {'Mattias Noren': 'Person'}, {'Mattias Noren': 'Person'}, {'Mattias Noren': 'Person'}]",
        "prediction": "{'Mattias Noren': 'Person'}",
        "consistency_score": "{'entities': {('Mattias Noren', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Mattias Noren', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 690,
        "sentence": "It was the former gym of Hayward Union High .",
        "label": "{'Hayward Union High': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: It was the former gym of Hayward Union High .\nAnswer: ",
        "responses": "['[{\"Hayward Union High\": \"Organization\"}]', '[{\"Hayward Union High\": \"Organization\"}]', '[{\"Hayward Union High\": \"Organization\"}]', '[{\"Hayward Union High\": \"Organization\"}]', '[{\"Hayward Union High\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Hayward Union High': 'Organization'}, {'Hayward Union High': 'Organization'}, {'Hayward Union High': 'Organization'}, {'Hayward Union High': 'Organization'}, {'Hayward Union High': 'Organization'}]",
        "prediction": "{'Hayward Union High': 'Organization'}",
        "consistency_score": "{'entities': {('Hayward Union High', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Hayward Union High', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 760,
        "sentence": "Claire Keim ( born July 8 , 1975 ) is a French actress and singer .",
        "label": "{'French': 'Miscellaneous', 'Claire Keim': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Claire Keim ( born July 8 , 1975 ) is a French actress and singer .\nAnswer: ",
        "responses": "['[{\"Claire Keim\": \"Person\"}, {\"French\": \"Miscellaneous\"}]', '[{\"Claire Keim\": \"Person\"}, {\"French\": \"Miscellaneous\"}]', '[{\"Claire Keim\": \"Person\"}, {\"French\": \"Miscellaneous\"}]', '[{\"Claire Keim\": \"Person\"}, {\"French\": \"Miscellaneous\"}]', '[{\"Claire Keim\": \"Person\"}, {\"French\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Claire Keim': 'Person', 'French': 'Miscellaneous'}, {'Claire Keim': 'Person', 'French': 'Miscellaneous'}, {'Claire Keim': 'Person', 'French': 'Miscellaneous'}, {'Claire Keim': 'Person', 'French': 'Miscellaneous'}, {'Claire Keim': 'Person', 'French': 'Miscellaneous'}]",
        "prediction": "{'Claire Keim': 'Person', 'French': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Claire Keim', 'Person'): 5, ('French', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Claire Keim', 'Person'): 5, ('French', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 793,
        "sentence": "The FCC Complex is located south of the town of Coleman , Florida , off Highway 301 .",
        "label": "{'Florida': 'Location', 'Coleman': 'Location', 'Highway 301': 'Location', 'FCC Complex': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The FCC Complex is located south of the town of Coleman , Florida , off Highway 301 .\nAnswer: ",
        "responses": "['[{\"FCC Complex\": \"Organization\"}, {\"Coleman\": \"Location\"}, {\"Florida\": \"Location\"}, {\"Highway 301\": \"Location\"}]', '[{\"FCC Complex\": \"Organization\"}, {\"Coleman\": \"Location\"}, {\"Florida\": \"Location\"}, {\"Highway 301\": \"Location\"}]', '[{\"FCC Complex\": \"Organization\"}, {\"Coleman\": \"Location\"}, {\"Florida\": \"Location\"}, {\"Highway 301\": \"Location\"}]', '[{\"FCC Complex\": \"Organization\"}, {\"Coleman\": \"Location\"}, {\"Florida\": \"Location\"}, {\"Highway 301\": \"Location\"}]', '[{\"FCC Complex\": \"Organization\"}, {\"Coleman\": \"Location\"}, {\"Florida\": \"Location\"}, {\"Highway 301\": \"Location\"}]']",
        "prediction_per_consist": "[{'FCC Complex': 'Organization', 'Coleman': 'Location', 'Florida': 'Location', 'Highway 301': 'Location'}, {'FCC Complex': 'Organization', 'Coleman': 'Location', 'Florida': 'Location', 'Highway 301': 'Location'}, {'FCC Complex': 'Organization', 'Coleman': 'Location', 'Florida': 'Location', 'Highway 301': 'Location'}, {'FCC Complex': 'Organization', 'Coleman': 'Location', 'Florida': 'Location', 'Highway 301': 'Location'}, {'FCC Complex': 'Organization', 'Coleman': 'Location', 'Florida': 'Location', 'Highway 301': 'Location'}]",
        "prediction": "{'FCC Complex': 'Organization', 'Coleman': 'Location', 'Florida': 'Location', 'Highway 301': 'Location'}",
        "consistency_score": "{'entities': {('FCC Complex', 'Organization'): 5, ('Coleman', 'Location'): 5, ('Florida', 'Location'): 5, ('Highway 301', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('FCC Complex', 'Organization'): 5, ('Coleman', 'Location'): 5, ('Florida', 'Location'): 5, ('Highway 301', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 662,
        "sentence": "Liberace was greatly influenced by both Cavallaro and Duchin .",
        "label": "{'Cavallaro': 'Person', 'Duchin': 'Person', 'Liberace': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Liberace was greatly influenced by both Cavallaro and Duchin .\nAnswer: ",
        "responses": "['[{\"Liberace\": \"Person\"}, {\"Cavallaro\": \"Person\"}, {\"Duchin\": \"Person\"}]', '[{\"Liberace\": \"Person\"}, {\"Cavallaro\": \"Person\"}, {\"Duchin\": \"Person\"}]', '[{\"Liberace\": \"Person\"}, {\"Cavallaro\": \"Person\"}, {\"Duchin\": \"Person\"}]', '[{\"Liberace\": \"Person\"}, {\"Cavallaro\": \"Person\"}, {\"Duchin\": \"Person\"}]', '[{\"Liberace\": \"Person\"}, {\"Cavallaro\": \"Person\"}, {\"Duchin\": \"Person\"}]']",
        "prediction_per_consist": "[{'Liberace': 'Person', 'Cavallaro': 'Person', 'Duchin': 'Person'}, {'Liberace': 'Person', 'Cavallaro': 'Person', 'Duchin': 'Person'}, {'Liberace': 'Person', 'Cavallaro': 'Person', 'Duchin': 'Person'}, {'Liberace': 'Person', 'Cavallaro': 'Person', 'Duchin': 'Person'}, {'Liberace': 'Person', 'Cavallaro': 'Person', 'Duchin': 'Person'}]",
        "prediction": "{'Liberace': 'Person', 'Cavallaro': 'Person', 'Duchin': 'Person'}",
        "consistency_score": "{'entities': {('Liberace', 'Person'): 5, ('Cavallaro', 'Person'): 5, ('Duchin', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Liberace', 'Person'): 5, ('Cavallaro', 'Person'): 5, ('Duchin', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 937,
        "sentence": "\" We were using digital equipment to produce the music but in a very analogue way .",
        "label": "{}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: \" We were using digital equipment to produce the music but in a very analogue way .\nAnswer: ",
        "responses": "['[{\"digital equipment\": \"Miscellaneous\"}]', '[{\"digital equipment\": \"Miscellaneous\"}]', '[{\"digital equipment\": \"Miscellaneous\"}]', '[{\"digital equipment\": \"Miscellaneous\"}]', '[{\"digital equipment\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'digital equipment': 'Miscellaneous'}, {'digital equipment': 'Miscellaneous'}, {'digital equipment': 'Miscellaneous'}, {'digital equipment': 'Miscellaneous'}, {'digital equipment': 'Miscellaneous'}]",
        "prediction": "{'digital equipment': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('digital equipment', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('digital equipment', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1037,
        "sentence": "Descendant Eberhard Faber V was a founding member of the band God Street Wine .",
        "label": "{'God Street Wine': 'Organization', 'Eberhard Faber V': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Descendant Eberhard Faber V was a founding member of the band God Street Wine .\nAnswer: ",
        "responses": "['[{\"Eberhard Faber V\": \"Person\"}, {\"God Street Wine\": \"Organization\"}]', '[{\"Eberhard Faber V\": \"Person\"}, {\"God Street Wine\": \"Organization\"}]', '[{\"Eberhard Faber V\": \"Person\"}, {\"God Street Wine\": \"Organization\"}]', '[{\"Eberhard Faber V\": \"Person\"}, {\"God Street Wine\": \"Organization\"}]', '[{\"Eberhard Faber V\": \"Person\"}, {\"God Street Wine\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Eberhard Faber V': 'Person', 'God Street Wine': 'Organization'}, {'Eberhard Faber V': 'Person', 'God Street Wine': 'Organization'}, {'Eberhard Faber V': 'Person', 'God Street Wine': 'Organization'}, {'Eberhard Faber V': 'Person', 'God Street Wine': 'Organization'}, {'Eberhard Faber V': 'Person', 'God Street Wine': 'Organization'}]",
        "prediction": "{'Eberhard Faber V': 'Person', 'God Street Wine': 'Organization'}",
        "consistency_score": "{'entities': {('Eberhard Faber V', 'Person'): 5, ('God Street Wine', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Eberhard Faber V', 'Person'): 5, ('God Street Wine', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 649,
        "sentence": "He has one daughter , Angelina , born in December 2004 .",
        "label": "{'Angelina': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He has one daughter , Angelina , born in December 2004 .\nAnswer: ",
        "responses": "['[{\"Angelina\": \"Person\"}]', '[{\"Angelina\": \"Person\"}]', '[{\"Angelina\": \"Person\"}]', '[{\"Angelina\": \"Person\"}]', '[{\"Angelina\": \"Person\"}]']",
        "prediction_per_consist": "[{'Angelina': 'Person'}, {'Angelina': 'Person'}, {'Angelina': 'Person'}, {'Angelina': 'Person'}, {'Angelina': 'Person'}]",
        "prediction": "{'Angelina': 'Person'}",
        "consistency_score": "{'entities': {('Angelina', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Angelina', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1218,
        "sentence": "Since the 1990s a growing number of people have observed a two-minute silence on 11 November , resulting in both Armistice Day and Remembrance Sunday being commemorated formally in the UK ( although in 2007 they fell on the same day ) .",
        "label": "{'Remembrance Sunday': 'Miscellaneous', 'UK': 'Location', 'Armistice Day': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Since the 1990s a growing number of people have observed a two-minute silence on 11 November , resulting in both Armistice Day and Remembrance Sunday being commemorated formally in the UK ( although in 2007 they fell on the same day ) .\nAnswer: ",
        "responses": "['[{\"Armistice Day\": \"Miscellaneous\"}, {\"Remembrance Sunday\": \"Miscellaneous\"}, {\"UK\": \"Location\"}]', '[{\"Armistice Day\": \"Miscellaneous\"}, {\"Remembrance Sunday\": \"Miscellaneous\"}, {\"UK\": \"Location\"}]', '[{\"Armistice Day\": \"Miscellaneous\"}, {\"Remembrance Sunday\": \"Miscellaneous\"}, {\"UK\": \"Location\"}]', '[{\"Armistice Day\": \"Miscellaneous\"}, {\"Remembrance Sunday\": \"Miscellaneous\"}, {\"UK\": \"Location\"}]', '[{\"Armistice Day\": \"Miscellaneous\"}, {\"Remembrance Sunday\": \"Miscellaneous\"}, {\"UK\": \"Location\"}]']",
        "prediction_per_consist": "[{'Armistice Day': 'Miscellaneous', 'Remembrance Sunday': 'Miscellaneous', 'UK': 'Location'}, {'Armistice Day': 'Miscellaneous', 'Remembrance Sunday': 'Miscellaneous', 'UK': 'Location'}, {'Armistice Day': 'Miscellaneous', 'Remembrance Sunday': 'Miscellaneous', 'UK': 'Location'}, {'Armistice Day': 'Miscellaneous', 'Remembrance Sunday': 'Miscellaneous', 'UK': 'Location'}, {'Armistice Day': 'Miscellaneous', 'Remembrance Sunday': 'Miscellaneous', 'UK': 'Location'}]",
        "prediction": "{'Armistice Day': 'Miscellaneous', 'Remembrance Sunday': 'Miscellaneous', 'UK': 'Location'}",
        "consistency_score": "{'entities': {('Armistice Day', 'Miscellaneous'): 5, ('Remembrance Sunday', 'Miscellaneous'): 5, ('UK', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Armistice Day', 'Miscellaneous'): 5, ('Remembrance Sunday', 'Miscellaneous'): 5, ('UK', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 726,
        "sentence": "He was also a regular for Victoria at interstate football , playing every year from 1932 to 1936 , the last as captain .",
        "label": "{'Victoria': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He was also a regular for Victoria at interstate football , playing every year from 1932 to 1936 , the last as captain .\nAnswer: ",
        "responses": "['[{\"Victoria\": \"Location\"}]', '[{\"Victoria\": \"Location\"}]', '[{\"Victoria\": \"Location\"}]', '[{\"Victoria\": \"Location\"}]', '[{\"Victoria\": \"Location\"}]']",
        "prediction_per_consist": "[{'Victoria': 'Location'}, {'Victoria': 'Location'}, {'Victoria': 'Location'}, {'Victoria': 'Location'}, {'Victoria': 'Location'}]",
        "prediction": "{'Victoria': 'Location'}",
        "consistency_score": "{'entities': {('Victoria', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Victoria', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 202,
        "sentence": "Albert Wren was an Ontario politician .",
        "label": "{'Albert Wren': 'Person', 'Ontario': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Albert Wren was an Ontario politician .\nAnswer: ",
        "responses": "['[{\"Albert Wren\": \"Person\"}, {\"Ontario\": \"Location\"}]', '[{\"Albert Wren\": \"Person\"}, {\"Ontario\": \"Location\"}]', '[{\"Albert Wren\": \"Person\"}, {\"Ontario\": \"Location\"}]', '[{\"Albert Wren\": \"Person\"}, {\"Ontario\": \"Location\"}]', '[{\"Albert Wren\": \"Person\"}, {\"Ontario\": \"Location\"}]']",
        "prediction_per_consist": "[{'Albert Wren': 'Person', 'Ontario': 'Location'}, {'Albert Wren': 'Person', 'Ontario': 'Location'}, {'Albert Wren': 'Person', 'Ontario': 'Location'}, {'Albert Wren': 'Person', 'Ontario': 'Location'}, {'Albert Wren': 'Person', 'Ontario': 'Location'}]",
        "prediction": "{'Albert Wren': 'Person', 'Ontario': 'Location'}",
        "consistency_score": "{'entities': {('Albert Wren', 'Person'): 5, ('Ontario', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Albert Wren', 'Person'): 5, ('Ontario', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 771,
        "sentence": "However , the building incurred damage during the war in Bosnia and Herzegovina and upon its repairs it was upgraded into a hospital .",
        "label": "{'Bosnia and Herzegovina': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: However , the building incurred damage during the war in Bosnia and Herzegovina and upon its repairs it was upgraded into a hospital .\nAnswer: ",
        "responses": "['[{\"Bosnia and Herzegovina\": \"Location\"}]', '[{\"Bosnia and Herzegovina\": \"Location\"}]', '[{\"Bosnia and Herzegovina\": \"Location\"}]', '[{\"Bosnia and Herzegovina\": \"Location\"}]', '[{\"Bosnia and Herzegovina\": \"Location\"}]']",
        "prediction_per_consist": "[{'Bosnia and Herzegovina': 'Location'}, {'Bosnia and Herzegovina': 'Location'}, {'Bosnia and Herzegovina': 'Location'}, {'Bosnia and Herzegovina': 'Location'}, {'Bosnia and Herzegovina': 'Location'}]",
        "prediction": "{'Bosnia and Herzegovina': 'Location'}",
        "consistency_score": "{'entities': {('Bosnia and Herzegovina', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Bosnia and Herzegovina', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1145,
        "sentence": "By December 1864 , they were back in the siege lines of Petersburg .",
        "label": "{'Petersburg': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: By December 1864 , they were back in the siege lines of Petersburg .\nAnswer: ",
        "responses": "['[{\"December 1864\": \"Miscellaneous\"}, {\"Petersburg\": \"Location\"}]', '[{\"December 1864\": \"Miscellaneous\"}, {\"Petersburg\": \"Location\"}]', '[{\"December 1864\": \"Miscellaneous\"}, {\"Petersburg\": \"Location\"}]', '[{\"December 1864\": \"Miscellaneous\"}, {\"Petersburg\": \"Location\"}]', '[{\"December 1864\": \"Miscellaneous\"}, {\"Petersburg\": \"Location\"}]']",
        "prediction_per_consist": "[{'December 1864': 'Miscellaneous', 'Petersburg': 'Location'}, {'December 1864': 'Miscellaneous', 'Petersburg': 'Location'}, {'December 1864': 'Miscellaneous', 'Petersburg': 'Location'}, {'December 1864': 'Miscellaneous', 'Petersburg': 'Location'}, {'December 1864': 'Miscellaneous', 'Petersburg': 'Location'}]",
        "prediction": "{'December 1864': 'Miscellaneous', 'Petersburg': 'Location'}",
        "consistency_score": "{'entities': {('December 1864', 'Miscellaneous'): 5, ('Petersburg', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('December 1864', 'Miscellaneous'): 5, ('Petersburg', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1368,
        "sentence": "Bright , passionate and fluent in Spanish , he ferried correspondence from the Ilocos to Manila , journeys that gave him his first glimpse of colonial injustice and that planted the seeds of rebellion .",
        "label": "{'Manila': 'Location', 'Ilocos': 'Location', 'Spanish': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Bright , passionate and fluent in Spanish , he ferried correspondence from the Ilocos to Manila , journeys that gave him his first glimpse of colonial injustice and that planted the seeds of rebellion .\nAnswer: ",
        "responses": "['[{\"Ilocos\": \"Location\"}, {\"Manila\": \"Location\"}]', '[{\"Ilocos\": \"Location\"}, {\"Manila\": \"Location\"}]', '[{\"Ilocos\": \"Location\"}, {\"Manila\": \"Location\"}]', '[{\"Ilocos\": \"Location\"}, {\"Manila\": \"Location\"}]', '[{\"Ilocos\": \"Location\"}, {\"Manila\": \"Location\"}]']",
        "prediction_per_consist": "[{'Ilocos': 'Location', 'Manila': 'Location'}, {'Ilocos': 'Location', 'Manila': 'Location'}, {'Ilocos': 'Location', 'Manila': 'Location'}, {'Ilocos': 'Location', 'Manila': 'Location'}, {'Ilocos': 'Location', 'Manila': 'Location'}]",
        "prediction": "{'Ilocos': 'Location', 'Manila': 'Location'}",
        "consistency_score": "{'entities': {('Ilocos', 'Location'): 5, ('Manila', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Ilocos', 'Location'): 5, ('Manila', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 872,
        "sentence": "Behe has stated that the results of the paper support his notion of irreducible complexity , based on the calculation of the probability of mutations required for evolution to succeed .",
        "label": "{'Behe': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Behe has stated that the results of the paper support his notion of irreducible complexity , based on the calculation of the probability of mutations required for evolution to succeed .\nAnswer: ",
        "responses": "['[{\"Behe\": \"Person\"}]', '[{\"Behe\": \"Person\"}]', '[{\"Behe\": \"Person\"}]', '[{\"Behe\": \"Person\"}]', '[{\"Behe\": \"Person\"}]']",
        "prediction_per_consist": "[{'Behe': 'Person'}, {'Behe': 'Person'}, {'Behe': 'Person'}, {'Behe': 'Person'}, {'Behe': 'Person'}]",
        "prediction": "{'Behe': 'Person'}",
        "consistency_score": "{'entities': {('Behe', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Behe', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 166,
        "sentence": "It was dissolved in 1970 when it merged with three other counties to form South Jutland County .",
        "label": "{'South Jutland County': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: It was dissolved in 1970 when it merged with three other counties to form South Jutland County .\nAnswer: ",
        "responses": "['[{\"South Jutland County\": \"Location\"}]', '[{\"South Jutland County\": \"Location\"}]', '[{\"South Jutland County\": \"Location\"}]', '[{\"South Jutland County\": \"Location\"}]', '[{\"South Jutland County\": \"Location\"}]']",
        "prediction_per_consist": "[{'South Jutland County': 'Location'}, {'South Jutland County': 'Location'}, {'South Jutland County': 'Location'}, {'South Jutland County': 'Location'}, {'South Jutland County': 'Location'}]",
        "prediction": "{'South Jutland County': 'Location'}",
        "consistency_score": "{'entities': {('South Jutland County', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('South Jutland County', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 364,
        "sentence": "The Bangladesh Scouts are the national Scouting organization of Bangladesh .",
        "label": "{'Bangladesh': 'Location', 'Bangladesh Scouts': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The Bangladesh Scouts are the national Scouting organization of Bangladesh .\nAnswer: ",
        "responses": "['[{\"Bangladesh Scouts\": \"Organization\"}, {\"Bangladesh\": \"Location\"}]', '[{\"Bangladesh Scouts\": \"Organization\"}, {\"Bangladesh\": \"Location\"}]', '[{\"Bangladesh Scouts\": \"Organization\"}, {\"Bangladesh\": \"Location\"}]', '[{\"Bangladesh Scouts\": \"Organization\"}, {\"Bangladesh\": \"Location\"}]', '[{\"Bangladesh Scouts\": \"Organization\"}, {\"Bangladesh\": \"Location\"}]']",
        "prediction_per_consist": "[{'Bangladesh Scouts': 'Organization', 'Bangladesh': 'Location'}, {'Bangladesh Scouts': 'Organization', 'Bangladesh': 'Location'}, {'Bangladesh Scouts': 'Organization', 'Bangladesh': 'Location'}, {'Bangladesh Scouts': 'Organization', 'Bangladesh': 'Location'}, {'Bangladesh Scouts': 'Organization', 'Bangladesh': 'Location'}]",
        "prediction": "{'Bangladesh Scouts': 'Organization', 'Bangladesh': 'Location'}",
        "consistency_score": "{'entities': {('Bangladesh Scouts', 'Organization'): 5, ('Bangladesh', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Bangladesh Scouts', 'Organization'): 5, ('Bangladesh', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 733,
        "sentence": "This script drew heavily on his own Buddhist faith and incorporated classic Buddhist terms such as dukkha , panna , karuna , devaloka and Mara --- indeed , \" the Mara \" was the name of the villain of the piece .",
        "label": "{'Buddhist': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: This script drew heavily on his own Buddhist faith and incorporated classic Buddhist terms such as dukkha , panna , karuna , devaloka and Mara --- indeed , \" the Mara \" was the name of the villain of the piece .\nAnswer: ",
        "responses": "['[{\"Buddhist\": \"Miscellaneous\"}, {\"dukkha\": \"Miscellaneous\"}, {\"panna\": \"Miscellaneous\"}, {\"karuna\": \"Miscellaneous\"}, {\"devaloka\": \"Miscellaneous\"}, {\"Mara\": \"Person\"}, {\"Mara\": \"Person\"}]', '[{\"Buddhist\": \"Miscellaneous\"}, {\"dukkha\": \"Miscellaneous\"}, {\"panna\": \"Miscellaneous\"}, {\"karuna\": \"Miscellaneous\"}, {\"devaloka\": \"Miscellaneous\"}, {\"Mara\": \"Person\"}]', '[{\"Buddhist\": \"Miscellaneous\"}, {\"dukkha\": \"Miscellaneous\"}, {\"panna\": \"Miscellaneous\"}, {\"karuna\": \"Miscellaneous\"}, {\"devaloka\": \"Miscellaneous\"}, {\"Mara\": \"Person\"}, {\"Mara\": \"Person\"}]', '[{\"Buddhist\": \"Miscellaneous\"}, {\"dukkha\": \"Miscellaneous\"}, {\"panna\": \"Miscellaneous\"}, {\"karuna\": \"Miscellaneous\"}, {\"devaloka\": \"Miscellaneous\"}, {\"Mara\": \"Person\"}]', '[{\"Buddhist\": \"Miscellaneous\"}, {\"dukkha\": \"Miscellaneous\"}, {\"panna\": \"Miscellaneous\"}, {\"karuna\": \"Miscellaneous\"}, {\"devaloka\": \"Miscellaneous\"}, {\"Mara\": \"Person\"}]']",
        "prediction_per_consist": "[{'Buddhist': 'Miscellaneous', 'dukkha': 'Miscellaneous', 'panna': 'Miscellaneous', 'karuna': 'Miscellaneous', 'devaloka': 'Miscellaneous', 'Mara': 'Person'}, {'Buddhist': 'Miscellaneous', 'dukkha': 'Miscellaneous', 'panna': 'Miscellaneous', 'karuna': 'Miscellaneous', 'devaloka': 'Miscellaneous', 'Mara': 'Person'}, {'Buddhist': 'Miscellaneous', 'dukkha': 'Miscellaneous', 'panna': 'Miscellaneous', 'karuna': 'Miscellaneous', 'devaloka': 'Miscellaneous', 'Mara': 'Person'}, {'Buddhist': 'Miscellaneous', 'dukkha': 'Miscellaneous', 'panna': 'Miscellaneous', 'karuna': 'Miscellaneous', 'devaloka': 'Miscellaneous', 'Mara': 'Person'}, {'Buddhist': 'Miscellaneous', 'dukkha': 'Miscellaneous', 'panna': 'Miscellaneous', 'karuna': 'Miscellaneous', 'devaloka': 'Miscellaneous', 'Mara': 'Person'}]",
        "prediction": "{'Buddhist': 'Miscellaneous', 'dukkha': 'Miscellaneous', 'panna': 'Miscellaneous', 'karuna': 'Miscellaneous', 'devaloka': 'Miscellaneous', 'Mara': 'Person'}",
        "consistency_score": "{'entities': {('Buddhist', 'Miscellaneous'): 5, ('dukkha', 'Miscellaneous'): 5, ('panna', 'Miscellaneous'): 5, ('karuna', 'Miscellaneous'): 5, ('devaloka', 'Miscellaneous'): 5, ('Mara', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Buddhist', 'Miscellaneous'): 5, ('dukkha', 'Miscellaneous'): 5, ('panna', 'Miscellaneous'): 5, ('karuna', 'Miscellaneous'): 5, ('devaloka', 'Miscellaneous'): 5, ('Mara', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1017,
        "sentence": "He was looking to return to top-level contention in 1979 when he was KO 'd by future beltholder John Tate .",
        "label": "{'John Tate': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He was looking to return to top-level contention in 1979 when he was KO 'd by future beltholder John Tate .\nAnswer: ",
        "responses": "['[{\"John Tate\": \"Person\"}]', '[{\"John Tate\": \"Person\"}]', '[{\"John Tate\": \"Person\"}]', '[{\"John Tate\": \"Person\"}]', '[{\"John Tate\": \"Person\"}]']",
        "prediction_per_consist": "[{'John Tate': 'Person'}, {'John Tate': 'Person'}, {'John Tate': 'Person'}, {'John Tate': 'Person'}, {'John Tate': 'Person'}]",
        "prediction": "{'John Tate': 'Person'}",
        "consistency_score": "{'entities': {('John Tate', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('John Tate', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 668,
        "sentence": "After that show , Carter 's father bought his son a tin drum set with paper heads since Carter showed much interest in learning the instrument .",
        "label": "{'Carter': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: After that show , Carter 's father bought his son a tin drum set with paper heads since Carter showed much interest in learning the instrument .\nAnswer: ",
        "responses": "['[{\"Carter\": \"Person\"}]', '[{\"Carter\": \"Person\"}]', '[{\"Carter\": \"Person\"}]', '[{\"Carter\": \"Person\"}]', '[{\"Carter\": \"Person\"}]']",
        "prediction_per_consist": "[{'Carter': 'Person'}, {'Carter': 'Person'}, {'Carter': 'Person'}, {'Carter': 'Person'}, {'Carter': 'Person'}]",
        "prediction": "{'Carter': 'Person'}",
        "consistency_score": "{'entities': {('Carter', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Carter', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1030,
        "sentence": "Eberhard Faber GmbH was founded in 1922 in Neumarkt , near Nuremberg , Germany , as a pencil factory .",
        "label": "{'Nuremberg': 'Location', 'Germany': 'Location', 'Neumarkt': 'Location', 'Eberhard Faber GmbH': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Eberhard Faber GmbH was founded in 1922 in Neumarkt , near Nuremberg , Germany , as a pencil factory .\nAnswer: ",
        "responses": "['[{\"Eberhard Faber GmbH\": \"Organization\"}, {\"Neumarkt\": \"Location\"}, {\"Nuremberg\": \"Location\"}, {\"Germany\": \"Location\"}]', '[{\"Eberhard Faber GmbH\": \"Organization\"}, {\"Neumarkt\": \"Location\"}, {\"Nuremberg\": \"Location\"}, {\"Germany\": \"Location\"}]', '[{\"Eberhard Faber GmbH\": \"Organization\"}, {\"Neumarkt\": \"Location\"}, {\"Nuremberg\": \"Location\"}, {\"Germany\": \"Location\"}]', '[{\"Eberhard Faber GmbH\": \"Organization\"}, {\"Neumarkt\": \"Location\"}, {\"Nuremberg\": \"Location\"}, {\"Germany\": \"Location\"}]', '[{\"Eberhard Faber GmbH\": \"Organization\"}, {\"Neumarkt\": \"Location\"}, {\"Nuremberg\": \"Location\"}, {\"Germany\": \"Location\"}]']",
        "prediction_per_consist": "[{'Eberhard Faber GmbH': 'Organization', 'Neumarkt': 'Location', 'Nuremberg': 'Location', 'Germany': 'Location'}, {'Eberhard Faber GmbH': 'Organization', 'Neumarkt': 'Location', 'Nuremberg': 'Location', 'Germany': 'Location'}, {'Eberhard Faber GmbH': 'Organization', 'Neumarkt': 'Location', 'Nuremberg': 'Location', 'Germany': 'Location'}, {'Eberhard Faber GmbH': 'Organization', 'Neumarkt': 'Location', 'Nuremberg': 'Location', 'Germany': 'Location'}, {'Eberhard Faber GmbH': 'Organization', 'Neumarkt': 'Location', 'Nuremberg': 'Location', 'Germany': 'Location'}]",
        "prediction": "{'Eberhard Faber GmbH': 'Organization', 'Neumarkt': 'Location', 'Nuremberg': 'Location', 'Germany': 'Location'}",
        "consistency_score": "{'entities': {('Eberhard Faber GmbH', 'Organization'): 5, ('Neumarkt', 'Location'): 5, ('Nuremberg', 'Location'): 5, ('Germany', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Eberhard Faber GmbH', 'Organization'): 5, ('Neumarkt', 'Location'): 5, ('Nuremberg', 'Location'): 5, ('Germany', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 597,
        "sentence": "Bullocks to Stan is an episode of the animated television show American Dad ! .",
        "label": "{'American Dad !': 'Miscellaneous', 'Bullocks to Stan': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Bullocks to Stan is an episode of the animated television show American Dad ! .\nAnswer: ",
        "responses": "['[{\"Stan\": \"Person\"}, {\"American Dad\": \"Organization\"}]', '[{\"Stan\": \"Person\"}, {\"American Dad\": \"Organization\"}]', '[{\"Stan\": \"Person\"}, {\"American Dad\": \"Organization\"}]', '[{\"Stan\": \"Person\"}, {\"American Dad\": \"Organization\"}]', '[{\"Stan\": \"Person\"}, {\"American Dad\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Stan': 'Person', 'American Dad': 'Organization'}, {'Stan': 'Person', 'American Dad': 'Organization'}, {'Stan': 'Person', 'American Dad': 'Organization'}, {'Stan': 'Person', 'American Dad': 'Organization'}, {'Stan': 'Person', 'American Dad': 'Organization'}]",
        "prediction": "{'Stan': 'Person', 'American Dad': 'Organization'}",
        "consistency_score": "{'entities': {('Stan', 'Person'): 5, ('American Dad', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Stan', 'Person'): 5, ('American Dad', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1041,
        "sentence": "He received his doctorate in 1862 , and subsequently practiced medicine in Berlin and Würzburg .",
        "label": "{'Berlin': 'Location', 'Würzburg': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He received his doctorate in 1862 , and subsequently practiced medicine in Berlin and Würzburg .\nAnswer: ",
        "responses": "['[{\"Berlin\": \"Location\"}, {\"Würzburg\": \"Location\"}]', '[{\"Berlin\": \"Location\"}, {\"Würzburg\": \"Location\"}]', '[{\"Berlin\": \"Location\"}, {\"Würzburg\": \"Location\"}]', '[{\"Berlin\": \"Location\"}, {\"Würzburg\": \"Location\"}]', '[{\"Berlin\": \"Location\"}, {\"Würzburg\": \"Location\"}]']",
        "prediction_per_consist": "[{'Berlin': 'Location', 'Würzburg': 'Location'}, {'Berlin': 'Location', 'Würzburg': 'Location'}, {'Berlin': 'Location', 'Würzburg': 'Location'}, {'Berlin': 'Location', 'Würzburg': 'Location'}, {'Berlin': 'Location', 'Würzburg': 'Location'}]",
        "prediction": "{'Berlin': 'Location', 'Würzburg': 'Location'}",
        "consistency_score": "{'entities': {('Berlin', 'Location'): 5, ('Würzburg', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Berlin', 'Location'): 5, ('Würzburg', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 596,
        "sentence": "May died in his hometown of Bakersfield , California at the age of 84 .",
        "label": "{'Bakersfield': 'Location', 'California': 'Location', 'May': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: May died in his hometown of Bakersfield , California at the age of 84 .\nAnswer: ",
        "responses": "['[{\"May\": \"Person\"}, {\"Bakersfield\": \"Location\"}, {\"California\": \"Location\"}]', '[{\"May\": \"Person\"}, {\"Bakersfield\": \"Location\"}, {\"California\": \"Location\"}]', '[{\"May\": \"Person\"}, {\"Bakersfield\": \"Location\"}, {\"California\": \"Location\"}]', '[{\"May\": \"Person\"}, {\"Bakersfield\": \"Location\"}, {\"California\": \"Location\"}]', '[{\"May\": \"Person\"}, {\"Bakersfield\": \"Location\"}, {\"California\": \"Location\"}]']",
        "prediction_per_consist": "[{'May': 'Person', 'Bakersfield': 'Location', 'California': 'Location'}, {'May': 'Person', 'Bakersfield': 'Location', 'California': 'Location'}, {'May': 'Person', 'Bakersfield': 'Location', 'California': 'Location'}, {'May': 'Person', 'Bakersfield': 'Location', 'California': 'Location'}, {'May': 'Person', 'Bakersfield': 'Location', 'California': 'Location'}]",
        "prediction": "{'May': 'Person', 'Bakersfield': 'Location', 'California': 'Location'}",
        "consistency_score": "{'entities': {('May', 'Person'): 5, ('Bakersfield', 'Location'): 5, ('California', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('May', 'Person'): 5, ('Bakersfield', 'Location'): 5, ('California', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 604,
        "sentence": "Steve and Roger begin making prank calls to the world leaders , but then they all * 69 the two .",
        "label": "{'Roger': 'Person', 'Steve': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Steve and Roger begin making prank calls to the world leaders , but then they all * 69 the two .\nAnswer: ",
        "responses": "['[{\"Steve\": \"Person\"}, {\"Roger\": \"Person\"}]', '[{\"Steve\": \"Person\"}, {\"Roger\": \"Person\"}]', '[{\"Steve\": \"Person\"}, {\"Roger\": \"Person\"}]', '[{\"Steve\": \"Person\"}, {\"Roger\": \"Person\"}]', '[{\"Steve\": \"Person\"}, {\"Roger\": \"Person\"}]']",
        "prediction_per_consist": "[{'Steve': 'Person', 'Roger': 'Person'}, {'Steve': 'Person', 'Roger': 'Person'}, {'Steve': 'Person', 'Roger': 'Person'}, {'Steve': 'Person', 'Roger': 'Person'}, {'Steve': 'Person', 'Roger': 'Person'}]",
        "prediction": "{'Steve': 'Person', 'Roger': 'Person'}",
        "consistency_score": "{'entities': {('Steve', 'Person'): 5, ('Roger', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Steve', 'Person'): 5, ('Roger', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 273,
        "sentence": "Angelo Fresquet , \" Made in Miami \"",
        "label": "{'Angelo Fresquet': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Angelo Fresquet , \" Made in Miami \"\nAnswer: ",
        "responses": "['[{\"Angelo Fresquet\": \"Person\"}, {\"Miami\": \"Location\"}]', '[{\"Angelo Fresquet\": \"Person\"}, {\"Miami\": \"Location\"}]', '[{\"Angelo Fresquet\": \"Person\"}, {\"Miami\": \"Location\"}]', '[{\"Angelo Fresquet\": \"Person\"}, {\"Miami\": \"Location\"}]', '[{\"Angelo Fresquet\": \"Person\"}, {\"Miami\": \"Location\"}]']",
        "prediction_per_consist": "[{'Angelo Fresquet': 'Person', 'Miami': 'Location'}, {'Angelo Fresquet': 'Person', 'Miami': 'Location'}, {'Angelo Fresquet': 'Person', 'Miami': 'Location'}, {'Angelo Fresquet': 'Person', 'Miami': 'Location'}, {'Angelo Fresquet': 'Person', 'Miami': 'Location'}]",
        "prediction": "{'Angelo Fresquet': 'Person', 'Miami': 'Location'}",
        "consistency_score": "{'entities': {('Angelo Fresquet', 'Person'): 5, ('Miami', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Angelo Fresquet', 'Person'): 5, ('Miami', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 413,
        "sentence": "The chair is Dr Sue Black of the University of Westminster .",
        "label": "{'Sue Black': 'Person', 'University of Westminster': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The chair is Dr Sue Black of the University of Westminster .\nAnswer: ",
        "responses": "['[{\"Dr Sue Black\": \"Person\"}, {\"University of Westminster\": \"Organization\"}]', '[{\"Dr Sue Black\": \"Person\"}, {\"University of Westminster\": \"Organization\"}]', '[{\"Dr Sue Black\": \"Person\"}, {\"University of Westminster\": \"Organization\"}]', '[{\"Dr Sue Black\": \"Person\"}, {\"University of Westminster\": \"Organization\"}]', '[{\"Dr Sue Black\": \"Person\"}, {\"University of Westminster\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Dr Sue Black': 'Person', 'University of Westminster': 'Organization'}, {'Dr Sue Black': 'Person', 'University of Westminster': 'Organization'}, {'Dr Sue Black': 'Person', 'University of Westminster': 'Organization'}, {'Dr Sue Black': 'Person', 'University of Westminster': 'Organization'}, {'Dr Sue Black': 'Person', 'University of Westminster': 'Organization'}]",
        "prediction": "{'Dr Sue Black': 'Person', 'University of Westminster': 'Organization'}",
        "consistency_score": "{'entities': {('Dr Sue Black', 'Person'): 5, ('University of Westminster', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Dr Sue Black', 'Person'): 5, ('University of Westminster', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 485,
        "sentence": "The first store opened in 1970 in Tilst , a suburb of Aarhus .",
        "label": "{'Aarhus': 'Location', 'Tilst': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The first store opened in 1970 in Tilst , a suburb of Aarhus .\nAnswer: ",
        "responses": "['[{\"Tilst\": \"Location\"}, {\"Aarhus\": \"Location\"}]', '[{\"Tilst\": \"Location\"}, {\"Aarhus\": \"Location\"}]', '[{\"Tilst\": \"Location\"}, {\"Aarhus\": \"Location\"}]', '[{\"Tilst\": \"Location\"}, {\"Aarhus\": \"Location\"}]', '[{\"Tilst\": \"Location\"}, {\"Aarhus\": \"Location\"}]']",
        "prediction_per_consist": "[{'Tilst': 'Location', 'Aarhus': 'Location'}, {'Tilst': 'Location', 'Aarhus': 'Location'}, {'Tilst': 'Location', 'Aarhus': 'Location'}, {'Tilst': 'Location', 'Aarhus': 'Location'}, {'Tilst': 'Location', 'Aarhus': 'Location'}]",
        "prediction": "{'Tilst': 'Location', 'Aarhus': 'Location'}",
        "consistency_score": "{'entities': {('Tilst', 'Location'): 5, ('Aarhus', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Tilst', 'Location'): 5, ('Aarhus', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 310,
        "sentence": "It is also an official holiday in Belgium , known also as the day of peace in the Flanders Fields .",
        "label": "{'Flanders Fields': 'Location', 'Belgium': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: It is also an official holiday in Belgium , known also as the day of peace in the Flanders Fields .\nAnswer: ",
        "responses": "['[{\"Belgium\": \"Location\"}, {\"Flanders Fields\": \"Location\"}]', '[{\"Belgium\": \"Location\"}, {\"Flanders Fields\": \"Location\"}]', '[{\"Belgium\": \"Location\"}, {\"Flanders Fields\": \"Location\"}]', '[{\"Belgium\": \"Location\"}, {\"Flanders Fields\": \"Location\"}]', '[{\"Belgium\": \"Location\"}, {\"Flanders Fields\": \"Location\"}]']",
        "prediction_per_consist": "[{'Belgium': 'Location', 'Flanders Fields': 'Location'}, {'Belgium': 'Location', 'Flanders Fields': 'Location'}, {'Belgium': 'Location', 'Flanders Fields': 'Location'}, {'Belgium': 'Location', 'Flanders Fields': 'Location'}, {'Belgium': 'Location', 'Flanders Fields': 'Location'}]",
        "prediction": "{'Belgium': 'Location', 'Flanders Fields': 'Location'}",
        "consistency_score": "{'entities': {('Belgium', 'Location'): 5, ('Flanders Fields', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Belgium', 'Location'): 5, ('Flanders Fields', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 269,
        "sentence": "One attorney for the hospital argued that it was appropriate to sacrifice a dying woman for her fetus ; an appeals court judge is reported to have replied , \" Are you urging this court to find that you can handcuff a woman to a bed and force her to give birth ? \"",
        "label": "{}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: One attorney for the hospital argued that it was appropriate to sacrifice a dying woman for her fetus ; an appeals court judge is reported to have replied , \" Are you urging this court to find that you can handcuff a woman to a bed and force her to give birth ? \"\nAnswer: ",
        "responses": "['[{\"attorney\": \"Person\"}, {\"hospital\": \"Organization\"}, {\"woman\": \"Person\"}, {\"fetus\": \"Miscellaneous\"}, {\"appeals court judge\": \"Person\"}]', '[{\"hospital\": \"Organization\"}, {\"attorney\": \"Person\"}, {\"woman\": \"Person\"}, {\"fetus\": \"Miscellaneous\"}, {\"appeals court judge\": \"Person\"}]', '[{\"hospital\": \"Organization\"}, {\"attorney\": \"Person\"}, {\"woman\": \"Person\"}, {\"fetus\": \"Miscellaneous\"}, {\"appeals court judge\": \"Person\"}]', '[{\"hospital\": \"Organization\"}, {\"attorney\": \"Person\"}, {\"woman\": \"Person\"}, {\"fetus\": \"Miscellaneous\"}, {\"appeals court judge\": \"Person\"}]', '[{\"hospital\": \"Organization\"}, {\"attorney\": \"Person\"}, {\"woman\": \"Person\"}, {\"fetus\": \"Miscellaneous\"}, {\"appeals court judge\": \"Person\"}]']",
        "prediction_per_consist": "[{'attorney': 'Person', 'hospital': 'Organization', 'woman': 'Person', 'fetus': 'Miscellaneous', 'appeals court judge': 'Person'}, {'hospital': 'Organization', 'attorney': 'Person', 'woman': 'Person', 'fetus': 'Miscellaneous', 'appeals court judge': 'Person'}, {'hospital': 'Organization', 'attorney': 'Person', 'woman': 'Person', 'fetus': 'Miscellaneous', 'appeals court judge': 'Person'}, {'hospital': 'Organization', 'attorney': 'Person', 'woman': 'Person', 'fetus': 'Miscellaneous', 'appeals court judge': 'Person'}, {'hospital': 'Organization', 'attorney': 'Person', 'woman': 'Person', 'fetus': 'Miscellaneous', 'appeals court judge': 'Person'}]",
        "prediction": "{'attorney': 'Person', 'hospital': 'Organization', 'woman': 'Person', 'fetus': 'Miscellaneous', 'appeals court judge': 'Person'}",
        "consistency_score": "{'entities': {('attorney', 'Person'): 5, ('hospital', 'Organization'): 5, ('woman', 'Person'): 5, ('fetus', 'Miscellaneous'): 5, ('appeals court judge', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('attorney', 'Person'): 5, ('hospital', 'Organization'): 5, ('woman', 'Person'): 5, ('fetus', 'Miscellaneous'): 5, ('appeals court judge', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 744,
        "sentence": "Christopher Penley 's organs were donated by his family .",
        "label": "{'Christopher Penley': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Christopher Penley 's organs were donated by his family .\nAnswer: ",
        "responses": "['[{\"Christopher Penley\": \"Person\"}]', '[{\"Christopher Penley\": \"Person\"}]', '[{\"Christopher Penley\": \"Person\"}]', '[{\"Christopher Penley\": \"Person\"}]', '[{\"Christopher Penley\": \"Person\"}]']",
        "prediction_per_consist": "[{'Christopher Penley': 'Person'}, {'Christopher Penley': 'Person'}, {'Christopher Penley': 'Person'}, {'Christopher Penley': 'Person'}, {'Christopher Penley': 'Person'}]",
        "prediction": "{'Christopher Penley': 'Person'}",
        "consistency_score": "{'entities': {('Christopher Penley', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Christopher Penley', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 396,
        "sentence": "Castro also attained documents from Cárdenas giving instructions to Belgrano .",
        "label": "{'Cárdenas': 'Person', 'Belgrano': 'Person', 'Castro': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Castro also attained documents from Cárdenas giving instructions to Belgrano .\nAnswer: ",
        "responses": "['[{\"Castro\": \"Person\"}, {\"Cárdenas\": \"Person\"}, {\"Belgrano\": \"Person\"}]', '[{\"Castro\": \"Person\"}, {\"Cárdenas\": \"Person\"}, {\"Belgrano\": \"Person\"}]', '[{\"Castro\": \"Person\"}, {\"Cárdenas\": \"Person\"}, {\"Belgrano\": \"Person\"}]', '[{\"Castro\": \"Person\"}, {\"Cárdenas\": \"Person\"}, {\"Belgrano\": \"Person\"}]', '[{\"Castro\": \"Person\"}, {\"Cárdenas\": \"Person\"}, {\"Belgrano\": \"Person\"}]']",
        "prediction_per_consist": "[{'Castro': 'Person', 'Cárdenas': 'Person', 'Belgrano': 'Person'}, {'Castro': 'Person', 'Cárdenas': 'Person', 'Belgrano': 'Person'}, {'Castro': 'Person', 'Cárdenas': 'Person', 'Belgrano': 'Person'}, {'Castro': 'Person', 'Cárdenas': 'Person', 'Belgrano': 'Person'}, {'Castro': 'Person', 'Cárdenas': 'Person', 'Belgrano': 'Person'}]",
        "prediction": "{'Castro': 'Person', 'Cárdenas': 'Person', 'Belgrano': 'Person'}",
        "consistency_score": "{'entities': {('Castro', 'Person'): 5, ('Cárdenas', 'Person'): 5, ('Belgrano', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Castro', 'Person'): 5, ('Cárdenas', 'Person'): 5, ('Belgrano', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 402,
        "sentence": "The convention draws many attendees from throughout California and also as far away as Oregon , Washington , and Nevada .",
        "label": "{'Oregon': 'Location', 'Washington': 'Location', 'Nevada': 'Location', 'California': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The convention draws many attendees from throughout California and also as far away as Oregon , Washington , and Nevada .\nAnswer: ",
        "responses": "['[{\"California\": \"Location\"}, {\"Oregon\": \"Location\"}, {\"Washington\": \"Location\"}, {\"Nevada\": \"Location\"}]', '[{\"California\": \"Location\"}, {\"Oregon\": \"Location\"}, {\"Washington\": \"Location\"}, {\"Nevada\": \"Location\"}]', '[{\"California\": \"Location\"}, {\"Oregon\": \"Location\"}, {\"Washington\": \"Location\"}, {\"Nevada\": \"Location\"}]', '[{\"California\": \"Location\"}, {\"Oregon\": \"Location\"}, {\"Washington\": \"Location\"}, {\"Nevada\": \"Location\"}]', '[{\"California\": \"Location\"}, {\"Oregon\": \"Location\"}, {\"Washington\": \"Location\"}, {\"Nevada\": \"Location\"}]']",
        "prediction_per_consist": "[{'California': 'Location', 'Oregon': 'Location', 'Washington': 'Location', 'Nevada': 'Location'}, {'California': 'Location', 'Oregon': 'Location', 'Washington': 'Location', 'Nevada': 'Location'}, {'California': 'Location', 'Oregon': 'Location', 'Washington': 'Location', 'Nevada': 'Location'}, {'California': 'Location', 'Oregon': 'Location', 'Washington': 'Location', 'Nevada': 'Location'}, {'California': 'Location', 'Oregon': 'Location', 'Washington': 'Location', 'Nevada': 'Location'}]",
        "prediction": "{'California': 'Location', 'Oregon': 'Location', 'Washington': 'Location', 'Nevada': 'Location'}",
        "consistency_score": "{'entities': {('California', 'Location'): 5, ('Oregon', 'Location'): 5, ('Washington', 'Location'): 5, ('Nevada', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('California', 'Location'): 5, ('Oregon', 'Location'): 5, ('Washington', 'Location'): 5, ('Nevada', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 889,
        "sentence": "The Langejans Dualette is a two sided guitar which was custom made for Thom Bresh .",
        "label": "{'Thom Bresh': 'Person', 'Langejans Dualette': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The Langejans Dualette is a two sided guitar which was custom made for Thom Bresh .\nAnswer: ",
        "responses": "['[{\"Langejans Dualette\": \"Miscellaneous\"}, {\"Thom Bresh\": \"Person\"}]', '[{\"Langejans Dualette\": \"Miscellaneous\"}, {\"Thom Bresh\": \"Person\"}]', '[{\"Langejans Dualette\": \"Miscellaneous\"}, {\"Thom Bresh\": \"Person\"}]', '[{\"Langejans Dualette\": \"Miscellaneous\"}, {\"Thom Bresh\": \"Person\"}]', '[{\"Langejans Dualette\": \"Miscellaneous\"}, {\"Thom Bresh\": \"Person\"}]']",
        "prediction_per_consist": "[{'Langejans Dualette': 'Miscellaneous', 'Thom Bresh': 'Person'}, {'Langejans Dualette': 'Miscellaneous', 'Thom Bresh': 'Person'}, {'Langejans Dualette': 'Miscellaneous', 'Thom Bresh': 'Person'}, {'Langejans Dualette': 'Miscellaneous', 'Thom Bresh': 'Person'}, {'Langejans Dualette': 'Miscellaneous', 'Thom Bresh': 'Person'}]",
        "prediction": "{'Langejans Dualette': 'Miscellaneous', 'Thom Bresh': 'Person'}",
        "consistency_score": "{'entities': {('Langejans Dualette', 'Miscellaneous'): 5, ('Thom Bresh', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Langejans Dualette', 'Miscellaneous'): 5, ('Thom Bresh', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1264,
        "sentence": "Played defensive end for the Patriots in 1971 .",
        "label": "{'Patriots': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Played defensive end for the Patriots in 1971 .\nAnswer: ",
        "responses": "['[{\"Patriots\": \"Organization\"}]', '[{\"Patriots\": \"Organization\"}]', '[{\"Patriots\": \"Organization\"}]', '[{\"Patriots\": \"Organization\"}]', '[{\"Patriots\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Patriots': 'Organization'}, {'Patriots': 'Organization'}, {'Patriots': 'Organization'}, {'Patriots': 'Organization'}, {'Patriots': 'Organization'}]",
        "prediction": "{'Patriots': 'Organization'}",
        "consistency_score": "{'entities': {('Patriots', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Patriots', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 381,
        "sentence": "Afterwards , Wang Shichong , seeing no other choice , surrendered Luoyang .",
        "label": "{'Luoyang': 'Location', 'Wang Shichong': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Afterwards , Wang Shichong , seeing no other choice , surrendered Luoyang .\nAnswer: ",
        "responses": "['[{\"Wang Shichong\": \"Person\"}, {\"Luoyang\": \"Location\"}]', '[{\"Wang Shichong\": \"Person\"}, {\"Luoyang\": \"Location\"}]', '[{\"Wang Shichong\": \"Person\"}, {\"Luoyang\": \"Location\"}]', '[{\"Wang Shichong\": \"Person\"}, {\"Luoyang\": \"Location\"}]', '[{\"Wang Shichong\": \"Person\"}, {\"Luoyang\": \"Location\"}]']",
        "prediction_per_consist": "[{'Wang Shichong': 'Person', 'Luoyang': 'Location'}, {'Wang Shichong': 'Person', 'Luoyang': 'Location'}, {'Wang Shichong': 'Person', 'Luoyang': 'Location'}, {'Wang Shichong': 'Person', 'Luoyang': 'Location'}, {'Wang Shichong': 'Person', 'Luoyang': 'Location'}]",
        "prediction": "{'Wang Shichong': 'Person', 'Luoyang': 'Location'}",
        "consistency_score": "{'entities': {('Wang Shichong', 'Person'): 5, ('Luoyang', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Wang Shichong', 'Person'): 5, ('Luoyang', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 988,
        "sentence": "( See Christopher Herrold 's \" Mistress to an Age . \" )",
        "label": "{'Mistress to an Age': 'Miscellaneous', 'Christopher Herrold': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: ( See Christopher Herrold 's \" Mistress to an Age . \" )\nAnswer: ",
        "responses": "['[{\"Christopher Herrold\": \"Person\"}]', '[{\"Christopher Herrold\": \"Person\"}]', '[{\"Christopher Herrold\": \"Person\"}]', '[{\"Christopher Herrold\": \"Person\"}]', '[{\"Christopher Herrold\": \"Person\"}]']",
        "prediction_per_consist": "[{'Christopher Herrold': 'Person'}, {'Christopher Herrold': 'Person'}, {'Christopher Herrold': 'Person'}, {'Christopher Herrold': 'Person'}, {'Christopher Herrold': 'Person'}]",
        "prediction": "{'Christopher Herrold': 'Person'}",
        "consistency_score": "{'entities': {('Christopher Herrold', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Christopher Herrold', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1271,
        "sentence": "Brandhorst is a municipality in the southeast area of the district Wittenberg in Saxony-Anhalt , Germany .",
        "label": "{'Wittenberg': 'Location', 'Saxony-Anhalt': 'Location', 'Brandhorst': 'Location', 'Germany': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Brandhorst is a municipality in the southeast area of the district Wittenberg in Saxony-Anhalt , Germany .\nAnswer: ",
        "responses": "['[{\"Brandhorst\": \"Location\"}, {\"Wittenberg\": \"Location\"}, {\"Saxony-Anhalt\": \"Location\"}, {\"Germany\": \"Location\"}]', '[{\"Brandhorst\": \"Location\"}, {\"Wittenberg\": \"Location\"}, {\"Saxony-Anhalt\": \"Location\"}, {\"Germany\": \"Location\"}]', '[{\"Brandhorst\": \"Location\"}, {\"Wittenberg\": \"Location\"}, {\"Saxony-Anhalt\": \"Location\"}, {\"Germany\": \"Location\"}]', '[{\"Brandhorst\": \"Location\"}, {\"Wittenberg\": \"Location\"}, {\"Saxony-Anhalt\": \"Location\"}, {\"Germany\": \"Location\"}]', '[{\"Brandhorst\": \"Location\"}, {\"Wittenberg\": \"Location\"}, {\"Saxony-Anhalt\": \"Location\"}, {\"Germany\": \"Location\"}]']",
        "prediction_per_consist": "[{'Brandhorst': 'Location', 'Wittenberg': 'Location', 'Saxony-Anhalt': 'Location', 'Germany': 'Location'}, {'Brandhorst': 'Location', 'Wittenberg': 'Location', 'Saxony-Anhalt': 'Location', 'Germany': 'Location'}, {'Brandhorst': 'Location', 'Wittenberg': 'Location', 'Saxony-Anhalt': 'Location', 'Germany': 'Location'}, {'Brandhorst': 'Location', 'Wittenberg': 'Location', 'Saxony-Anhalt': 'Location', 'Germany': 'Location'}, {'Brandhorst': 'Location', 'Wittenberg': 'Location', 'Saxony-Anhalt': 'Location', 'Germany': 'Location'}]",
        "prediction": "{'Brandhorst': 'Location', 'Wittenberg': 'Location', 'Saxony-Anhalt': 'Location', 'Germany': 'Location'}",
        "consistency_score": "{'entities': {('Brandhorst', 'Location'): 5, ('Wittenberg', 'Location'): 5, ('Saxony-Anhalt', 'Location'): 5, ('Germany', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Brandhorst', 'Location'): 5, ('Wittenberg', 'Location'): 5, ('Saxony-Anhalt', 'Location'): 5, ('Germany', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 176,
        "sentence": "She was married in 1838 to Stanisław Baranowski ( 1806-1843 ) , who was an officer in the Polish forces during the January Uprising .",
        "label": "{'January Uprising': 'Miscellaneous', 'Polish': 'Miscellaneous', 'Stanisław Baranowski': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: She was married in 1838 to Stanisław Baranowski ( 1806-1843 ) , who was an officer in the Polish forces during the January Uprising .\nAnswer: ",
        "responses": "['[{\"Stanisław Baranowski\": \"Person\"}, {\"Polish\": \"Location\"}, {\"January Uprising\": \"Miscellaneous\"}]', '[{\"Stanisław Baranowski\": \"Person\"}, {\"Polish\": \"Location\"}, {\"January Uprising\": \"Miscellaneous\"}]', '[{\"Stanisław Baranowski\": \"Person\"}, {\"Polish\": \"Location\"}, {\"January Uprising\": \"Miscellaneous\"}]', '[{\"Stanisław Baranowski\": \"Person\"}, {\"Polish\": \"Location\"}, {\"January Uprising\": \"Miscellaneous\"}]', '[{\"Stanisław Baranowski\": \"Person\"}, {\"Polish\": \"Location\"}, {\"January Uprising\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Stanisław Baranowski': 'Person', 'Polish': 'Location', 'January Uprising': 'Miscellaneous'}, {'Stanisław Baranowski': 'Person', 'Polish': 'Location', 'January Uprising': 'Miscellaneous'}, {'Stanisław Baranowski': 'Person', 'Polish': 'Location', 'January Uprising': 'Miscellaneous'}, {'Stanisław Baranowski': 'Person', 'Polish': 'Location', 'January Uprising': 'Miscellaneous'}, {'Stanisław Baranowski': 'Person', 'Polish': 'Location', 'January Uprising': 'Miscellaneous'}]",
        "prediction": "{'Stanisław Baranowski': 'Person', 'Polish': 'Location', 'January Uprising': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Stanisław Baranowski', 'Person'): 5, ('Polish', 'Location'): 5, ('January Uprising', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Stanisław Baranowski', 'Person'): 5, ('Polish', 'Location'): 5, ('January Uprising', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1006,
        "sentence": "Frazier himself was approaching retirement and focusing on upcoming paydays with protege Bobick .",
        "label": "{'Bobick': 'Person', 'Frazier': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Frazier himself was approaching retirement and focusing on upcoming paydays with protege Bobick .\nAnswer: ",
        "responses": "['[{\"Frazier\": \"Person\"}, {\"Bobick\": \"Person\"}]', '[{\"Frazier\": \"Person\"}, {\"Bobick\": \"Person\"}]', '[{\"Frazier\": \"Person\"}, {\"Bobick\": \"Person\"}]', '[{\"Frazier\": \"Person\"}, {\"Bobick\": \"Person\"}]', '[{\"Frazier\": \"Person\"}, {\"Bobick\": \"Person\"}]']",
        "prediction_per_consist": "[{'Frazier': 'Person', 'Bobick': 'Person'}, {'Frazier': 'Person', 'Bobick': 'Person'}, {'Frazier': 'Person', 'Bobick': 'Person'}, {'Frazier': 'Person', 'Bobick': 'Person'}, {'Frazier': 'Person', 'Bobick': 'Person'}]",
        "prediction": "{'Frazier': 'Person', 'Bobick': 'Person'}",
        "consistency_score": "{'entities': {('Frazier', 'Person'): 5, ('Bobick', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Frazier', 'Person'): 5, ('Bobick', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 296,
        "sentence": "The Anguilla United Front is an alliance of political parties in Anguilla .",
        "label": "{'Anguilla': 'Location', 'Anguilla United Front': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The Anguilla United Front is an alliance of political parties in Anguilla .\nAnswer: ",
        "responses": "['[{\"Anguilla United Front\": \"Organization\"}, {\"Anguilla\": \"Location\"}]', '[{\"Anguilla United Front\": \"Organization\"}, {\"Anguilla\": \"Location\"}]', '[{\"Anguilla United Front\": \"Organization\"}, {\"Anguilla\": \"Location\"}]', '[{\"Anguilla United Front\": \"Organization\"}, {\"Anguilla\": \"Location\"}]', '[{\"Anguilla United Front\": \"Organization\"}, {\"Anguilla\": \"Location\"}]']",
        "prediction_per_consist": "[{'Anguilla United Front': 'Organization', 'Anguilla': 'Location'}, {'Anguilla United Front': 'Organization', 'Anguilla': 'Location'}, {'Anguilla United Front': 'Organization', 'Anguilla': 'Location'}, {'Anguilla United Front': 'Organization', 'Anguilla': 'Location'}, {'Anguilla United Front': 'Organization', 'Anguilla': 'Location'}]",
        "prediction": "{'Anguilla United Front': 'Organization', 'Anguilla': 'Location'}",
        "consistency_score": "{'entities': {('Anguilla United Front', 'Organization'): 5, ('Anguilla', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Anguilla United Front', 'Organization'): 5, ('Anguilla', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 174,
        "sentence": "It sold all rights to the design to Aero Composites in 1986 .",
        "label": "{'Aero Composites': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: It sold all rights to the design to Aero Composites in 1986 .\nAnswer: ",
        "responses": "['[{\"Aero Composites\": \"Organization\"}]', '[{\"Aero Composites\": \"Organization\"}]', '[{\"Aero Composites\": \"Organization\"}]', '[{\"Aero Composites\": \"Organization\"}]', '[{\"Aero Composites\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Aero Composites': 'Organization'}, {'Aero Composites': 'Organization'}, {'Aero Composites': 'Organization'}, {'Aero Composites': 'Organization'}, {'Aero Composites': 'Organization'}]",
        "prediction": "{'Aero Composites': 'Organization'}",
        "consistency_score": "{'entities': {('Aero Composites', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Aero Composites', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1002,
        "sentence": "Bobick won his first 19 fights by knockout .",
        "label": "{'Bobick': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Bobick won his first 19 fights by knockout .\nAnswer: ",
        "responses": "['[{\"Bobick\": \"Person\"}]', '[{\"Bobick\": \"Person\"}]', '[{\"Bobick\": \"Person\"}]', '[{\"Bobick\": \"Person\"}]', '[{\"Bobick\": \"Person\"}]']",
        "prediction_per_consist": "[{'Bobick': 'Person'}, {'Bobick': 'Person'}, {'Bobick': 'Person'}, {'Bobick': 'Person'}, {'Bobick': 'Person'}]",
        "prediction": "{'Bobick': 'Person'}",
        "consistency_score": "{'entities': {('Bobick', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Bobick', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1141,
        "sentence": "Oleg Mikhaylovich Gazmanov is a Russian singer .",
        "label": "{'Oleg Mikhaylovich Gazmanov': 'Person', 'Russian': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Oleg Mikhaylovich Gazmanov is a Russian singer .\nAnswer: ",
        "responses": "['[{\"Oleg Mikhaylovich Gazmanov\": \"Person\"}, {\"Russian\": \"Location\"}]', '[{\"Oleg Mikhaylovich Gazmanov\": \"Person\"}, {\"Russian\": \"Location\"}]', '[{\"Oleg Mikhaylovich Gazmanov\": \"Person\"}, {\"Russian\": \"Location\"}]', '[{\"Oleg Mikhaylovich Gazmanov\": \"Person\"}, {\"Russian\": \"Location\"}]', '[{\"Oleg Mikhaylovich Gazmanov\": \"Person\"}, {\"Russian\": \"Location\"}]']",
        "prediction_per_consist": "[{'Oleg Mikhaylovich Gazmanov': 'Person', 'Russian': 'Location'}, {'Oleg Mikhaylovich Gazmanov': 'Person', 'Russian': 'Location'}, {'Oleg Mikhaylovich Gazmanov': 'Person', 'Russian': 'Location'}, {'Oleg Mikhaylovich Gazmanov': 'Person', 'Russian': 'Location'}, {'Oleg Mikhaylovich Gazmanov': 'Person', 'Russian': 'Location'}]",
        "prediction": "{'Oleg Mikhaylovich Gazmanov': 'Person', 'Russian': 'Location'}",
        "consistency_score": "{'entities': {('Oleg Mikhaylovich Gazmanov', 'Person'): 5, ('Russian', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Oleg Mikhaylovich Gazmanov', 'Person'): 5, ('Russian', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 97,
        "sentence": "The show was televised live on March 2 , 2007 on FOX at 8 p.m. EST at the Shrine Auditorium in Hollywood , California .",
        "label": "{'California': 'Location', 'FOX': 'Organization', 'Shrine Auditorium': 'Organization', 'Hollywood': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The show was televised live on March 2 , 2007 on FOX at 8 p.m. EST at the Shrine Auditorium in Hollywood , California .\nAnswer: ",
        "responses": "['[{\"FOX\": \"Organization\"}, {\"Shrine Auditorium\": \"Location\"}, {\"Hollywood\": \"Location\"}, {\"California\": \"Location\"}]', '[{\"FOX\": \"Organization\"}, {\"Shrine Auditorium\": \"Location\"}, {\"Hollywood\": \"Location\"}, {\"California\": \"Location\"}]', '[{\"FOX\": \"Organization\"}, {\"Shrine Auditorium\": \"Location\"}, {\"Hollywood\": \"Location\"}, {\"California\": \"Location\"}]', '[{\"FOX\": \"Organization\"}, {\"Shrine Auditorium\": \"Location\"}, {\"Hollywood\": \"Location\"}, {\"California\": \"Location\"}]', '[{\"FOX\": \"Organization\"}, {\"Shrine Auditorium\": \"Location\"}, {\"Hollywood\": \"Location\"}, {\"California\": \"Location\"}]']",
        "prediction_per_consist": "[{'FOX': 'Organization', 'Shrine Auditorium': 'Location', 'Hollywood': 'Location', 'California': 'Location'}, {'FOX': 'Organization', 'Shrine Auditorium': 'Location', 'Hollywood': 'Location', 'California': 'Location'}, {'FOX': 'Organization', 'Shrine Auditorium': 'Location', 'Hollywood': 'Location', 'California': 'Location'}, {'FOX': 'Organization', 'Shrine Auditorium': 'Location', 'Hollywood': 'Location', 'California': 'Location'}, {'FOX': 'Organization', 'Shrine Auditorium': 'Location', 'Hollywood': 'Location', 'California': 'Location'}]",
        "prediction": "{'FOX': 'Organization', 'Shrine Auditorium': 'Location', 'Hollywood': 'Location', 'California': 'Location'}",
        "consistency_score": "{'entities': {('FOX', 'Organization'): 5, ('Shrine Auditorium', 'Location'): 5, ('Hollywood', 'Location'): 5, ('California', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('FOX', 'Organization'): 5, ('Shrine Auditorium', 'Location'): 5, ('Hollywood', 'Location'): 5, ('California', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 356,
        "sentence": "Bandarlapalle is a small village in the Palmaner Taluk of Chittoor District of Andhra Pradesh in India .",
        "label": "{'Chittoor District': 'Location', 'Andhra Pradesh': 'Location', 'Palmaner Taluk': 'Location', 'India': 'Location', 'Bandarlapalle': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Bandarlapalle is a small village in the Palmaner Taluk of Chittoor District of Andhra Pradesh in India .\nAnswer: ",
        "responses": "['[{\"Bandarlapalle\": \"Location\"}, {\"Palmaner Taluk\": \"Location\"}, {\"Chittoor District\": \"Location\"}, {\"Andhra Pradesh\": \"Location\"}, {\"India\": \"Location\"}]', '[{\"Bandarlapalle\": \"Location\"}, {\"Palmaner Taluk\": \"Location\"}, {\"Chittoor District\": \"Location\"}, {\"Andhra Pradesh\": \"Location\"}, {\"India\": \"Location\"}]', '[{\"Bandarlapalle\": \"Location\"}, {\"Palmaner Taluk\": \"Location\"}, {\"Chittoor District\": \"Location\"}, {\"Andhra Pradesh\": \"Location\"}, {\"India\": \"Location\"}]', '[{\"Bandarlapalle\": \"Location\"}, {\"Palmaner Taluk\": \"Location\"}, {\"Chittoor District\": \"Location\"}, {\"Andhra Pradesh\": \"Location\"}, {\"India\": \"Location\"}]', '[{\"Bandarlapalle\": \"Location\"}, {\"Palmaner Taluk\": \"Location\"}, {\"Chittoor District\": \"Location\"}, {\"Andhra Pradesh\": \"Location\"}, {\"India\": \"Location\"}]']",
        "prediction_per_consist": "[{'Bandarlapalle': 'Location', 'Palmaner Taluk': 'Location', 'Chittoor District': 'Location', 'Andhra Pradesh': 'Location', 'India': 'Location'}, {'Bandarlapalle': 'Location', 'Palmaner Taluk': 'Location', 'Chittoor District': 'Location', 'Andhra Pradesh': 'Location', 'India': 'Location'}, {'Bandarlapalle': 'Location', 'Palmaner Taluk': 'Location', 'Chittoor District': 'Location', 'Andhra Pradesh': 'Location', 'India': 'Location'}, {'Bandarlapalle': 'Location', 'Palmaner Taluk': 'Location', 'Chittoor District': 'Location', 'Andhra Pradesh': 'Location', 'India': 'Location'}, {'Bandarlapalle': 'Location', 'Palmaner Taluk': 'Location', 'Chittoor District': 'Location', 'Andhra Pradesh': 'Location', 'India': 'Location'}]",
        "prediction": "{'Bandarlapalle': 'Location', 'Palmaner Taluk': 'Location', 'Chittoor District': 'Location', 'Andhra Pradesh': 'Location', 'India': 'Location'}",
        "consistency_score": "{'entities': {('Bandarlapalle', 'Location'): 5, ('Palmaner Taluk', 'Location'): 5, ('Chittoor District', 'Location'): 5, ('Andhra Pradesh', 'Location'): 5, ('India', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Bandarlapalle', 'Location'): 5, ('Palmaner Taluk', 'Location'): 5, ('Chittoor District', 'Location'): 5, ('Andhra Pradesh', 'Location'): 5, ('India', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1007,
        "sentence": "He had a tentative contract with Muhammed Ali in 1976 , but the fight never materialized .",
        "label": "{'Muhammed Ali': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He had a tentative contract with Muhammed Ali in 1976 , but the fight never materialized .\nAnswer: ",
        "responses": "['[{\"Muhammed Ali\": \"Person\"}]', '[{\"Muhammed Ali\": \"Person\"}]', '[{\"Muhammed Ali\": \"Person\"}]', '[{\"Muhammed Ali\": \"Person\"}]', '[{\"Muhammed Ali\": \"Person\"}]']",
        "prediction_per_consist": "[{'Muhammed Ali': 'Person'}, {'Muhammed Ali': 'Person'}, {'Muhammed Ali': 'Person'}, {'Muhammed Ali': 'Person'}, {'Muhammed Ali': 'Person'}]",
        "prediction": "{'Muhammed Ali': 'Person'}",
        "consistency_score": "{'entities': {('Muhammed Ali', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Muhammed Ali', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 455,
        "sentence": "Player pinpoints Mike Stewart -- the undisputed guru of bodyboarding who had pioneered the sport -- for kick-starting an era of self-reliance and self-belief , backed by his call to \" support those who support bodyboarding \" .",
        "label": "{'Mike Stewart': 'Person', 'Player': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Player pinpoints Mike Stewart -- the undisputed guru of bodyboarding who had pioneered the sport -- for kick-starting an era of self-reliance and self-belief , backed by his call to \" support those who support bodyboarding \" .\nAnswer: ",
        "responses": "['[{\"Mike Stewart\": \"Person\"}]', '[{\"Mike Stewart\": \"Person\"}]', '[{\"Mike Stewart\": \"Person\"}]', '[{\"Mike Stewart\": \"Person\"}]', '[{\"Mike Stewart\": \"Person\"}]']",
        "prediction_per_consist": "[{'Mike Stewart': 'Person'}, {'Mike Stewart': 'Person'}, {'Mike Stewart': 'Person'}, {'Mike Stewart': 'Person'}, {'Mike Stewart': 'Person'}]",
        "prediction": "{'Mike Stewart': 'Person'}",
        "consistency_score": "{'entities': {('Mike Stewart', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Mike Stewart', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 980,
        "sentence": "Friedrich the Great was Lessing 's patron , and he extended royal protection and sponsorship to Mendelssohn , as well .",
        "label": "{'Friedrich the Great': 'Person', 'Lessing': 'Person', 'Mendelssohn': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Friedrich the Great was Lessing 's patron , and he extended royal protection and sponsorship to Mendelssohn , as well .\nAnswer: ",
        "responses": "['[{\"Friedrich the Great\": \"Person\"}, {\"Lessing\": \"Person\"}, {\"Mendelssohn\": \"Person\"}]', '[{\"Friedrich the Great\": \"Person\"}, {\"Lessing\": \"Person\"}, {\"Mendelssohn\": \"Person\"}]', '[{\"Friedrich the Great\": \"Person\"}, {\"Lessing\": \"Person\"}, {\"Mendelssohn\": \"Person\"}]', '[{\"Friedrich the Great\": \"Person\"}, {\"Lessing\": \"Person\"}, {\"Mendelssohn\": \"Person\"}]', '[{\"Friedrich the Great\": \"Person\"}, {\"Lessing\": \"Person\"}, {\"Mendelssohn\": \"Person\"}]']",
        "prediction_per_consist": "[{'Friedrich the Great': 'Person', 'Lessing': 'Person', 'Mendelssohn': 'Person'}, {'Friedrich the Great': 'Person', 'Lessing': 'Person', 'Mendelssohn': 'Person'}, {'Friedrich the Great': 'Person', 'Lessing': 'Person', 'Mendelssohn': 'Person'}, {'Friedrich the Great': 'Person', 'Lessing': 'Person', 'Mendelssohn': 'Person'}, {'Friedrich the Great': 'Person', 'Lessing': 'Person', 'Mendelssohn': 'Person'}]",
        "prediction": "{'Friedrich the Great': 'Person', 'Lessing': 'Person', 'Mendelssohn': 'Person'}",
        "consistency_score": "{'entities': {('Friedrich the Great', 'Person'): 5, ('Lessing', 'Person'): 5, ('Mendelssohn', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Friedrich the Great', 'Person'): 5, ('Lessing', 'Person'): 5, ('Mendelssohn', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 60,
        "sentence": "According to an interview from Virgin Records , the band 's name",
        "label": "{'Virgin Records': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: According to an interview from Virgin Records , the band 's name\nAnswer: ",
        "responses": "['[{\"Virgin Records\": \"Organization\"}]', '[{\"Virgin Records\": \"Organization\"}]', '[{\"Virgin Records\": \"Organization\"}]', '[{\"Virgin Records\": \"Organization\"}]', '[{\"Virgin Records\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Virgin Records': 'Organization'}, {'Virgin Records': 'Organization'}, {'Virgin Records': 'Organization'}, {'Virgin Records': 'Organization'}, {'Virgin Records': 'Organization'}]",
        "prediction": "{'Virgin Records': 'Organization'}",
        "consistency_score": "{'entities': {('Virgin Records', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Virgin Records', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 677,
        "sentence": "It is managed by CBL & Associates Properties .",
        "label": "{'CBL & Associates Properties': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: It is managed by CBL & Associates Properties .\nAnswer: ",
        "responses": "['[{\"CBL & Associates Properties\": \"Organization\"}]', '[{\"CBL & Associates Properties\": \"Organization\"}]', '[{\"CBL & Associates Properties\": \"Organization\"}]', '[{\"CBL & Associates Properties\": \"Organization\"}]', '[{\"CBL & Associates Properties\": \"Organization\"}]']",
        "prediction_per_consist": "[{'CBL & Associates Properties': 'Organization'}, {'CBL & Associates Properties': 'Organization'}, {'CBL & Associates Properties': 'Organization'}, {'CBL & Associates Properties': 'Organization'}, {'CBL & Associates Properties': 'Organization'}]",
        "prediction": "{'CBL & Associates Properties': 'Organization'}",
        "consistency_score": "{'entities': {('CBL & Associates Properties', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('CBL & Associates Properties', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 870,
        "sentence": "His research group at the university of Pittsburgh uses stress to trap excitons in confined regions , similar to the way atoms are confined in traps for Bose-Einstein condensation experiments .",
        "label": "{'university of Pittsburgh': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: His research group at the university of Pittsburgh uses stress to trap excitons in confined regions , similar to the way atoms are confined in traps for Bose-Einstein condensation experiments .\nAnswer: ",
        "responses": "['[{\"Pittsburgh\": \"Location\"}]', '[{\"Pittsburgh\": \"Location\"}]', '[{\"Pittsburgh\": \"Location\"}]', '[{\"Pittsburgh\": \"Location\"}]', '[{\"Pittsburgh\": \"Location\"}]']",
        "prediction_per_consist": "[{'Pittsburgh': 'Location'}, {'Pittsburgh': 'Location'}, {'Pittsburgh': 'Location'}, {'Pittsburgh': 'Location'}, {'Pittsburgh': 'Location'}]",
        "prediction": "{'Pittsburgh': 'Location'}",
        "consistency_score": "{'entities': {('Pittsburgh', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Pittsburgh', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1042,
        "sentence": "Hitzig is remembered for his work concerning the interaction between electrical current and the brain .",
        "label": "{'Hitzig': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Hitzig is remembered for his work concerning the interaction between electrical current and the brain .\nAnswer: ",
        "responses": "['[{\"Hitzig\": \"Person\"}]', '[{\"Hitzig\": \"Person\"}]', '[{\"Hitzig\": \"Person\"}]', '[{\"Hitzig\": \"Person\"}]', '[{\"Hitzig\": \"Person\"}]']",
        "prediction_per_consist": "[{'Hitzig': 'Person'}, {'Hitzig': 'Person'}, {'Hitzig': 'Person'}, {'Hitzig': 'Person'}, {'Hitzig': 'Person'}]",
        "prediction": "{'Hitzig': 'Person'}",
        "consistency_score": "{'entities': {('Hitzig', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Hitzig', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 806,
        "sentence": "The Connecticut Lottery had several options for distributing the $2.1 million cash that would have funded the jackpot prize ; as of June 2007 , there has been no official word as to what the money will be used for .",
        "label": "{'Connecticut Lottery': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The Connecticut Lottery had several options for distributing the $2.1 million cash that would have funded the jackpot prize ; as of June 2007 , there has been no official word as to what the money will be used for .\nAnswer: ",
        "responses": "['[{\"Connecticut Lottery\": \"Organization\"}, {\"June 2007\": \"Miscellaneous\"}]', '[{\"Connecticut Lottery\": \"Organization\"}, {\"June 2007\": \"Miscellaneous\"}]', '[{\"Connecticut Lottery\": \"Organization\"}, {\"June 2007\": \"Miscellaneous\"}]', '[{\"Connecticut Lottery\": \"Organization\"}, {\"June 2007\": \"Miscellaneous\"}]', '[{\"Connecticut Lottery\": \"Organization\"}, {\"June 2007\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Connecticut Lottery': 'Organization', 'June 2007': 'Miscellaneous'}, {'Connecticut Lottery': 'Organization', 'June 2007': 'Miscellaneous'}, {'Connecticut Lottery': 'Organization', 'June 2007': 'Miscellaneous'}, {'Connecticut Lottery': 'Organization', 'June 2007': 'Miscellaneous'}, {'Connecticut Lottery': 'Organization', 'June 2007': 'Miscellaneous'}]",
        "prediction": "{'Connecticut Lottery': 'Organization', 'June 2007': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Connecticut Lottery', 'Organization'): 5, ('June 2007', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Connecticut Lottery', 'Organization'): 5, ('June 2007', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1164,
        "sentence": "For example , \" Fallen \" was previously called \" Jupiter \" , and \" Year Zero \" was previously called \" Hero \" .",
        "label": "{'Fallen': 'Miscellaneous', 'Jupiter': 'Miscellaneous', 'Year Zero': 'Miscellaneous', 'Hero': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: For example , \" Fallen \" was previously called \" Jupiter \" , and \" Year Zero \" was previously called \" Hero \" .\nAnswer: ",
        "responses": "['[{\"Fallen\": \"Miscellaneous\"}, {\"Jupiter\": \"Miscellaneous\"}, {\"Year Zero\": \"Miscellaneous\"}, {\"Hero\": \"Miscellaneous\"}]', '[{\"Fallen\": \"Miscellaneous\"}, {\"Jupiter\": \"Miscellaneous\"}, {\"Year Zero\": \"Miscellaneous\"}, {\"Hero\": \"Miscellaneous\"}]', '[{\"Fallen\": \"Miscellaneous\"}, {\"Jupiter\": \"Miscellaneous\"}, {\"Year Zero\": \"Miscellaneous\"}, {\"Hero\": \"Miscellaneous\"}]', '[{\"Fallen\": \"Miscellaneous\"}, {\"Jupiter\": \"Miscellaneous\"}, {\"Year Zero\": \"Miscellaneous\"}, {\"Hero\": \"Miscellaneous\"}]', '[{\"Fallen\": \"Miscellaneous\"}, {\"Jupiter\": \"Miscellaneous\"}, {\"Year Zero\": \"Miscellaneous\"}, {\"Hero\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Fallen': 'Miscellaneous', 'Jupiter': 'Miscellaneous', 'Year Zero': 'Miscellaneous', 'Hero': 'Miscellaneous'}, {'Fallen': 'Miscellaneous', 'Jupiter': 'Miscellaneous', 'Year Zero': 'Miscellaneous', 'Hero': 'Miscellaneous'}, {'Fallen': 'Miscellaneous', 'Jupiter': 'Miscellaneous', 'Year Zero': 'Miscellaneous', 'Hero': 'Miscellaneous'}, {'Fallen': 'Miscellaneous', 'Jupiter': 'Miscellaneous', 'Year Zero': 'Miscellaneous', 'Hero': 'Miscellaneous'}, {'Fallen': 'Miscellaneous', 'Jupiter': 'Miscellaneous', 'Year Zero': 'Miscellaneous', 'Hero': 'Miscellaneous'}]",
        "prediction": "{'Fallen': 'Miscellaneous', 'Jupiter': 'Miscellaneous', 'Year Zero': 'Miscellaneous', 'Hero': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Fallen', 'Miscellaneous'): 5, ('Jupiter', 'Miscellaneous'): 5, ('Year Zero', 'Miscellaneous'): 5, ('Hero', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Fallen', 'Miscellaneous'): 5, ('Jupiter', 'Miscellaneous'): 5, ('Year Zero', 'Miscellaneous'): 5, ('Hero', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 819,
        "sentence": "Passengers between these two stations must travel to Hilsea , the next station south on the Portsmouth line , and change trains there .",
        "label": "{'Portsmouth': 'Location', 'Hilsea': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Passengers between these two stations must travel to Hilsea , the next station south on the Portsmouth line , and change trains there .\nAnswer: ",
        "responses": "['[{\"Hilsea\": \"Location\"}, {\"Portsmouth\": \"Location\"}]', '[{\"Hilsea\": \"Location\"}, {\"Portsmouth\": \"Location\"}]', '[{\"Hilsea\": \"Location\"}, {\"Portsmouth\": \"Location\"}]', '[{\"Hilsea\": \"Location\"}, {\"Portsmouth\": \"Location\"}]', '[{\"Hilsea\": \"Location\"}, {\"Portsmouth\": \"Location\"}]']",
        "prediction_per_consist": "[{'Hilsea': 'Location', 'Portsmouth': 'Location'}, {'Hilsea': 'Location', 'Portsmouth': 'Location'}, {'Hilsea': 'Location', 'Portsmouth': 'Location'}, {'Hilsea': 'Location', 'Portsmouth': 'Location'}, {'Hilsea': 'Location', 'Portsmouth': 'Location'}]",
        "prediction": "{'Hilsea': 'Location', 'Portsmouth': 'Location'}",
        "consistency_score": "{'entities': {('Hilsea', 'Location'): 5, ('Portsmouth', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Hilsea', 'Location'): 5, ('Portsmouth', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 62,
        "sentence": "The album was produced by Josh Abraham , whose producing credits also include Orgy , Velvet Revolver , and Linkin Park .",
        "label": "{'Velvet Revolver': 'Organization', 'Orgy': 'Organization', 'Josh Abraham': 'Person', 'Linkin Park': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The album was produced by Josh Abraham , whose producing credits also include Orgy , Velvet Revolver , and Linkin Park .\nAnswer: ",
        "responses": "['[{\"Josh Abraham\": \"Person\"}, {\"Orgy\": \"Organization\"}, {\"Velvet Revolver\": \"Organization\"}, {\"Linkin Park\": \"Organization\"}]', '[{\"Josh Abraham\": \"Person\"}, {\"Orgy\": \"Organization\"}, {\"Velvet Revolver\": \"Organization\"}, {\"Linkin Park\": \"Organization\"}]', '[{\"Josh Abraham\": \"Person\"}, {\"Orgy\": \"Organization\"}, {\"Velvet Revolver\": \"Organization\"}, {\"Linkin Park\": \"Organization\"}]', '[{\"Josh Abraham\": \"Person\"}, {\"Orgy\": \"Organization\"}, {\"Velvet Revolver\": \"Organization\"}, {\"Linkin Park\": \"Organization\"}]', '[{\"Josh Abraham\": \"Person\"}, {\"Orgy\": \"Organization\"}, {\"Velvet Revolver\": \"Organization\"}, {\"Linkin Park\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Josh Abraham': 'Person', 'Orgy': 'Organization', 'Velvet Revolver': 'Organization', 'Linkin Park': 'Organization'}, {'Josh Abraham': 'Person', 'Orgy': 'Organization', 'Velvet Revolver': 'Organization', 'Linkin Park': 'Organization'}, {'Josh Abraham': 'Person', 'Orgy': 'Organization', 'Velvet Revolver': 'Organization', 'Linkin Park': 'Organization'}, {'Josh Abraham': 'Person', 'Orgy': 'Organization', 'Velvet Revolver': 'Organization', 'Linkin Park': 'Organization'}, {'Josh Abraham': 'Person', 'Orgy': 'Organization', 'Velvet Revolver': 'Organization', 'Linkin Park': 'Organization'}]",
        "prediction": "{'Josh Abraham': 'Person', 'Orgy': 'Organization', 'Velvet Revolver': 'Organization', 'Linkin Park': 'Organization'}",
        "consistency_score": "{'entities': {('Josh Abraham', 'Person'): 5, ('Orgy', 'Organization'): 5, ('Velvet Revolver', 'Organization'): 5, ('Linkin Park', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Josh Abraham', 'Person'): 5, ('Orgy', 'Organization'): 5, ('Velvet Revolver', 'Organization'): 5, ('Linkin Park', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 357,
        "sentence": "The village is situated in the South East of Deccan Plateau .",
        "label": "{'Deccan Plateau': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The village is situated in the South East of Deccan Plateau .\nAnswer: ",
        "responses": "['[{\"Deccan Plateau\": \"Location\"}]', '[{\"Deccan Plateau\": \"Location\"}]', '[{\"Deccan Plateau\": \"Location\"}]', '[{\"Deccan Plateau\": \"Location\"}]', '[{\"Deccan Plateau\": \"Location\"}]']",
        "prediction_per_consist": "[{'Deccan Plateau': 'Location'}, {'Deccan Plateau': 'Location'}, {'Deccan Plateau': 'Location'}, {'Deccan Plateau': 'Location'}, {'Deccan Plateau': 'Location'}]",
        "prediction": "{'Deccan Plateau': 'Location'}",
        "consistency_score": "{'entities': {('Deccan Plateau', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Deccan Plateau', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 67,
        "sentence": "In October , the band began their \" Welcome to the Universe \" tour , sponsored by MTV2 .",
        "label": "{'MTV2': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: In October , the band began their \" Welcome to the Universe \" tour , sponsored by MTV2 .\nAnswer: ",
        "responses": "['[{\"October\": \"Miscellaneous\"}, {\"MTV2\": \"Organization\"}]', '[{\"October\": \"Miscellaneous\"}, {\"MTV2\": \"Organization\"}]', '[{\"October\": \"Miscellaneous\"}, {\"MTV2\": \"Organization\"}]', '[{\"October\": \"Miscellaneous\"}, {\"MTV2\": \"Organization\"}]', '[{\"October\": \"Miscellaneous\"}, {\"MTV2\": \"Organization\"}]']",
        "prediction_per_consist": "[{'October': 'Miscellaneous', 'MTV2': 'Organization'}, {'October': 'Miscellaneous', 'MTV2': 'Organization'}, {'October': 'Miscellaneous', 'MTV2': 'Organization'}, {'October': 'Miscellaneous', 'MTV2': 'Organization'}, {'October': 'Miscellaneous', 'MTV2': 'Organization'}]",
        "prediction": "{'October': 'Miscellaneous', 'MTV2': 'Organization'}",
        "consistency_score": "{'entities': {('October', 'Miscellaneous'): 5, ('MTV2', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('October', 'Miscellaneous'): 5, ('MTV2', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 397,
        "sentence": "With these documents Pazuela was able to interrupt Belgrano 's plans and began his advance on the mountains on October 1 .",
        "label": "{'Belgrano': 'Person', 'Pazuela': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: With these documents Pazuela was able to interrupt Belgrano 's plans and began his advance on the mountains on October 1 .\nAnswer: ",
        "responses": "['[{\"Pazuela\": \"Person\"}, {\"Belgrano\": \"Person\"}]', '[{\"Pazuela\": \"Person\"}, {\"Belgrano\": \"Person\"}]', '[{\"Pazuela\": \"Person\"}, {\"Belgrano\": \"Person\"}]', '[{\"Pazuela\": \"Person\"}, {\"Belgrano\": \"Person\"}]', '[{\"Pazuela\": \"Person\"}, {\"Belgrano\": \"Person\"}]']",
        "prediction_per_consist": "[{'Pazuela': 'Person', 'Belgrano': 'Person'}, {'Pazuela': 'Person', 'Belgrano': 'Person'}, {'Pazuela': 'Person', 'Belgrano': 'Person'}, {'Pazuela': 'Person', 'Belgrano': 'Person'}, {'Pazuela': 'Person', 'Belgrano': 'Person'}]",
        "prediction": "{'Pazuela': 'Person', 'Belgrano': 'Person'}",
        "consistency_score": "{'entities': {('Pazuela', 'Person'): 5, ('Belgrano', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Pazuela', 'Person'): 5, ('Belgrano', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 902,
        "sentence": "He became more passionate about music , and was reflected when Budjana moved to Surabaya , East Java , where he took a classical music course , performed with a band and participated in many of music performances .",
        "label": "{'East Java': 'Location', 'Surabaya': 'Location', 'Budjana': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He became more passionate about music , and was reflected when Budjana moved to Surabaya , East Java , where he took a classical music course , performed with a band and participated in many of music performances .\nAnswer: ",
        "responses": "['[{\"Budjana\": \"Person\"}, {\"Surabaya\": \"Location\"}, {\"East Java\": \"Location\"}]', '[{\"Budjana\": \"Person\"}, {\"Surabaya\": \"Location\"}, {\"East Java\": \"Location\"}]', '[{\"Budjana\": \"Person\"}, {\"Surabaya\": \"Location\"}, {\"East Java\": \"Location\"}]', '[{\"Budjana\": \"Person\"}, {\"Surabaya\": \"Location\"}, {\"East Java\": \"Location\"}]', '[{\"Budjana\": \"Person\"}, {\"Surabaya\": \"Location\"}, {\"East Java\": \"Location\"}]']",
        "prediction_per_consist": "[{'Budjana': 'Person', 'Surabaya': 'Location', 'East Java': 'Location'}, {'Budjana': 'Person', 'Surabaya': 'Location', 'East Java': 'Location'}, {'Budjana': 'Person', 'Surabaya': 'Location', 'East Java': 'Location'}, {'Budjana': 'Person', 'Surabaya': 'Location', 'East Java': 'Location'}, {'Budjana': 'Person', 'Surabaya': 'Location', 'East Java': 'Location'}]",
        "prediction": "{'Budjana': 'Person', 'Surabaya': 'Location', 'East Java': 'Location'}",
        "consistency_score": "{'entities': {('Budjana', 'Person'): 5, ('Surabaya', 'Location'): 5, ('East Java', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Budjana', 'Person'): 5, ('Surabaya', 'Location'): 5, ('East Java', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 782,
        "sentence": "In 1935 the Carnegie Institution sent a team to review their work , and as a result the ERO was ordered to stop all efforts .",
        "label": "{'ERO': 'Organization', 'Carnegie Institution': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: In 1935 the Carnegie Institution sent a team to review their work , and as a result the ERO was ordered to stop all efforts .\nAnswer: ",
        "responses": "['[{\"Carnegie Institution\": \"Organization\"}, {\"ERO\": \"Organization\"}]', '[{\"Carnegie Institution\": \"Organization\"}, {\"ERO\": \"Organization\"}]', '[{\"Carnegie Institution\": \"Organization\"}, {\"ERO\": \"Organization\"}]', '[{\"Carnegie Institution\": \"Organization\"}, {\"ERO\": \"Organization\"}]', '[{\"Carnegie Institution\": \"Organization\"}, {\"ERO\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Carnegie Institution': 'Organization', 'ERO': 'Organization'}, {'Carnegie Institution': 'Organization', 'ERO': 'Organization'}, {'Carnegie Institution': 'Organization', 'ERO': 'Organization'}, {'Carnegie Institution': 'Organization', 'ERO': 'Organization'}, {'Carnegie Institution': 'Organization', 'ERO': 'Organization'}]",
        "prediction": "{'Carnegie Institution': 'Organization', 'ERO': 'Organization'}",
        "consistency_score": "{'entities': {('Carnegie Institution', 'Organization'): 5, ('ERO', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Carnegie Institution', 'Organization'): 5, ('ERO', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1297,
        "sentence": "Soul singers Minnie Riperton and Roberta Flack are among her influences .",
        "label": "{'Minnie Riperton': 'Person', 'Roberta Flack': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Soul singers Minnie Riperton and Roberta Flack are among her influences .\nAnswer: ",
        "responses": "['[{\"Minnie Riperton\": \"Person\"}, {\"Roberta Flack\": \"Person\"}]', '[{\"Minnie Riperton\": \"Person\"}, {\"Roberta Flack\": \"Person\"}]', '[{\"Minnie Riperton\": \"Person\"}, {\"Roberta Flack\": \"Person\"}]', '[{\"Minnie Riperton\": \"Person\"}, {\"Roberta Flack\": \"Person\"}]', '[{\"Minnie Riperton\": \"Person\"}, {\"Roberta Flack\": \"Person\"}]']",
        "prediction_per_consist": "[{'Minnie Riperton': 'Person', 'Roberta Flack': 'Person'}, {'Minnie Riperton': 'Person', 'Roberta Flack': 'Person'}, {'Minnie Riperton': 'Person', 'Roberta Flack': 'Person'}, {'Minnie Riperton': 'Person', 'Roberta Flack': 'Person'}, {'Minnie Riperton': 'Person', 'Roberta Flack': 'Person'}]",
        "prediction": "{'Minnie Riperton': 'Person', 'Roberta Flack': 'Person'}",
        "consistency_score": "{'entities': {('Minnie Riperton', 'Person'): 5, ('Roberta Flack', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Minnie Riperton', 'Person'): 5, ('Roberta Flack', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 818,
        "sentence": "Although the nearest station eastward is Bedhampton , there are no direct services calling at both Cosham and Bedhampton .",
        "label": "{'Cosham': 'Location', 'Bedhampton': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Although the nearest station eastward is Bedhampton , there are no direct services calling at both Cosham and Bedhampton .\nAnswer: ",
        "responses": "['[{\"Bedhampton\": \"Location\"}, {\"Cosham\": \"Location\"}]', '[{\"Bedhampton\": \"Location\"}, {\"Cosham\": \"Location\"}]', '[{\"Bedhampton\": \"Location\"}, {\"Cosham\": \"Location\"}]', '[{\"Bedhampton\": \"Location\"}, {\"Cosham\": \"Location\"}, {\"Bedhampton\": \"Location\"}]', '[{\"Bedhampton\": \"Location\"}, {\"Cosham\": \"Location\"}]']",
        "prediction_per_consist": "[{'Bedhampton': 'Location', 'Cosham': 'Location'}, {'Bedhampton': 'Location', 'Cosham': 'Location'}, {'Bedhampton': 'Location', 'Cosham': 'Location'}, {'Bedhampton': 'Location', 'Cosham': 'Location'}, {'Bedhampton': 'Location', 'Cosham': 'Location'}]",
        "prediction": "{'Bedhampton': 'Location', 'Cosham': 'Location'}",
        "consistency_score": "{'entities': {('Bedhampton', 'Location'): 5, ('Cosham', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Bedhampton', 'Location'): 5, ('Cosham', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 59,
        "sentence": "After working with small revolving door of guitarists ( as the band 's first two guitarists , Kevin Drake and Solon Bixler , left the band due to issues primarily related to touring ) , the three auditioned Tomo Miličević to round out the band 's roster .",
        "label": "{'Tomo Miličević': 'Person', 'Kevin Drake': 'Person', 'Solon Bixler': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: After working with small revolving door of guitarists ( as the band 's first two guitarists , Kevin Drake and Solon Bixler , left the band due to issues primarily related to touring ) , the three auditioned Tomo Miličević to round out the band 's roster .\nAnswer: ",
        "responses": "['[{\"Kevin Drake\": \"Person\"}, {\"Solon Bixler\": \"Person\"}, {\"Tomo Miličević\": \"Person\"}]', '[{\"Kevin Drake\": \"Person\"}, {\"Solon Bixler\": \"Person\"}, {\"Tomo Miličević\": \"Person\"}]', '[{\"Kevin Drake\": \"Person\"}, {\"Solon Bixler\": \"Person\"}, {\"Tomo Miličević\": \"Person\"}]', '[{\"Kevin Drake\": \"Person\"}, {\"Solon Bixler\": \"Person\"}, {\"Tomo Miličević\": \"Person\"}]', '[{\"Kevin Drake\": \"Person\"}, {\"Solon Bixler\": \"Person\"}, {\"Tomo Miličević\": \"Person\"}]']",
        "prediction_per_consist": "[{'Kevin Drake': 'Person', 'Solon Bixler': 'Person', 'Tomo Miličević': 'Person'}, {'Kevin Drake': 'Person', 'Solon Bixler': 'Person', 'Tomo Miličević': 'Person'}, {'Kevin Drake': 'Person', 'Solon Bixler': 'Person', 'Tomo Miličević': 'Person'}, {'Kevin Drake': 'Person', 'Solon Bixler': 'Person', 'Tomo Miličević': 'Person'}, {'Kevin Drake': 'Person', 'Solon Bixler': 'Person', 'Tomo Miličević': 'Person'}]",
        "prediction": "{'Kevin Drake': 'Person', 'Solon Bixler': 'Person', 'Tomo Miličević': 'Person'}",
        "consistency_score": "{'entities': {('Kevin Drake', 'Person'): 5, ('Solon Bixler', 'Person'): 5, ('Tomo Miličević', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Kevin Drake', 'Person'): 5, ('Solon Bixler', 'Person'): 5, ('Tomo Miličević', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1245,
        "sentence": "\" I just thought , ' You fools , this is what we do ' , \" says Ben Player , one of only two pro riders who voted to compete .",
        "label": "{'Ben Player': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: \" I just thought , ' You fools , this is what we do ' , \" says Ben Player , one of only two pro riders who voted to compete .\nAnswer: ",
        "responses": "['[{\"Ben Player\": \"Person\"}]', '[{\"Ben Player\": \"Person\"}]', '[{\"Ben Player\": \"Person\"}]', '[{\"Ben Player\": \"Person\"}]', '[{\"Ben Player\": \"Person\"}]']",
        "prediction_per_consist": "[{'Ben Player': 'Person'}, {'Ben Player': 'Person'}, {'Ben Player': 'Person'}, {'Ben Player': 'Person'}, {'Ben Player': 'Person'}]",
        "prediction": "{'Ben Player': 'Person'}",
        "consistency_score": "{'entities': {('Ben Player', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Ben Player', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 986,
        "sentence": "Her association with Germaine de Staë was obviously of the greatest importance , since she was also the patron and literary companion of Dorothea 's second husband , Friedrich Schlegel .",
        "label": "{'Germaine de Staë': 'Person', 'Dorothea': 'Person', 'Friedrich Schlegel': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Her association with Germaine de Staë was obviously of the greatest importance , since she was also the patron and literary companion of Dorothea 's second husband , Friedrich Schlegel .\nAnswer: ",
        "responses": "['[{\"Germaine de Staë\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Friedrich Schlegel\": \"Person\"}]', '[{\"Germaine de Staë\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Friedrich Schlegel\": \"Person\"}]', '[{\"Germaine de Staë\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Friedrich Schlegel\": \"Person\"}]', '[{\"Germaine de Staë\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Friedrich Schlegel\": \"Person\"}]', '[{\"Germaine de Staë\": \"Person\"}, {\"Dorothea\": \"Person\"}, {\"Friedrich Schlegel\": \"Person\"}]']",
        "prediction_per_consist": "[{'Germaine de Staë': 'Person', 'Dorothea': 'Person', 'Friedrich Schlegel': 'Person'}, {'Germaine de Staë': 'Person', 'Dorothea': 'Person', 'Friedrich Schlegel': 'Person'}, {'Germaine de Staë': 'Person', 'Dorothea': 'Person', 'Friedrich Schlegel': 'Person'}, {'Germaine de Staë': 'Person', 'Dorothea': 'Person', 'Friedrich Schlegel': 'Person'}, {'Germaine de Staë': 'Person', 'Dorothea': 'Person', 'Friedrich Schlegel': 'Person'}]",
        "prediction": "{'Germaine de Staë': 'Person', 'Dorothea': 'Person', 'Friedrich Schlegel': 'Person'}",
        "consistency_score": "{'entities': {('Germaine de Staë', 'Person'): 5, ('Dorothea', 'Person'): 5, ('Friedrich Schlegel', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Germaine de Staë', 'Person'): 5, ('Dorothea', 'Person'): 5, ('Friedrich Schlegel', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 972,
        "sentence": "Schlegel 's novel \" Lucinde \" ( 1799 ) was seen as an account of their affair , causing a scandal in German literary circles .",
        "label": "{'German': 'Miscellaneous', 'Lucinde': 'Miscellaneous', 'Schlegel': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Schlegel 's novel \" Lucinde \" ( 1799 ) was seen as an account of their affair , causing a scandal in German literary circles .\nAnswer: ",
        "responses": "['[{\"Schlegel\": \"Person\"}, {\"Lucinde\": \"Miscellaneous\"}, {\"German\": \"Location\"}]', '[{\"Schlegel\": \"Person\"}, {\"Lucinde\": \"Miscellaneous\"}, {\"German\": \"Location\"}]', '[{\"Schlegel\": \"Person\"}, {\"Lucinde\": \"Miscellaneous\"}, {\"German\": \"Location\"}]', '[{\"Schlegel\": \"Person\"}, {\"Lucinde\": \"Miscellaneous\"}, {\"German\": \"Location\"}]', '[{\"Schlegel\": \"Person\"}, {\"Lucinde\": \"Miscellaneous\"}, {\"German\": \"Location\"}]']",
        "prediction_per_consist": "[{'Schlegel': 'Person', 'Lucinde': 'Miscellaneous', 'German': 'Location'}, {'Schlegel': 'Person', 'Lucinde': 'Miscellaneous', 'German': 'Location'}, {'Schlegel': 'Person', 'Lucinde': 'Miscellaneous', 'German': 'Location'}, {'Schlegel': 'Person', 'Lucinde': 'Miscellaneous', 'German': 'Location'}, {'Schlegel': 'Person', 'Lucinde': 'Miscellaneous', 'German': 'Location'}]",
        "prediction": "{'Schlegel': 'Person', 'Lucinde': 'Miscellaneous', 'German': 'Location'}",
        "consistency_score": "{'entities': {('Schlegel', 'Person'): 5, ('Lucinde', 'Miscellaneous'): 5, ('German', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Schlegel', 'Person'): 5, ('Lucinde', 'Miscellaneous'): 5, ('German', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 987,
        "sentence": "De Staë was the daughter of Jacques Necker , Louis XVI 's finance minister , and a leading figure in the collapse of the Bourbons and the French Revolution .",
        "label": "{'French Revolution': 'Miscellaneous', 'De Staë': 'Person', 'Jacques Necker': 'Person', 'Louis XVI': 'Person', 'Bourbons': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: De Staë was the daughter of Jacques Necker , Louis XVI 's finance minister , and a leading figure in the collapse of the Bourbons and the French Revolution .\nAnswer: ",
        "responses": "['[{\"Jacques Necker\": \"Person\"}, {\"Louis XVI\": \"Person\"}, {\"Bourbons\": \"Organization\"}, {\"French Revolution\": \"Miscellaneous\"}]', '[{\"Jacques Necker\": \"Person\"}, {\"Louis XVI\": \"Person\"}, {\"Bourbons\": \"Organization\"}, {\"French Revolution\": \"Miscellaneous\"}]', '[{\"Jacques Necker\": \"Person\"}, {\"Louis XVI\": \"Person\"}, {\"Bourbons\": \"Organization\"}, {\"French Revolution\": \"Miscellaneous\"}]', '[{\"Jacques Necker\": \"Person\"}, {\"Louis XVI\": \"Person\"}, {\"Bourbons\": \"Organization\"}, {\"French Revolution\": \"Miscellaneous\"}]', '[{\"Jacques Necker\": \"Person\"}, {\"Louis XVI\": \"Person\"}, {\"Bourbons\": \"Organization\"}, {\"French Revolution\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Jacques Necker': 'Person', 'Louis XVI': 'Person', 'Bourbons': 'Organization', 'French Revolution': 'Miscellaneous'}, {'Jacques Necker': 'Person', 'Louis XVI': 'Person', 'Bourbons': 'Organization', 'French Revolution': 'Miscellaneous'}, {'Jacques Necker': 'Person', 'Louis XVI': 'Person', 'Bourbons': 'Organization', 'French Revolution': 'Miscellaneous'}, {'Jacques Necker': 'Person', 'Louis XVI': 'Person', 'Bourbons': 'Organization', 'French Revolution': 'Miscellaneous'}, {'Jacques Necker': 'Person', 'Louis XVI': 'Person', 'Bourbons': 'Organization', 'French Revolution': 'Miscellaneous'}]",
        "prediction": "{'Jacques Necker': 'Person', 'Louis XVI': 'Person', 'Bourbons': 'Organization', 'French Revolution': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Jacques Necker', 'Person'): 5, ('Louis XVI', 'Person'): 5, ('Bourbons', 'Organization'): 5, ('French Revolution', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Jacques Necker', 'Person'): 5, ('Louis XVI', 'Person'): 5, ('Bourbons', 'Organization'): 5, ('French Revolution', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1038,
        "sentence": "Eduard Hitzig ( February 6 , 1839 - August 20 , 1907 ) was a German neuropsychiatrist from Berlin .",
        "label": "{'German': 'Miscellaneous', 'Eduard Hitzig': 'Person', 'Berlin': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Eduard Hitzig ( February 6 , 1839 - August 20 , 1907 ) was a German neuropsychiatrist from Berlin .\nAnswer: ",
        "responses": "['[{\"Eduard Hitzig\": \"Person\"}, {\"Berlin\": \"Location\"}]', '[{\"Eduard Hitzig\": \"Person\"}, {\"Berlin\": \"Location\"}]', '[{\"Eduard Hitzig\": \"Person\"}, {\"Berlin\": \"Location\"}]', '[{\"Eduard Hitzig\": \"Person\"}, {\"Berlin\": \"Location\"}]', '[{\"Eduard Hitzig\": \"Person\"}, {\"Berlin\": \"Location\"}]']",
        "prediction_per_consist": "[{'Eduard Hitzig': 'Person', 'Berlin': 'Location'}, {'Eduard Hitzig': 'Person', 'Berlin': 'Location'}, {'Eduard Hitzig': 'Person', 'Berlin': 'Location'}, {'Eduard Hitzig': 'Person', 'Berlin': 'Location'}, {'Eduard Hitzig': 'Person', 'Berlin': 'Location'}]",
        "prediction": "{'Eduard Hitzig': 'Person', 'Berlin': 'Location'}",
        "consistency_score": "{'entities': {('Eduard Hitzig', 'Person'): 5, ('Berlin', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Eduard Hitzig', 'Person'): 5, ('Berlin', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 711,
        "sentence": "His excellent performance as a starter in the 2007 season has made him part of the new ' Big Three ' that include Dan Haren and Joe Blanton .",
        "label": "{'Joe Blanton': 'Person', 'Dan Haren': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: His excellent performance as a starter in the 2007 season has made him part of the new ' Big Three ' that include Dan Haren and Joe Blanton .\nAnswer: ",
        "responses": "['[{\"Dan Haren\": \"Person\"}, {\"Joe Blanton\": \"Person\"}]', '[{\"Dan Haren\": \"Person\"}, {\"Joe Blanton\": \"Person\"}]', '[{\"Dan Haren\": \"Person\"}, {\"Joe Blanton\": \"Person\"}]', '[{\"Dan Haren\": \"Person\"}, {\"Joe Blanton\": \"Person\"}]', '[{\"Dan Haren\": \"Person\"}, {\"Joe Blanton\": \"Person\"}]']",
        "prediction_per_consist": "[{'Dan Haren': 'Person', 'Joe Blanton': 'Person'}, {'Dan Haren': 'Person', 'Joe Blanton': 'Person'}, {'Dan Haren': 'Person', 'Joe Blanton': 'Person'}, {'Dan Haren': 'Person', 'Joe Blanton': 'Person'}, {'Dan Haren': 'Person', 'Joe Blanton': 'Person'}]",
        "prediction": "{'Dan Haren': 'Person', 'Joe Blanton': 'Person'}",
        "consistency_score": "{'entities': {('Dan Haren', 'Person'): 5, ('Joe Blanton', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Dan Haren', 'Person'): 5, ('Joe Blanton', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 170,
        "sentence": "Adilson Tavares Varela , commonly known as Cabral , ( born 22 October 1988 ) is a footballer from Switzerland who currently plays as midfielder in the Swiss Super League for FC Basel .",
        "label": "{'FC Basel': 'Organization', 'Switzerland': 'Location', 'Swiss Super League': 'Organization', 'Adilson Tavares Varela': 'Person', 'Cabral': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Adilson Tavares Varela , commonly known as Cabral , ( born 22 October 1988 ) is a footballer from Switzerland who currently plays as midfielder in the Swiss Super League for FC Basel .\nAnswer: ",
        "responses": "['[{\"Adilson Tavares Varela\": \"Person\"}, {\"Cabral\": \"Person\"}, {\"Switzerland\": \"Location\"}, {\"Swiss Super League\": \"Organization\"}, {\"FC Basel\": \"Organization\"}]', '[{\"Adilson Tavares Varela\": \"Person\"}, {\"Cabral\": \"Person\"}, {\"Switzerland\": \"Location\"}, {\"Swiss Super League\": \"Organization\"}, {\"FC Basel\": \"Organization\"}]', '[{\"Adilson Tavares Varela\": \"Person\"}, {\"Cabral\": \"Person\"}, {\"Switzerland\": \"Location\"}, {\"Swiss Super League\": \"Organization\"}, {\"FC Basel\": \"Organization\"}]', '[{\"Adilson Tavares Varela\": \"Person\"}, {\"Cabral\": \"Person\"}, {\"Switzerland\": \"Location\"}, {\"Swiss Super League\": \"Organization\"}, {\"FC Basel\": \"Organization\"}]', '[{\"Adilson Tavares Varela\": \"Person\"}, {\"Cabral\": \"Person\"}, {\"Switzerland\": \"Location\"}, {\"Swiss Super League\": \"Organization\"}, {\"FC Basel\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Adilson Tavares Varela': 'Person', 'Cabral': 'Person', 'Switzerland': 'Location', 'Swiss Super League': 'Organization', 'FC Basel': 'Organization'}, {'Adilson Tavares Varela': 'Person', 'Cabral': 'Person', 'Switzerland': 'Location', 'Swiss Super League': 'Organization', 'FC Basel': 'Organization'}, {'Adilson Tavares Varela': 'Person', 'Cabral': 'Person', 'Switzerland': 'Location', 'Swiss Super League': 'Organization', 'FC Basel': 'Organization'}, {'Adilson Tavares Varela': 'Person', 'Cabral': 'Person', 'Switzerland': 'Location', 'Swiss Super League': 'Organization', 'FC Basel': 'Organization'}, {'Adilson Tavares Varela': 'Person', 'Cabral': 'Person', 'Switzerland': 'Location', 'Swiss Super League': 'Organization', 'FC Basel': 'Organization'}]",
        "prediction": "{'Adilson Tavares Varela': 'Person', 'Cabral': 'Person', 'Switzerland': 'Location', 'Swiss Super League': 'Organization', 'FC Basel': 'Organization'}",
        "consistency_score": "{'entities': {('Adilson Tavares Varela', 'Person'): 5, ('Cabral', 'Person'): 5, ('Switzerland', 'Location'): 5, ('Swiss Super League', 'Organization'): 5, ('FC Basel', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Adilson Tavares Varela', 'Person'): 5, ('Cabral', 'Person'): 5, ('Switzerland', 'Location'): 5, ('Swiss Super League', 'Organization'): 5, ('FC Basel', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1177,
        "sentence": "During the nineties 6PR continued its dominance in the talk format arena with personalities such as David Christison & Lee Tate , Howard Sattler , Jenny Seaton & Gary Carvolth , Liam Bartlett , Harvey Deegan and Graham Mabury .",
        "label": "{'Jenny Seaton': 'Person', 'Gary Carvolth': 'Person', 'Liam Bartlett': 'Person', 'Lee Tate': 'Person', 'Howard Sattler': 'Person', 'Graham Mabury': 'Person', 'David Christison': 'Person', '6PR': 'Organization', 'Harvey Deegan': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: During the nineties 6PR continued its dominance in the talk format arena with personalities such as David Christison & Lee Tate , Howard Sattler , Jenny Seaton & Gary Carvolth , Liam Bartlett , Harvey Deegan and Graham Mabury .\nAnswer: ",
        "responses": "['[{\"David Christison\": \"Person\"}, {\"Lee Tate\": \"Person\"}, {\"Howard Sattler\": \"Person\"}, {\"Jenny Seaton\": \"Person\"}, {\"Gary Carvolth\": \"Person\"}, {\"Liam Bartlett\": \"Person\"}, {\"Harvey Deegan\": \"Person\"}, {\"Graham Mabury\": \"Person\"}]', '[{\"David Christison\": \"Person\"}, {\"Lee Tate\": \"Person\"}, {\"Howard Sattler\": \"Person\"}, {\"Jenny Seaton\": \"Person\"}, {\"Gary Carvolth\": \"Person\"}, {\"Liam Bartlett\": \"Person\"}, {\"Harvey Deegan\": \"Person\"}, {\"Graham Mabury\": \"Person\"}]', '[{\"David Christison\": \"Person\"}, {\"Lee Tate\": \"Person\"}, {\"Howard Sattler\": \"Person\"}, {\"Jenny Seaton\": \"Person\"}, {\"Gary Carvolth\": \"Person\"}, {\"Liam Bartlett\": \"Person\"}, {\"Harvey Deegan\": \"Person\"}, {\"Graham Mabury\": \"Person\"}]', '[{\"David Christison\": \"Person\"}, {\"Lee Tate\": \"Person\"}, {\"Howard Sattler\": \"Person\"}, {\"Jenny Seaton\": \"Person\"}, {\"Gary Carvolth\": \"Person\"}, {\"Liam Bartlett\": \"Person\"}, {\"Harvey Deegan\": \"Person\"}, {\"Graham Mabury\": \"Person\"}]', '[{\"David Christison\": \"Person\"}, {\"Lee Tate\": \"Person\"}, {\"Howard Sattler\": \"Person\"}, {\"Jenny Seaton\": \"Person\"}, {\"Gary Carvolth\": \"Person\"}, {\"Liam Bartlett\": \"Person\"}, {\"Harvey Deegan\": \"Person\"}, {\"Graham Mabury\": \"Person\"}]']",
        "prediction_per_consist": "[{'David Christison': 'Person', 'Lee Tate': 'Person', 'Howard Sattler': 'Person', 'Jenny Seaton': 'Person', 'Gary Carvolth': 'Person', 'Liam Bartlett': 'Person', 'Harvey Deegan': 'Person', 'Graham Mabury': 'Person'}, {'David Christison': 'Person', 'Lee Tate': 'Person', 'Howard Sattler': 'Person', 'Jenny Seaton': 'Person', 'Gary Carvolth': 'Person', 'Liam Bartlett': 'Person', 'Harvey Deegan': 'Person', 'Graham Mabury': 'Person'}, {'David Christison': 'Person', 'Lee Tate': 'Person', 'Howard Sattler': 'Person', 'Jenny Seaton': 'Person', 'Gary Carvolth': 'Person', 'Liam Bartlett': 'Person', 'Harvey Deegan': 'Person', 'Graham Mabury': 'Person'}, {'David Christison': 'Person', 'Lee Tate': 'Person', 'Howard Sattler': 'Person', 'Jenny Seaton': 'Person', 'Gary Carvolth': 'Person', 'Liam Bartlett': 'Person', 'Harvey Deegan': 'Person', 'Graham Mabury': 'Person'}, {'David Christison': 'Person', 'Lee Tate': 'Person', 'Howard Sattler': 'Person', 'Jenny Seaton': 'Person', 'Gary Carvolth': 'Person', 'Liam Bartlett': 'Person', 'Harvey Deegan': 'Person', 'Graham Mabury': 'Person'}]",
        "prediction": "{'David Christison': 'Person', 'Lee Tate': 'Person', 'Howard Sattler': 'Person', 'Jenny Seaton': 'Person', 'Gary Carvolth': 'Person', 'Liam Bartlett': 'Person', 'Harvey Deegan': 'Person', 'Graham Mabury': 'Person'}",
        "consistency_score": "{'entities': {('David Christison', 'Person'): 5, ('Lee Tate', 'Person'): 5, ('Howard Sattler', 'Person'): 5, ('Jenny Seaton', 'Person'): 5, ('Gary Carvolth', 'Person'): 5, ('Liam Bartlett', 'Person'): 5, ('Harvey Deegan', 'Person'): 5, ('Graham Mabury', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('David Christison', 'Person'): 5, ('Lee Tate', 'Person'): 5, ('Howard Sattler', 'Person'): 5, ('Jenny Seaton', 'Person'): 5, ('Gary Carvolth', 'Person'): 5, ('Liam Bartlett', 'Person'): 5, ('Harvey Deegan', 'Person'): 5, ('Graham Mabury', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 700,
        "sentence": "Gaudin was selected by the Tampa Bay Devil Rays right out of high school in the 34th round ( 1009th overall pick ) of the 2001 Major League Baseball Draft .",
        "label": "{'Major League Baseball': 'Organization', 'Tampa Bay Devil Rays': 'Organization', 'Gaudin': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Gaudin was selected by the Tampa Bay Devil Rays right out of high school in the 34th round ( 1009th overall pick ) of the 2001 Major League Baseball Draft .\nAnswer: ",
        "responses": "['[{\"Gaudin\": \"Person\"}, {\"Tampa Bay Devil Rays\": \"Organization\"}, {\"2001 Major League Baseball Draft\": \"Miscellaneous\"}]', '[{\"Gaudin\": \"Person\"}, {\"Tampa Bay Devil Rays\": \"Organization\"}, {\"2001 Major League Baseball Draft\": \"Miscellaneous\"}]', '[{\"Gaudin\": \"Person\"}, {\"Tampa Bay Devil Rays\": \"Organization\"}, {\"2001 Major League Baseball Draft\": \"Miscellaneous\"}]', '[{\"Gaudin\": \"Person\"}, {\"Tampa Bay Devil Rays\": \"Organization\"}, {\"2001 Major League Baseball Draft\": \"Miscellaneous\"}]', '[{\"Gaudin\": \"Person\"}, {\"Tampa Bay Devil Rays\": \"Organization\"}, {\"2001 Major League Baseball Draft\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Gaudin': 'Person', 'Tampa Bay Devil Rays': 'Organization', '2001 Major League Baseball Draft': 'Miscellaneous'}, {'Gaudin': 'Person', 'Tampa Bay Devil Rays': 'Organization', '2001 Major League Baseball Draft': 'Miscellaneous'}, {'Gaudin': 'Person', 'Tampa Bay Devil Rays': 'Organization', '2001 Major League Baseball Draft': 'Miscellaneous'}, {'Gaudin': 'Person', 'Tampa Bay Devil Rays': 'Organization', '2001 Major League Baseball Draft': 'Miscellaneous'}, {'Gaudin': 'Person', 'Tampa Bay Devil Rays': 'Organization', '2001 Major League Baseball Draft': 'Miscellaneous'}]",
        "prediction": "{'Gaudin': 'Person', 'Tampa Bay Devil Rays': 'Organization', '2001 Major League Baseball Draft': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Gaudin', 'Person'): 5, ('Tampa Bay Devil Rays', 'Organization'): 5, ('2001 Major League Baseball Draft', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Gaudin', 'Person'): 5, ('Tampa Bay Devil Rays', 'Organization'): 5, ('2001 Major League Baseball Draft', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1349,
        "sentence": "Daniel Segal is a British mathematician , currently a Professor of Mathematics at the University of Oxford .",
        "label": "{'British': 'Miscellaneous', 'Daniel Segal': 'Person', 'University of Oxford': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Daniel Segal is a British mathematician , currently a Professor of Mathematics at the University of Oxford .\nAnswer: ",
        "responses": "['[{\"Daniel Segal\": \"Person\"}, {\"British\": \"Location\"}, {\"University of Oxford\": \"Organization\"}]', '[{\"Daniel Segal\": \"Person\"}, {\"British\": \"Location\"}, {\"University of Oxford\": \"Organization\"}]', '[{\"Daniel Segal\": \"Person\"}, {\"British\": \"Location\"}, {\"University of Oxford\": \"Organization\"}]', '[{\"Daniel Segal\": \"Person\"}, {\"British\": \"Location\"}, {\"University of Oxford\": \"Organization\"}]', '[{\"Daniel Segal\": \"Person\"}, {\"British\": \"Location\"}, {\"University of Oxford\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Daniel Segal': 'Person', 'British': 'Location', 'University of Oxford': 'Organization'}, {'Daniel Segal': 'Person', 'British': 'Location', 'University of Oxford': 'Organization'}, {'Daniel Segal': 'Person', 'British': 'Location', 'University of Oxford': 'Organization'}, {'Daniel Segal': 'Person', 'British': 'Location', 'University of Oxford': 'Organization'}, {'Daniel Segal': 'Person', 'British': 'Location', 'University of Oxford': 'Organization'}]",
        "prediction": "{'Daniel Segal': 'Person', 'British': 'Location', 'University of Oxford': 'Organization'}",
        "consistency_score": "{'entities': {('Daniel Segal', 'Person'): 5, ('British', 'Location'): 5, ('University of Oxford', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Daniel Segal', 'Person'): 5, ('British', 'Location'): 5, ('University of Oxford', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1311,
        "sentence": "Nevertheless the network struggled , and ultimately failed , largely because of the reluctance of many cable systems across the United States to give it carriage , limiting severely its ability to attract both viewers and advertisers for its costly lineup of programming .",
        "label": "{'United States': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Nevertheless the network struggled , and ultimately failed , largely because of the reluctance of many cable systems across the United States to give it carriage , limiting severely its ability to attract both viewers and advertisers for its costly lineup of programming .\nAnswer: ",
        "responses": "['[{\"United States\": \"Location\"}]', '[{\"United States\": \"Location\"}]', '[{\"United States\": \"Location\"}]', '[{\"United States\": \"Location\"}]', '[{\"United States\": \"Location\"}]']",
        "prediction_per_consist": "[{'United States': 'Location'}, {'United States': 'Location'}, {'United States': 'Location'}, {'United States': 'Location'}, {'United States': 'Location'}]",
        "prediction": "{'United States': 'Location'}",
        "consistency_score": "{'entities': {('United States', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('United States', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 448,
        "sentence": "\" You ca n't help but be competitive with your brother , \" Ben says of their early years riding the wedging peaks of Whale Beach , on Sydney 's northern beaches .",
        "label": "{'Whale Beach': 'Location', 'Sydney': 'Location', 'Ben': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: \" You ca n't help but be competitive with your brother , \" Ben says of their early years riding the wedging peaks of Whale Beach , on Sydney 's northern beaches .\nAnswer: ",
        "responses": "['[{\"Ben\": \"Person\"}, {\"Whale Beach\": \"Location\"}, {\"Sydney\": \"Location\"}]', '[{\"Ben\": \"Person\"}, {\"Whale Beach\": \"Location\"}, {\"Sydney\": \"Location\"}]', '[{\"Ben\": \"Person\"}, {\"Whale Beach\": \"Location\"}, {\"Sydney\": \"Location\"}]', '[{\"Ben\": \"Person\"}, {\"Whale Beach\": \"Location\"}, {\"Sydney\": \"Location\"}]', '[{\"Ben\": \"Person\"}, {\"Whale Beach\": \"Location\"}, {\"Sydney\": \"Location\"}]']",
        "prediction_per_consist": "[{'Ben': 'Person', 'Whale Beach': 'Location', 'Sydney': 'Location'}, {'Ben': 'Person', 'Whale Beach': 'Location', 'Sydney': 'Location'}, {'Ben': 'Person', 'Whale Beach': 'Location', 'Sydney': 'Location'}, {'Ben': 'Person', 'Whale Beach': 'Location', 'Sydney': 'Location'}, {'Ben': 'Person', 'Whale Beach': 'Location', 'Sydney': 'Location'}]",
        "prediction": "{'Ben': 'Person', 'Whale Beach': 'Location', 'Sydney': 'Location'}",
        "consistency_score": "{'entities': {('Ben', 'Person'): 5, ('Whale Beach', 'Location'): 5, ('Sydney', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Ben', 'Person'): 5, ('Whale Beach', 'Location'): 5, ('Sydney', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 137,
        "sentence": "The operation moved from Barrack Street to 340 Hay Street just after the purchase by the VBN in 1963 .",
        "label": "{'Hay Street': 'Location', 'Barrack Street': 'Location', 'VBN': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The operation moved from Barrack Street to 340 Hay Street just after the purchase by the VBN in 1963 .\nAnswer: ",
        "responses": "['[{\"Barrack Street\": \"Location\"}, {\"340 Hay Street\": \"Location\"}, {\"VBN\": \"Organization\"}]', '[{\"Barrack Street\": \"Location\"}, {\"340 Hay Street\": \"Location\"}, {\"VBN\": \"Organization\"}]', '[{\"Barrack Street\": \"Location\"}, {\"340 Hay Street\": \"Location\"}, {\"VBN\": \"Organization\"}]', '[{\"Barrack Street\": \"Location\"}, {\"340 Hay Street\": \"Location\"}, {\"VBN\": \"Organization\"}]', '[{\"Barrack Street\": \"Location\"}, {\"340 Hay Street\": \"Location\"}, {\"VBN\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Barrack Street': 'Location', '340 Hay Street': 'Location', 'VBN': 'Organization'}, {'Barrack Street': 'Location', '340 Hay Street': 'Location', 'VBN': 'Organization'}, {'Barrack Street': 'Location', '340 Hay Street': 'Location', 'VBN': 'Organization'}, {'Barrack Street': 'Location', '340 Hay Street': 'Location', 'VBN': 'Organization'}, {'Barrack Street': 'Location', '340 Hay Street': 'Location', 'VBN': 'Organization'}]",
        "prediction": "{'Barrack Street': 'Location', '340 Hay Street': 'Location', 'VBN': 'Organization'}",
        "consistency_score": "{'entities': {('Barrack Street', 'Location'): 5, ('340 Hay Street', 'Location'): 5, ('VBN', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Barrack Street', 'Location'): 5, ('340 Hay Street', 'Location'): 5, ('VBN', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 842,
        "sentence": "He married Elizabeth Cronmiller in 1851 and then , in 1855 , Mary Harwisch , after his first wife died .",
        "label": "{'Mary Harwisch': 'Person', 'Elizabeth Cronmiller': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He married Elizabeth Cronmiller in 1851 and then , in 1855 , Mary Harwisch , after his first wife died .\nAnswer: ",
        "responses": "['[{\"Elizabeth Cronmiller\": \"Person\"}, {\"Mary Harwisch\": \"Person\"}]', '[{\"Elizabeth Cronmiller\": \"Person\"}, {\"Mary Harwisch\": \"Person\"}]', '[{\"Elizabeth Cronmiller\": \"Person\"}, {\"Mary Harwisch\": \"Person\"}]', '[{\"Elizabeth Cronmiller\": \"Person\"}, {\"Mary Harwisch\": \"Person\"}]', '[{\"Elizabeth Cronmiller\": \"Person\"}, {\"Mary Harwisch\": \"Person\"}]']",
        "prediction_per_consist": "[{'Elizabeth Cronmiller': 'Person', 'Mary Harwisch': 'Person'}, {'Elizabeth Cronmiller': 'Person', 'Mary Harwisch': 'Person'}, {'Elizabeth Cronmiller': 'Person', 'Mary Harwisch': 'Person'}, {'Elizabeth Cronmiller': 'Person', 'Mary Harwisch': 'Person'}, {'Elizabeth Cronmiller': 'Person', 'Mary Harwisch': 'Person'}]",
        "prediction": "{'Elizabeth Cronmiller': 'Person', 'Mary Harwisch': 'Person'}",
        "consistency_score": "{'entities': {('Elizabeth Cronmiller', 'Person'): 5, ('Mary Harwisch', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Elizabeth Cronmiller', 'Person'): 5, ('Mary Harwisch', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1318,
        "sentence": "Chamicuro is a critically endangered indigenous American language spoken by just a pair of aboriginal people in South America .",
        "label": "{'South America': 'Location', 'Chamicuro': 'Miscellaneous', 'American': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Chamicuro is a critically endangered indigenous American language spoken by just a pair of aboriginal people in South America .\nAnswer: ",
        "responses": "['[{\"Chamicuro\": \"Miscellaneous\"}, {\"American\": \"Location\"}, {\"South America\": \"Location\"}]', '[{\"Chamicuro\": \"Miscellaneous\"}, {\"American\": \"Location\"}, {\"South America\": \"Location\"}]', '[{\"Chamicuro\": \"Miscellaneous\"}, {\"American\": \"Location\"}, {\"South America\": \"Location\"}]', '[{\"Chamicuro\": \"Miscellaneous\"}, {\"American\": \"Location\"}, {\"South America\": \"Location\"}]', '[{\"Chamicuro\": \"Miscellaneous\"}, {\"American\": \"Location\"}, {\"South America\": \"Location\"}]']",
        "prediction_per_consist": "[{'Chamicuro': 'Miscellaneous', 'American': 'Location', 'South America': 'Location'}, {'Chamicuro': 'Miscellaneous', 'American': 'Location', 'South America': 'Location'}, {'Chamicuro': 'Miscellaneous', 'American': 'Location', 'South America': 'Location'}, {'Chamicuro': 'Miscellaneous', 'American': 'Location', 'South America': 'Location'}, {'Chamicuro': 'Miscellaneous', 'American': 'Location', 'South America': 'Location'}]",
        "prediction": "{'Chamicuro': 'Miscellaneous', 'American': 'Location', 'South America': 'Location'}",
        "consistency_score": "{'entities': {('Chamicuro', 'Miscellaneous'): 5, ('American', 'Location'): 5, ('South America', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Chamicuro', 'Miscellaneous'): 5, ('American', 'Location'): 5, ('South America', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1082,
        "sentence": "He won the Steele Prize from the American Mathematical Society in 1991 for his work in differential geometry .",
        "label": "{'American Mathematical Society': 'Organization', 'Steele Prize': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He won the Steele Prize from the American Mathematical Society in 1991 for his work in differential geometry .\nAnswer: ",
        "responses": "['[{\"Steele Prize\": \"Miscellaneous\"}, {\"American Mathematical Society\": \"Organization\"}]', '[{\"Steele Prize\": \"Miscellaneous\"}, {\"American Mathematical Society\": \"Organization\"}]', '[{\"Steele Prize\": \"Miscellaneous\"}, {\"American Mathematical Society\": \"Organization\"}]', '[{\"Steele Prize\": \"Miscellaneous\"}, {\"American Mathematical Society\": \"Organization\"}]', '[{\"Steele Prize\": \"Miscellaneous\"}, {\"American Mathematical Society\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Steele Prize': 'Miscellaneous', 'American Mathematical Society': 'Organization'}, {'Steele Prize': 'Miscellaneous', 'American Mathematical Society': 'Organization'}, {'Steele Prize': 'Miscellaneous', 'American Mathematical Society': 'Organization'}, {'Steele Prize': 'Miscellaneous', 'American Mathematical Society': 'Organization'}, {'Steele Prize': 'Miscellaneous', 'American Mathematical Society': 'Organization'}]",
        "prediction": "{'Steele Prize': 'Miscellaneous', 'American Mathematical Society': 'Organization'}",
        "consistency_score": "{'entities': {('Steele Prize', 'Miscellaneous'): 5, ('American Mathematical Society', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Steele Prize', 'Miscellaneous'): 5, ('American Mathematical Society', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 294,
        "sentence": "\" Leaders must be close enough to relate to others , but far enough ahead to motivate them . \"",
        "label": "{}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: \" Leaders must be close enough to relate to others , but far enough ahead to motivate them . \"\nAnswer: ",
        "responses": "['[{\"Leaders\": \"Person\"}]', '[{\"Leaders\": \"Person\"}]', '[{\"Leaders\": \"Person\"}]', '[{\"Leaders\": \"Person\"}]', '[{\"Leaders\": \"Person\"}]']",
        "prediction_per_consist": "[{'Leaders': 'Person'}, {'Leaders': 'Person'}, {'Leaders': 'Person'}, {'Leaders': 'Person'}, {'Leaders': 'Person'}]",
        "prediction": "{'Leaders': 'Person'}",
        "consistency_score": "{'entities': {('Leaders', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Leaders', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1391,
        "sentence": "Despite that , he was back in the ring two months later , winning a rematch with Scott LeDoux .",
        "label": "{'Scott LeDoux': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Despite that , he was back in the ring two months later , winning a rematch with Scott LeDoux .\nAnswer: ",
        "responses": "['[{\"Scott LeDoux\": \"Person\"}]', '[{\"Scott LeDoux\": \"Person\"}]', '[{\"Scott LeDoux\": \"Person\"}]', '[{\"Scott LeDoux\": \"Person\"}]', '[{\"Scott LeDoux\": \"Person\"}]']",
        "prediction_per_consist": "[{'Scott LeDoux': 'Person'}, {'Scott LeDoux': 'Person'}, {'Scott LeDoux': 'Person'}, {'Scott LeDoux': 'Person'}, {'Scott LeDoux': 'Person'}]",
        "prediction": "{'Scott LeDoux': 'Person'}",
        "consistency_score": "{'entities': {('Scott LeDoux', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Scott LeDoux', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 562,
        "sentence": "Milepost 7.5 : Water Tank Siding - passing siding adjacent to Hancock Pond .",
        "label": "{'Hancock Pond': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Milepost 7.5 : Water Tank Siding - passing siding adjacent to Hancock Pond .\nAnswer: ",
        "responses": "['[{\"Hancock Pond\": \"Location\"}]', '[{\"Hancock Pond\": \"Location\"}]', '[{\"Hancock Pond\": \"Location\"}]', '[{\"Hancock Pond\": \"Location\"}]', '[{\"Hancock Pond\": \"Location\"}]']",
        "prediction_per_consist": "[{'Hancock Pond': 'Location'}, {'Hancock Pond': 'Location'}, {'Hancock Pond': 'Location'}, {'Hancock Pond': 'Location'}, {'Hancock Pond': 'Location'}]",
        "prediction": "{'Hancock Pond': 'Location'}",
        "consistency_score": "{'entities': {('Hancock Pond', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Hancock Pond', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 165,
        "sentence": "Aabenraa County was established in 1920 following the reunification of Denmark and South Jutland following the Schleswig Plebiscites .",
        "label": "{'Schleswig Plebiscites': 'Miscellaneous', 'Aabenraa County': 'Location', 'South Jutland': 'Location', 'Denmark': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Aabenraa County was established in 1920 following the reunification of Denmark and South Jutland following the Schleswig Plebiscites .\nAnswer: ",
        "responses": "['[{\"Aabenraa County\": \"Location\"}, {\"Denmark\": \"Location\"}, {\"South Jutland\": \"Location\"}, {\"Schleswig Plebiscites\": \"Miscellaneous\"}]', '[{\"Aabenraa County\": \"Location\"}, {\"Denmark\": \"Location\"}, {\"South Jutland\": \"Location\"}, {\"Schleswig Plebiscites\": \"Miscellaneous\"}]', '[{\"Aabenraa County\": \"Location\"}, {\"Denmark\": \"Location\"}, {\"South Jutland\": \"Location\"}, {\"Schleswig Plebiscites\": \"Miscellaneous\"}]', '[{\"Aabenraa County\": \"Location\"}, {\"Denmark\": \"Location\"}, {\"South Jutland\": \"Location\"}, {\"Schleswig Plebiscites\": \"Miscellaneous\"}]', '[{\"Aabenraa County\": \"Location\"}, {\"Denmark\": \"Location\"}, {\"South Jutland\": \"Location\"}, {\"Schleswig Plebiscites\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Aabenraa County': 'Location', 'Denmark': 'Location', 'South Jutland': 'Location', 'Schleswig Plebiscites': 'Miscellaneous'}, {'Aabenraa County': 'Location', 'Denmark': 'Location', 'South Jutland': 'Location', 'Schleswig Plebiscites': 'Miscellaneous'}, {'Aabenraa County': 'Location', 'Denmark': 'Location', 'South Jutland': 'Location', 'Schleswig Plebiscites': 'Miscellaneous'}, {'Aabenraa County': 'Location', 'Denmark': 'Location', 'South Jutland': 'Location', 'Schleswig Plebiscites': 'Miscellaneous'}, {'Aabenraa County': 'Location', 'Denmark': 'Location', 'South Jutland': 'Location', 'Schleswig Plebiscites': 'Miscellaneous'}]",
        "prediction": "{'Aabenraa County': 'Location', 'Denmark': 'Location', 'South Jutland': 'Location', 'Schleswig Plebiscites': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Aabenraa County', 'Location'): 5, ('Denmark', 'Location'): 5, ('South Jutland', 'Location'): 5, ('Schleswig Plebiscites', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Aabenraa County', 'Location'): 5, ('Denmark', 'Location'): 5, ('South Jutland', 'Location'): 5, ('Schleswig Plebiscites', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 376,
        "sentence": "The National Training Centre is at Mouchak , Gazipur .",
        "label": "{'National Training Centre': 'Location', 'Mouchak': 'Location', 'Gazipur': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The National Training Centre is at Mouchak , Gazipur .\nAnswer: ",
        "responses": "['[{\"National Training Centre\": \"Organization\"}, {\"Mouchak\": \"Location\"}, {\"Gazipur\": \"Location\"}]', '[{\"National Training Centre\": \"Organization\"}, {\"Mouchak\": \"Location\"}, {\"Gazipur\": \"Location\"}]', '[{\"National Training Centre\": \"Organization\"}, {\"Mouchak\": \"Location\"}, {\"Gazipur\": \"Location\"}]', '[{\"National Training Centre\": \"Organization\"}, {\"Mouchak\": \"Location\"}, {\"Gazipur\": \"Location\"}]', '[{\"National Training Centre\": \"Organization\"}, {\"Mouchak\": \"Location\"}, {\"Gazipur\": \"Location\"}]']",
        "prediction_per_consist": "[{'National Training Centre': 'Organization', 'Mouchak': 'Location', 'Gazipur': 'Location'}, {'National Training Centre': 'Organization', 'Mouchak': 'Location', 'Gazipur': 'Location'}, {'National Training Centre': 'Organization', 'Mouchak': 'Location', 'Gazipur': 'Location'}, {'National Training Centre': 'Organization', 'Mouchak': 'Location', 'Gazipur': 'Location'}, {'National Training Centre': 'Organization', 'Mouchak': 'Location', 'Gazipur': 'Location'}]",
        "prediction": "{'National Training Centre': 'Organization', 'Mouchak': 'Location', 'Gazipur': 'Location'}",
        "consistency_score": "{'entities': {('National Training Centre', 'Organization'): 5, ('Mouchak', 'Location'): 5, ('Gazipur', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('National Training Centre', 'Organization'): 5, ('Mouchak', 'Location'): 5, ('Gazipur', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 252,
        "sentence": "He jointly founded the literary quarterly , Island , based in Tasmania where he has also lived .",
        "label": "{'Island': 'Organization', 'Tasmania': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He jointly founded the literary quarterly , Island , based in Tasmania where he has also lived .\nAnswer: ",
        "responses": "['[{\"Island\": \"Organization\"}, {\"Tasmania\": \"Location\"}]', '[{\"Island\": \"Organization\"}, {\"Tasmania\": \"Location\"}]', '[{\"Island\": \"Organization\"}, {\"Tasmania\": \"Location\"}]', '[{\"Island\": \"Organization\"}, {\"Tasmania\": \"Location\"}]', '[{\"Island\": \"Organization\"}, {\"Tasmania\": \"Location\"}]']",
        "prediction_per_consist": "[{'Island': 'Organization', 'Tasmania': 'Location'}, {'Island': 'Organization', 'Tasmania': 'Location'}, {'Island': 'Organization', 'Tasmania': 'Location'}, {'Island': 'Organization', 'Tasmania': 'Location'}, {'Island': 'Organization', 'Tasmania': 'Location'}]",
        "prediction": "{'Island': 'Organization', 'Tasmania': 'Location'}",
        "consistency_score": "{'entities': {('Island', 'Organization'): 5, ('Tasmania', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Island', 'Organization'): 5, ('Tasmania', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 645,
        "sentence": "Due to Citrone 's instructed lawyer , young up and coming poker player Brandon Chik , Citrone was allowed to pay far less than this amount .",
        "label": "{'Citrone': 'Person', 'Brandon Chik': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Due to Citrone 's instructed lawyer , young up and coming poker player Brandon Chik , Citrone was allowed to pay far less than this amount .\nAnswer: ",
        "responses": "['[{\"Citrone\": \"Person\"}, {\"Brandon Chik\": \"Person\"}]', '[{\"Citrone\": \"Person\"}, {\"Brandon Chik\": \"Person\"}]', '[{\"Citrone\": \"Person\"}, {\"Brandon Chik\": \"Person\"}]', '[{\"Citrone\": \"Person\"}, {\"Brandon Chik\": \"Person\"}]', '[{\"Citrone\": \"Person\"}, {\"Brandon Chik\": \"Person\"}]']",
        "prediction_per_consist": "[{'Citrone': 'Person', 'Brandon Chik': 'Person'}, {'Citrone': 'Person', 'Brandon Chik': 'Person'}, {'Citrone': 'Person', 'Brandon Chik': 'Person'}, {'Citrone': 'Person', 'Brandon Chik': 'Person'}, {'Citrone': 'Person', 'Brandon Chik': 'Person'}]",
        "prediction": "{'Citrone': 'Person', 'Brandon Chik': 'Person'}",
        "consistency_score": "{'entities': {('Citrone', 'Person'): 5, ('Brandon Chik', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Citrone', 'Person'): 5, ('Brandon Chik', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 535,
        "sentence": "The successful design of the Bridgton Hinkleys was subsequently repeated for the Monson Railroad and the Franklin and Megantic Railway .",
        "label": "{'Bridgton Hinkleys': 'Miscellaneous', 'Franklin and Megantic Railway': 'Location', 'Monson Railroad': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The successful design of the Bridgton Hinkleys was subsequently repeated for the Monson Railroad and the Franklin and Megantic Railway .\nAnswer: ",
        "responses": "['[{\"Bridgton Hinkleys\": \"Organization\"}, {\"Monson Railroad\": \"Organization\"}, {\"Franklin and Megantic Railway\": \"Organization\"}]', '[{\"Bridgton Hinkleys\": \"Organization\"}, {\"Monson Railroad\": \"Organization\"}, {\"Franklin and Megantic Railway\": \"Organization\"}]', '[{\"Bridgton Hinkleys\": \"Organization\"}, {\"Monson Railroad\": \"Organization\"}, {\"Franklin and Megantic Railway\": \"Organization\"}]', '[{\"Bridgton Hinkleys\": \"Organization\"}, {\"Monson Railroad\": \"Organization\"}, {\"Franklin and Megantic Railway\": \"Organization\"}]', '[{\"Bridgton Hinkleys\": \"Organization\"}, {\"Monson Railroad\": \"Organization\"}, {\"Franklin and Megantic Railway\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Bridgton Hinkleys': 'Organization', 'Monson Railroad': 'Organization', 'Franklin and Megantic Railway': 'Organization'}, {'Bridgton Hinkleys': 'Organization', 'Monson Railroad': 'Organization', 'Franklin and Megantic Railway': 'Organization'}, {'Bridgton Hinkleys': 'Organization', 'Monson Railroad': 'Organization', 'Franklin and Megantic Railway': 'Organization'}, {'Bridgton Hinkleys': 'Organization', 'Monson Railroad': 'Organization', 'Franklin and Megantic Railway': 'Organization'}, {'Bridgton Hinkleys': 'Organization', 'Monson Railroad': 'Organization', 'Franklin and Megantic Railway': 'Organization'}]",
        "prediction": "{'Bridgton Hinkleys': 'Organization', 'Monson Railroad': 'Organization', 'Franklin and Megantic Railway': 'Organization'}",
        "consistency_score": "{'entities': {('Bridgton Hinkleys', 'Organization'): 5, ('Monson Railroad', 'Organization'): 5, ('Franklin and Megantic Railway', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Bridgton Hinkleys', 'Organization'): 5, ('Monson Railroad', 'Organization'): 5, ('Franklin and Megantic Railway', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 239,
        "sentence": "The hockey club was adamant about refusing the trophy , while the directors of the MAAA decided to accept the trophy , considering it came from the Governor General of Canada .",
        "label": "{'Canada': 'Location', 'MAAA': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The hockey club was adamant about refusing the trophy , while the directors of the MAAA decided to accept the trophy , considering it came from the Governor General of Canada .\nAnswer: ",
        "responses": "['[{\"hockey club\": \"Organization\"}, {\"MAAA\": \"Organization\"}, {\"Governor General of Canada\": \"Person\"}]', '[{\"hockey club\": \"Organization\"}, {\"MAAA\": \"Organization\"}, {\"Governor General of Canada\": \"Person\"}]', '[{\"hockey club\": \"Organization\"}, {\"MAAA\": \"Organization\"}, {\"Governor General of Canada\": \"Person\"}]', '[{\"hockey club\": \"Organization\"}, {\"MAAA\": \"Organization\"}, {\"Governor General of Canada\": \"Person\"}]', '[{\"hockey club\": \"Organization\"}, {\"MAAA\": \"Organization\"}, {\"Governor General of Canada\": \"Person\"}]']",
        "prediction_per_consist": "[{'hockey club': 'Organization', 'MAAA': 'Organization', 'Governor General of Canada': 'Person'}, {'hockey club': 'Organization', 'MAAA': 'Organization', 'Governor General of Canada': 'Person'}, {'hockey club': 'Organization', 'MAAA': 'Organization', 'Governor General of Canada': 'Person'}, {'hockey club': 'Organization', 'MAAA': 'Organization', 'Governor General of Canada': 'Person'}, {'hockey club': 'Organization', 'MAAA': 'Organization', 'Governor General of Canada': 'Person'}]",
        "prediction": "{'hockey club': 'Organization', 'MAAA': 'Organization', 'Governor General of Canada': 'Person'}",
        "consistency_score": "{'entities': {('hockey club', 'Organization'): 5, ('MAAA', 'Organization'): 5, ('Governor General of Canada', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('hockey club', 'Organization'): 5, ('MAAA', 'Organization'): 5, ('Governor General of Canada', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 755,
        "sentence": "This corner is reportedly named after a local character who had earned the nickname of Tarzan and only wanted to give up his vegetable garden in the dunes if the track 's designers named a nearby corner after him .",
        "label": "{'Tarzan': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: This corner is reportedly named after a local character who had earned the nickname of Tarzan and only wanted to give up his vegetable garden in the dunes if the track 's designers named a nearby corner after him .\nAnswer: ",
        "responses": "['[{\"Tarzan\": \"Person\"}]', '[{\"Tarzan\": \"Person\"}]', '[{\"Tarzan\": \"Person\"}]', '[{\"Tarzan\": \"Person\"}]', '[{\"Tarzan\": \"Person\"}]']",
        "prediction_per_consist": "[{'Tarzan': 'Person'}, {'Tarzan': 'Person'}, {'Tarzan': 'Person'}, {'Tarzan': 'Person'}, {'Tarzan': 'Person'}]",
        "prediction": "{'Tarzan': 'Person'}",
        "consistency_score": "{'entities': {('Tarzan', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Tarzan', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 655,
        "sentence": "As a young pianist , he toured Europe performing in many capitals .",
        "label": "{'Europe': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: As a young pianist , he toured Europe performing in many capitals .\nAnswer: ",
        "responses": "['[{\"Europe\": \"Location\"}]', '[{\"Europe\": \"Location\"}]', '[{\"Europe\": \"Location\"}]', '[{\"Europe\": \"Location\"}]', '[{\"Europe\": \"Location\"}]']",
        "prediction_per_consist": "[{'Europe': 'Location'}, {'Europe': 'Location'}, {'Europe': 'Location'}, {'Europe': 'Location'}, {'Europe': 'Location'}]",
        "prediction": "{'Europe': 'Location'}",
        "consistency_score": "{'entities': {('Europe', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Europe', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 550,
        "sentence": "The rolling stock was moved to Massachusetts for another half-century of operation on the Edaville Railroad after the war .",
        "label": "{'Edaville Railroad': 'Location', 'Massachusetts': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The rolling stock was moved to Massachusetts for another half-century of operation on the Edaville Railroad after the war .\nAnswer: ",
        "responses": "['[{\"Massachusetts\": \"Location\"}, {\"Edaville Railroad\": \"Organization\"}]', '[{\"Massachusetts\": \"Location\"}, {\"Edaville Railroad\": \"Organization\"}]', '[{\"Massachusetts\": \"Location\"}, {\"Edaville Railroad\": \"Organization\"}]', '[{\"Massachusetts\": \"Location\"}, {\"Edaville Railroad\": \"Organization\"}]', '[{\"Massachusetts\": \"Location\"}, {\"Edaville Railroad\": \"Organization\"}]']",
        "prediction_per_consist": "[{'Massachusetts': 'Location', 'Edaville Railroad': 'Organization'}, {'Massachusetts': 'Location', 'Edaville Railroad': 'Organization'}, {'Massachusetts': 'Location', 'Edaville Railroad': 'Organization'}, {'Massachusetts': 'Location', 'Edaville Railroad': 'Organization'}, {'Massachusetts': 'Location', 'Edaville Railroad': 'Organization'}]",
        "prediction": "{'Massachusetts': 'Location', 'Edaville Railroad': 'Organization'}",
        "consistency_score": "{'entities': {('Massachusetts', 'Location'): 5, ('Edaville Railroad', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Massachusetts', 'Location'): 5, ('Edaville Railroad', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 422,
        "sentence": "He died in Hollywood , California .",
        "label": "{'Hollywood': 'Location', 'California': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: He died in Hollywood , California .\nAnswer: ",
        "responses": "['[{\"Hollywood\": \"Location\"}, {\"California\": \"Location\"}]', '[{\"Hollywood\": \"Location\"}, {\"California\": \"Location\"}]', '[{\"Hollywood\": \"Location\"}, {\"California\": \"Location\"}]', '[{\"Hollywood\": \"Location\"}, {\"California\": \"Location\"}]', '[{\"Hollywood\": \"Location\"}, {\"California\": \"Location\"}]']",
        "prediction_per_consist": "[{'Hollywood': 'Location', 'California': 'Location'}, {'Hollywood': 'Location', 'California': 'Location'}, {'Hollywood': 'Location', 'California': 'Location'}, {'Hollywood': 'Location', 'California': 'Location'}, {'Hollywood': 'Location', 'California': 'Location'}]",
        "prediction": "{'Hollywood': 'Location', 'California': 'Location'}",
        "consistency_score": "{'entities': {('Hollywood', 'Location'): 5, ('California', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Hollywood', 'Location'): 5, ('California', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 383,
        "sentence": "After leaving French Sudan in January 1899 , they ruthlessly subjected the native peoples , meeting little resistance .",
        "label": "{'French Sudan': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: After leaving French Sudan in January 1899 , they ruthlessly subjected the native peoples , meeting little resistance .\nAnswer: ",
        "responses": "['[{\"French Sudan\": \"Location\"}]', '[{\"French Sudan\": \"Location\"}]', '[{\"French Sudan\": \"Location\"}]', '[{\"French Sudan\": \"Location\"}]', '[{\"French Sudan\": \"Location\"}]']",
        "prediction_per_consist": "[{'French Sudan': 'Location'}, {'French Sudan': 'Location'}, {'French Sudan': 'Location'}, {'French Sudan': 'Location'}, {'French Sudan': 'Location'}]",
        "prediction": "{'French Sudan': 'Location'}",
        "consistency_score": "{'entities': {('French Sudan', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('French Sudan', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1235,
        "sentence": "Paul Joalland called \" one of the hottest moment of the campaign \" .",
        "label": "{'Paul Joalland': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Paul Joalland called \" one of the hottest moment of the campaign \" .\nAnswer: ",
        "responses": "['[{\"Paul Joalland\": \"Person\"}]', '[{\"Paul Joalland\": \"Person\"}]', '[{\"Paul Joalland\": \"Person\"}]', '[{\"Paul Joalland\": \"Person\"}]', '[{\"Paul Joalland\": \"Person\"}]']",
        "prediction_per_consist": "[{'Paul Joalland': 'Person'}, {'Paul Joalland': 'Person'}, {'Paul Joalland': 'Person'}, {'Paul Joalland': 'Person'}, {'Paul Joalland': 'Person'}]",
        "prediction": "{'Paul Joalland': 'Person'}",
        "consistency_score": "{'entities': {('Paul Joalland', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Paul Joalland', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1160,
        "sentence": "On May 2 , 2007 , the band announced that \" A Beautiful Lie \" had won and would be the next single .",
        "label": "{'A Beautiful Lie': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: On May 2 , 2007 , the band announced that \" A Beautiful Lie \" had won and would be the next single .\nAnswer: ",
        "responses": "['[{\"May 2\": \"Miscellaneous\"}, {\"2007\": \"Miscellaneous\"}, {\"A Beautiful Lie\": \"Miscellaneous\"}]', '[{\"May 2\": \"Miscellaneous\"}, {\"2007\": \"Miscellaneous\"}, {\"A Beautiful Lie\": \"Miscellaneous\"}]', '[{\"May 2\": \"Miscellaneous\"}, {\"2007\": \"Miscellaneous\"}, {\"A Beautiful Lie\": \"Miscellaneous\"}]', '[{\"May 2\": \"Miscellaneous\"}, {\"2007\": \"Miscellaneous\"}, {\"A Beautiful Lie\": \"Miscellaneous\"}]', '[{\"May 2\": \"Miscellaneous\"}, {\"2007\": \"Miscellaneous\"}, {\"A Beautiful Lie\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'May 2': 'Miscellaneous', '2007': 'Miscellaneous', 'A Beautiful Lie': 'Miscellaneous'}, {'May 2': 'Miscellaneous', '2007': 'Miscellaneous', 'A Beautiful Lie': 'Miscellaneous'}, {'May 2': 'Miscellaneous', '2007': 'Miscellaneous', 'A Beautiful Lie': 'Miscellaneous'}, {'May 2': 'Miscellaneous', '2007': 'Miscellaneous', 'A Beautiful Lie': 'Miscellaneous'}, {'May 2': 'Miscellaneous', '2007': 'Miscellaneous', 'A Beautiful Lie': 'Miscellaneous'}]",
        "prediction": "{'May 2': 'Miscellaneous', '2007': 'Miscellaneous', 'A Beautiful Lie': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('May 2', 'Miscellaneous'): 5, ('2007', 'Miscellaneous'): 5, ('A Beautiful Lie', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('May 2', 'Miscellaneous'): 5, ('2007', 'Miscellaneous'): 5, ('A Beautiful Lie', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 72,
        "sentence": "On April 29 , 2007 , the band performed at the Australian MTV Australia Video Music Awards , where they were nominated for three awards , winning \" Best Rock Video \" and \" Video of the Year \" for \" The Kill \" .",
        "label": "{'Australian MTV Australia Video Music Awards': 'Miscellaneous', 'The Kill': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: On April 29 , 2007 , the band performed at the Australian MTV Australia Video Music Awards , where they were nominated for three awards , winning \" Best Rock Video \" and \" Video of the Year \" for \" The Kill \" .\nAnswer: ",
        "responses": "['[{\"April 29\": \"Miscellaneous\"}, {\"2007\": \"Miscellaneous\"}, {\"Australian\": \"Location\"}, {\"MTV Australia Video Music Awards\": \"Organization\"}, {\"Best Rock Video\": \"Miscellaneous\"}, {\"Video of the Year\": \"Miscellaneous\"}, {\"The Kill\": \"Miscellaneous\"}]', '[{\"April 29\": \"Miscellaneous\"}, {\"2007\": \"Miscellaneous\"}, {\"Australian\": \"Location\"}, {\"MTV Australia Video Music Awards\": \"Organization\"}, {\"Best Rock Video\": \"Miscellaneous\"}, {\"Video of the Year\": \"Miscellaneous\"}, {\"The Kill\": \"Miscellaneous\"}]', '[{\"April 29\": \"Miscellaneous\"}, {\"2007\": \"Miscellaneous\"}, {\"Australian\": \"Location\"}, {\"MTV Australia Video Music Awards\": \"Organization\"}, {\"Best Rock Video\": \"Miscellaneous\"}, {\"Video of the Year\": \"Miscellaneous\"}, {\"The Kill\": \"Miscellaneous\"}]', '[{\"April 29\": \"Miscellaneous\"}, {\"2007\": \"Miscellaneous\"}, {\"Australian\": \"Location\"}, {\"MTV Australia Video Music Awards\": \"Organization\"}, {\"Best Rock Video\": \"Miscellaneous\"}, {\"Video of the Year\": \"Miscellaneous\"}, {\"The Kill\": \"Miscellaneous\"}]', '[{\"April 29\": \"Miscellaneous\"}, {\"2007\": \"Miscellaneous\"}, {\"Australian\": \"Location\"}, {\"MTV Australia Video Music Awards\": \"Organization\"}, {\"Best Rock Video\": \"Miscellaneous\"}, {\"Video of the Year\": \"Miscellaneous\"}, {\"The Kill\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'April 29': 'Miscellaneous', '2007': 'Miscellaneous', 'Australian': 'Location', 'MTV Australia Video Music Awards': 'Organization', 'Best Rock Video': 'Miscellaneous', 'Video of the Year': 'Miscellaneous', 'The Kill': 'Miscellaneous'}, {'April 29': 'Miscellaneous', '2007': 'Miscellaneous', 'Australian': 'Location', 'MTV Australia Video Music Awards': 'Organization', 'Best Rock Video': 'Miscellaneous', 'Video of the Year': 'Miscellaneous', 'The Kill': 'Miscellaneous'}, {'April 29': 'Miscellaneous', '2007': 'Miscellaneous', 'Australian': 'Location', 'MTV Australia Video Music Awards': 'Organization', 'Best Rock Video': 'Miscellaneous', 'Video of the Year': 'Miscellaneous', 'The Kill': 'Miscellaneous'}, {'April 29': 'Miscellaneous', '2007': 'Miscellaneous', 'Australian': 'Location', 'MTV Australia Video Music Awards': 'Organization', 'Best Rock Video': 'Miscellaneous', 'Video of the Year': 'Miscellaneous', 'The Kill': 'Miscellaneous'}, {'April 29': 'Miscellaneous', '2007': 'Miscellaneous', 'Australian': 'Location', 'MTV Australia Video Music Awards': 'Organization', 'Best Rock Video': 'Miscellaneous', 'Video of the Year': 'Miscellaneous', 'The Kill': 'Miscellaneous'}]",
        "prediction": "{'April 29': 'Miscellaneous', '2007': 'Miscellaneous', 'Australian': 'Location', 'MTV Australia Video Music Awards': 'Organization', 'Best Rock Video': 'Miscellaneous', 'Video of the Year': 'Miscellaneous', 'The Kill': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('April 29', 'Miscellaneous'): 5, ('2007', 'Miscellaneous'): 5, ('Australian', 'Location'): 5, ('MTV Australia Video Music Awards', 'Organization'): 5, ('Best Rock Video', 'Miscellaneous'): 5, ('Video of the Year', 'Miscellaneous'): 5, ('The Kill', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('April 29', 'Miscellaneous'): 5, ('2007', 'Miscellaneous'): 5, ('Australian', 'Location'): 5, ('MTV Australia Video Music Awards', 'Organization'): 5, ('Best Rock Video', 'Miscellaneous'): 5, ('Video of the Year', 'Miscellaneous'): 5, ('The Kill', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 423,
        "sentence": "Benny Lee Boynton ( born December 6 , 1898 ) was an American football player .",
        "label": "{'Benny Lee Boynton': 'Person', 'American': 'Miscellaneous'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Benny Lee Boynton ( born December 6 , 1898 ) was an American football player .\nAnswer: ",
        "responses": "['[{\"Benny Lee Boynton\": \"Person\"}, {\"American\": \"Miscellaneous\"}]', '[{\"Benny Lee Boynton\": \"Person\"}, {\"American\": \"Miscellaneous\"}]', '[{\"Benny Lee Boynton\": \"Person\"}, {\"American\": \"Miscellaneous\"}]', '[{\"Benny Lee Boynton\": \"Person\"}, {\"American\": \"Miscellaneous\"}]', '[{\"Benny Lee Boynton\": \"Person\"}, {\"American\": \"Miscellaneous\"}]']",
        "prediction_per_consist": "[{'Benny Lee Boynton': 'Person', 'American': 'Miscellaneous'}, {'Benny Lee Boynton': 'Person', 'American': 'Miscellaneous'}, {'Benny Lee Boynton': 'Person', 'American': 'Miscellaneous'}, {'Benny Lee Boynton': 'Person', 'American': 'Miscellaneous'}, {'Benny Lee Boynton': 'Person', 'American': 'Miscellaneous'}]",
        "prediction": "{'Benny Lee Boynton': 'Person', 'American': 'Miscellaneous'}",
        "consistency_score": "{'entities': {('Benny Lee Boynton', 'Person'): 5, ('American', 'Miscellaneous'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Benny Lee Boynton', 'Person'): 5, ('American', 'Miscellaneous'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 58,
        "sentence": "Things began to speed up quickly , and Matt Wachter later joined the band as bassist and keyboard player .",
        "label": "{'Matt Wachter': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Things began to speed up quickly , and Matt Wachter later joined the band as bassist and keyboard player .\nAnswer: ",
        "responses": "['[{\"Matt Wachter\": \"Person\"}]', '[{\"Matt Wachter\": \"Person\"}]', '[{\"Matt Wachter\": \"Person\"}]', '[{\"Matt Wachter\": \"Person\"}]', '[{\"Matt Wachter\": \"Person\"}]']",
        "prediction_per_consist": "[{'Matt Wachter': 'Person'}, {'Matt Wachter': 'Person'}, {'Matt Wachter': 'Person'}, {'Matt Wachter': 'Person'}, {'Matt Wachter': 'Person'}]",
        "prediction": "{'Matt Wachter': 'Person'}",
        "consistency_score": "{'entities': {('Matt Wachter', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Matt Wachter', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 520,
        "sentence": "Blue Winds Dancing ( 1938 ) is by Tom Whitecloud .",
        "label": "{'Blue Winds Dancing': 'Miscellaneous', 'Tom Whitecloud': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Blue Winds Dancing ( 1938 ) is by Tom Whitecloud .\nAnswer: ",
        "responses": "['[{\"Blue Winds Dancing\": \"Miscellaneous\"}, {\"Tom Whitecloud\": \"Person\"}]', '[{\"Blue Winds Dancing\": \"Miscellaneous\"}, {\"Tom Whitecloud\": \"Person\"}]', '[{\"Blue Winds Dancing\": \"Miscellaneous\"}, {\"Tom Whitecloud\": \"Person\"}]', '[{\"Blue Winds Dancing\": \"Miscellaneous\"}, {\"Tom Whitecloud\": \"Person\"}]', '[{\"Blue Winds Dancing\": \"Miscellaneous\"}, {\"Tom Whitecloud\": \"Person\"}]']",
        "prediction_per_consist": "[{'Blue Winds Dancing': 'Miscellaneous', 'Tom Whitecloud': 'Person'}, {'Blue Winds Dancing': 'Miscellaneous', 'Tom Whitecloud': 'Person'}, {'Blue Winds Dancing': 'Miscellaneous', 'Tom Whitecloud': 'Person'}, {'Blue Winds Dancing': 'Miscellaneous', 'Tom Whitecloud': 'Person'}, {'Blue Winds Dancing': 'Miscellaneous', 'Tom Whitecloud': 'Person'}]",
        "prediction": "{'Blue Winds Dancing': 'Miscellaneous', 'Tom Whitecloud': 'Person'}",
        "consistency_score": "{'entities': {('Blue Winds Dancing', 'Miscellaneous'): 5, ('Tom Whitecloud', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Blue Winds Dancing', 'Miscellaneous'): 5, ('Tom Whitecloud', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 587,
        "sentence": "BCIT provides the majority of apprenticeship training in the province of British Columbia .",
        "label": "{'BCIT': 'Organization', 'British Columbia': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: BCIT provides the majority of apprenticeship training in the province of British Columbia .\nAnswer: ",
        "responses": "['[{\"BCIT\": \"Organization\"}, {\"British Columbia\": \"Location\"}]', '[{\"BCIT\": \"Organization\"}, {\"British Columbia\": \"Location\"}]', '[{\"BCIT\": \"Organization\"}, {\"British Columbia\": \"Location\"}]', '[{\"BCIT\": \"Organization\"}, {\"British Columbia\": \"Location\"}]', '[{\"BCIT\": \"Organization\"}, {\"British Columbia\": \"Location\"}]']",
        "prediction_per_consist": "[{'BCIT': 'Organization', 'British Columbia': 'Location'}, {'BCIT': 'Organization', 'British Columbia': 'Location'}, {'BCIT': 'Organization', 'British Columbia': 'Location'}, {'BCIT': 'Organization', 'British Columbia': 'Location'}, {'BCIT': 'Organization', 'British Columbia': 'Location'}]",
        "prediction": "{'BCIT': 'Organization', 'British Columbia': 'Location'}",
        "consistency_score": "{'entities': {('BCIT', 'Organization'): 5, ('British Columbia', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('BCIT', 'Organization'): 5, ('British Columbia', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 599,
        "sentence": "Stan is against it at first ; however , Bullock says that he can get the promotion he wanted .",
        "label": "{'Bullock': 'Person', 'Stan': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Stan is against it at first ; however , Bullock says that he can get the promotion he wanted .\nAnswer: ",
        "responses": "['[{\"Stan\": \"Person\"}, {\"Bullock\": \"Person\"}]', '[{\"Stan\": \"Person\"}, {\"Bullock\": \"Person\"}]', '[{\"Stan\": \"Person\"}, {\"Bullock\": \"Person\"}]', '[{\"Stan\": \"Person\"}, {\"Bullock\": \"Person\"}]', '[{\"Stan\": \"Person\"}, {\"Bullock\": \"Person\"}]']",
        "prediction_per_consist": "[{'Stan': 'Person', 'Bullock': 'Person'}, {'Stan': 'Person', 'Bullock': 'Person'}, {'Stan': 'Person', 'Bullock': 'Person'}, {'Stan': 'Person', 'Bullock': 'Person'}, {'Stan': 'Person', 'Bullock': 'Person'}]",
        "prediction": "{'Stan': 'Person', 'Bullock': 'Person'}",
        "consistency_score": "{'entities': {('Stan', 'Person'): 5, ('Bullock', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Stan', 'Person'): 5, ('Bullock', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 320,
        "sentence": "The Australian League of Rights is a minor political organisation in Australia founded by Eric Butler with its basis in the economic theory of Social Credit expounded by C. H. Douglas .",
        "label": "{'Australia': 'Location', 'C. H. Douglas': 'Person', 'Australian League of Rights': 'Organization', 'Eric Butler': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: The Australian League of Rights is a minor political organisation in Australia founded by Eric Butler with its basis in the economic theory of Social Credit expounded by C. H. Douglas .\nAnswer: ",
        "responses": "['[{\"Australian League of Rights\": \"Organization\"}, {\"Eric Butler\": \"Person\"}, {\"Australia\": \"Location\"}, {\"Social Credit\": \"Miscellaneous\"}, {\"C. H. Douglas\": \"Person\"}]', '[{\"Australian League of Rights\": \"Organization\"}, {\"Eric Butler\": \"Person\"}, {\"Australia\": \"Location\"}, {\"Social Credit\": \"Miscellaneous\"}, {\"C. H. Douglas\": \"Person\"}]', '[{\"Australian League of Rights\": \"Organization\"}, {\"Eric Butler\": \"Person\"}, {\"Australia\": \"Location\"}, {\"Social Credit\": \"Miscellaneous\"}, {\"C. H. Douglas\": \"Person\"}]', '[{\"Australian League of Rights\": \"Organization\"}, {\"Eric Butler\": \"Person\"}, {\"Australia\": \"Location\"}, {\"Social Credit\": \"Miscellaneous\"}, {\"C. H. Douglas\": \"Person\"}]', '[{\"Australian League of Rights\": \"Organization\"}, {\"Eric Butler\": \"Person\"}, {\"Australia\": \"Location\"}, {\"Social Credit\": \"Miscellaneous\"}, {\"C. H. Douglas\": \"Person\"}]']",
        "prediction_per_consist": "[{'Australian League of Rights': 'Organization', 'Eric Butler': 'Person', 'Australia': 'Location', 'Social Credit': 'Miscellaneous', 'C. H. Douglas': 'Person'}, {'Australian League of Rights': 'Organization', 'Eric Butler': 'Person', 'Australia': 'Location', 'Social Credit': 'Miscellaneous', 'C. H. Douglas': 'Person'}, {'Australian League of Rights': 'Organization', 'Eric Butler': 'Person', 'Australia': 'Location', 'Social Credit': 'Miscellaneous', 'C. H. Douglas': 'Person'}, {'Australian League of Rights': 'Organization', 'Eric Butler': 'Person', 'Australia': 'Location', 'Social Credit': 'Miscellaneous', 'C. H. Douglas': 'Person'}, {'Australian League of Rights': 'Organization', 'Eric Butler': 'Person', 'Australia': 'Location', 'Social Credit': 'Miscellaneous', 'C. H. Douglas': 'Person'}]",
        "prediction": "{'Australian League of Rights': 'Organization', 'Eric Butler': 'Person', 'Australia': 'Location', 'Social Credit': 'Miscellaneous', 'C. H. Douglas': 'Person'}",
        "consistency_score": "{'entities': {('Australian League of Rights', 'Organization'): 5, ('Eric Butler', 'Person'): 5, ('Australia', 'Location'): 5, ('Social Credit', 'Miscellaneous'): 5, ('C. H. Douglas', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Australian League of Rights', 'Organization'): 5, ('Eric Butler', 'Person'): 5, ('Australia', 'Location'): 5, ('Social Credit', 'Miscellaneous'): 5, ('C. H. Douglas', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 405,
        "sentence": "Toastmasters have included Frank Catalano , Richard A. Lupoff , Frank N. Robinson , Raymond E. Feist and Laura Brodian Freas .",
        "label": "{'Laura Brodian Freas': 'Person', 'Frank Catalano': 'Person', 'Richard A. Lupoff': 'Person', 'Frank N. Robinson': 'Person', 'Raymond E. Feist': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Toastmasters have included Frank Catalano , Richard A. Lupoff , Frank N. Robinson , Raymond E. Feist and Laura Brodian Freas .\nAnswer: ",
        "responses": "['[{\"Toastmasters\": \"Organization\"}, {\"Frank Catalano\": \"Person\"}, {\"Richard A. Lupoff\": \"Person\"}, {\"Frank N. Robinson\": \"Person\"}, {\"Raymond E. Feist\": \"Person\"}, {\"Laura Brodian Freas\": \"Person\"}]', '[{\"Toastmasters\": \"Organization\"}, {\"Frank Catalano\": \"Person\"}, {\"Richard A. Lupoff\": \"Person\"}, {\"Frank N. Robinson\": \"Person\"}, {\"Raymond E. Feist\": \"Person\"}, {\"Laura Brodian Freas\": \"Person\"}]', '[{\"Toastmasters\": \"Organization\"}, {\"Frank Catalano\": \"Person\"}, {\"Richard A. Lupoff\": \"Person\"}, {\"Frank N. Robinson\": \"Person\"}, {\"Raymond E. Feist\": \"Person\"}, {\"Laura Brodian Freas\": \"Person\"}]', '[{\"Toastmasters\": \"Organization\"}, {\"Frank Catalano\": \"Person\"}, {\"Richard A. Lupoff\": \"Person\"}, {\"Frank N. Robinson\": \"Person\"}, {\"Raymond E. Feist\": \"Person\"}, {\"Laura Brodian Freas\": \"Person\"}]', '[{\"Toastmasters\": \"Organization\"}, {\"Frank Catalano\": \"Person\"}, {\"Richard A. Lupoff\": \"Person\"}, {\"Frank N. Robinson\": \"Person\"}, {\"Raymond E. Feist\": \"Person\"}, {\"Laura Brodian Freas\": \"Person\"}]']",
        "prediction_per_consist": "[{'Toastmasters': 'Organization', 'Frank Catalano': 'Person', 'Richard A. Lupoff': 'Person', 'Frank N. Robinson': 'Person', 'Raymond E. Feist': 'Person', 'Laura Brodian Freas': 'Person'}, {'Toastmasters': 'Organization', 'Frank Catalano': 'Person', 'Richard A. Lupoff': 'Person', 'Frank N. Robinson': 'Person', 'Raymond E. Feist': 'Person', 'Laura Brodian Freas': 'Person'}, {'Toastmasters': 'Organization', 'Frank Catalano': 'Person', 'Richard A. Lupoff': 'Person', 'Frank N. Robinson': 'Person', 'Raymond E. Feist': 'Person', 'Laura Brodian Freas': 'Person'}, {'Toastmasters': 'Organization', 'Frank Catalano': 'Person', 'Richard A. Lupoff': 'Person', 'Frank N. Robinson': 'Person', 'Raymond E. Feist': 'Person', 'Laura Brodian Freas': 'Person'}, {'Toastmasters': 'Organization', 'Frank Catalano': 'Person', 'Richard A. Lupoff': 'Person', 'Frank N. Robinson': 'Person', 'Raymond E. Feist': 'Person', 'Laura Brodian Freas': 'Person'}]",
        "prediction": "{'Toastmasters': 'Organization', 'Frank Catalano': 'Person', 'Richard A. Lupoff': 'Person', 'Frank N. Robinson': 'Person', 'Raymond E. Feist': 'Person', 'Laura Brodian Freas': 'Person'}",
        "consistency_score": "{'entities': {('Toastmasters', 'Organization'): 5, ('Frank Catalano', 'Person'): 5, ('Richard A. Lupoff', 'Person'): 5, ('Frank N. Robinson', 'Person'): 5, ('Raymond E. Feist', 'Person'): 5, ('Laura Brodian Freas', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Toastmasters', 'Organization'): 5, ('Frank Catalano', 'Person'): 5, ('Richard A. Lupoff', 'Person'): 5, ('Frank N. Robinson', 'Person'): 5, ('Raymond E. Feist', 'Person'): 5, ('Laura Brodian Freas', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 1323,
        "sentence": "SWAT arrived on the scene shortly thereafter , while a negotiator attempted to initiate contact with Penley .",
        "label": "{'Penley': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: SWAT arrived on the scene shortly thereafter , while a negotiator attempted to initiate contact with Penley .\nAnswer: ",
        "responses": "['[{\"SWAT\": \"Organization\"}, {\"Penley\": \"Person\"}]', '[{\"SWAT\": \"Organization\"}, {\"Penley\": \"Person\"}]', '[{\"SWAT\": \"Organization\"}, {\"Penley\": \"Person\"}]', '[{\"SWAT\": \"Organization\"}, {\"Penley\": \"Person\"}]', '[{\"SWAT\": \"Organization\"}, {\"Penley\": \"Person\"}]']",
        "prediction_per_consist": "[{'SWAT': 'Organization', 'Penley': 'Person'}, {'SWAT': 'Organization', 'Penley': 'Person'}, {'SWAT': 'Organization', 'Penley': 'Person'}, {'SWAT': 'Organization', 'Penley': 'Person'}, {'SWAT': 'Organization', 'Penley': 'Person'}]",
        "prediction": "{'SWAT': 'Organization', 'Penley': 'Person'}",
        "consistency_score": "{'entities': {('SWAT', 'Organization'): 5, ('Penley', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('SWAT', 'Organization'): 5, ('Penley', 'Person'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 351,
        "sentence": "Founded in 1934 as the International Badminton Federation with nine member nations ( Canada , Denmark , England , France , Ireland , Netherlands , New Zealand , Scotland and Wales ) , the BWF has since expanded to achieve international recognition .",
        "label": "{'International Badminton Federation': 'Organization', 'France': 'Location', 'BWF': 'Organization', 'New Zealand': 'Location', 'Netherlands': 'Location', 'Denmark': 'Location', 'Wales': 'Location', 'England': 'Location', 'Canada': 'Location', 'Scotland': 'Location', 'Ireland': 'Location'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: Founded in 1934 as the International Badminton Federation with nine member nations ( Canada , Denmark , England , France , Ireland , Netherlands , New Zealand , Scotland and Wales ) , the BWF has since expanded to achieve international recognition .\nAnswer: ",
        "responses": "['[\\n    {\"International Badminton Federation\": \"Organization\"},\\n    {\"Canada\": \"Location\"},\\n    {\"Denmark\": \"Location\"},\\n    {\"England\": \"Location\"},\\n    {\"France\": \"Location\"},\\n    {\"Ireland\": \"Location\"},\\n    {\"Netherlands\": \"Location\"},\\n    {\"New Zealand\": \"Location\"},\\n    {\"Scotland\": \"Location\"},\\n    {\"Wales\": \"Location\"},\\n    {\"BWF\": \"Organization\"}\\n]', '[{\"International Badminton Federation\": \"Organization\"}, {\"Canada\": \"Location\"}, {\"Denmark\": \"Location\"}, {\"England\": \"Location\"}, {\"France\": \"Location\"}, {\"Ireland\": \"Location\"}, {\"Netherlands\": \"Location\"}, {\"New Zealand\": \"Location\"}, {\"Scotland\": \"Location\"}, {\"Wales\": \"Location\"}, {\"BWF\": \"Organization\"}]', '[{\"International Badminton Federation\": \"Organization\"}, {\"Canada\": \"Location\"}, {\"Denmark\": \"Location\"}, {\"England\": \"Location\"}, {\"France\": \"Location\"}, {\"Ireland\": \"Location\"}, {\"Netherlands\": \"Location\"}, {\"New Zealand\": \"Location\"}, {\"Scotland\": \"Location\"}, {\"Wales\": \"Location\"}, {\"BWF\": \"Organization\"}]', '[{\"International Badminton Federation\": \"Organization\"}, {\"Canada\": \"Location\"}, {\"Denmark\": \"Location\"}, {\"England\": \"Location\"}, {\"France\": \"Location\"}, {\"Ireland\": \"Location\"}, {\"Netherlands\": \"Location\"}, {\"New Zealand\": \"Location\"}, {\"Scotland\": \"Location\"}, {\"Wales\": \"Location\"}, {\"BWF\": \"Organization\"}]', '[{\"International Badminton Federation\": \"Organization\"}, {\"Canada\": \"Location\"}, {\"Denmark\": \"Location\"}, {\"England\": \"Location\"}, {\"France\": \"Location\"}, {\"Ireland\": \"Location\"}, {\"Netherlands\": \"Location\"}, {\"New Zealand\": \"Location\"}, {\"Scotland\": \"Location\"}, {\"Wales\": \"Location\"}, {\"BWF\": \"Organization\"}]']",
        "prediction_per_consist": "[{'International Badminton Federation': 'Organization', 'Canada': 'Location', 'Denmark': 'Location', 'England': 'Location', 'France': 'Location', 'Ireland': 'Location', 'Netherlands': 'Location', 'New Zealand': 'Location', 'Scotland': 'Location', 'Wales': 'Location', 'BWF': 'Organization'}, {'International Badminton Federation': 'Organization', 'Canada': 'Location', 'Denmark': 'Location', 'England': 'Location', 'France': 'Location', 'Ireland': 'Location', 'Netherlands': 'Location', 'New Zealand': 'Location', 'Scotland': 'Location', 'Wales': 'Location', 'BWF': 'Organization'}, {'International Badminton Federation': 'Organization', 'Canada': 'Location', 'Denmark': 'Location', 'England': 'Location', 'France': 'Location', 'Ireland': 'Location', 'Netherlands': 'Location', 'New Zealand': 'Location', 'Scotland': 'Location', 'Wales': 'Location', 'BWF': 'Organization'}, {'International Badminton Federation': 'Organization', 'Canada': 'Location', 'Denmark': 'Location', 'England': 'Location', 'France': 'Location', 'Ireland': 'Location', 'Netherlands': 'Location', 'New Zealand': 'Location', 'Scotland': 'Location', 'Wales': 'Location', 'BWF': 'Organization'}, {'International Badminton Federation': 'Organization', 'Canada': 'Location', 'Denmark': 'Location', 'England': 'Location', 'France': 'Location', 'Ireland': 'Location', 'Netherlands': 'Location', 'New Zealand': 'Location', 'Scotland': 'Location', 'Wales': 'Location', 'BWF': 'Organization'}]",
        "prediction": "{'International Badminton Federation': 'Organization', 'Canada': 'Location', 'Denmark': 'Location', 'England': 'Location', 'France': 'Location', 'Ireland': 'Location', 'Netherlands': 'Location', 'New Zealand': 'Location', 'Scotland': 'Location', 'Wales': 'Location', 'BWF': 'Organization'}",
        "consistency_score": "{'entities': {('International Badminton Federation', 'Organization'): 5, ('Canada', 'Location'): 5, ('Denmark', 'Location'): 5, ('England', 'Location'): 5, ('France', 'Location'): 5, ('Ireland', 'Location'): 5, ('Netherlands', 'Location'): 5, ('New Zealand', 'Location'): 5, ('Scotland', 'Location'): 5, ('Wales', 'Location'): 5, ('BWF', 'Organization'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('International Badminton Federation', 'Organization'): 5, ('Canada', 'Location'): 5, ('Denmark', 'Location'): 5, ('England', 'Location'): 5, ('France', 'Location'): 5, ('Ireland', 'Location'): 5, ('Netherlands', 'Location'): 5, ('New Zealand', 'Location'): 5, ('Scotland', 'Location'): 5, ('Wales', 'Location'): 5, ('BWF', 'Organization'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 906,
        "sentence": "In 1980 , Budjana started Squirrel , his first jazz band , with his schoolmates in Surabaya .",
        "label": "{'Surabaya': 'Location', 'Budjana': 'Person', 'Squirrel': 'Organization'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: In 1980 , Budjana started Squirrel , his first jazz band , with his schoolmates in Surabaya .\nAnswer: ",
        "responses": "['[{\"Budjana\": \"Person\"}, {\"Squirrel\": \"Organization\"}, {\"Surabaya\": \"Location\"}]', '[{\"Budjana\": \"Person\"}, {\"Squirrel\": \"Organization\"}, {\"Surabaya\": \"Location\"}]', '[{\"Budjana\": \"Person\"}, {\"Squirrel\": \"Organization\"}, {\"Surabaya\": \"Location\"}]', '[{\"Budjana\": \"Person\"}, {\"Squirrel\": \"Organization\"}, {\"Surabaya\": \"Location\"}]', '[{\"Budjana\": \"Person\"}, {\"Squirrel\": \"Organization\"}, {\"Surabaya\": \"Location\"}]']",
        "prediction_per_consist": "[{'Budjana': 'Person', 'Squirrel': 'Organization', 'Surabaya': 'Location'}, {'Budjana': 'Person', 'Squirrel': 'Organization', 'Surabaya': 'Location'}, {'Budjana': 'Person', 'Squirrel': 'Organization', 'Surabaya': 'Location'}, {'Budjana': 'Person', 'Squirrel': 'Organization', 'Surabaya': 'Location'}, {'Budjana': 'Person', 'Squirrel': 'Organization', 'Surabaya': 'Location'}]",
        "prediction": "{'Budjana': 'Person', 'Squirrel': 'Organization', 'Surabaya': 'Location'}",
        "consistency_score": "{'entities': {('Budjana', 'Person'): 5, ('Squirrel', 'Organization'): 5, ('Surabaya', 'Location'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Budjana', 'Person'): 5, ('Squirrel', 'Organization'): 5, ('Surabaya', 'Location'): 5}, 'avg': 5.0}"
    },
    {
        "idx": 144,
        "sentence": "During the early nineties the station 's current affairs / talkback program hosted by Sattler , Maumill , Mabury , Peter Newman , Gary Carvolth and Rob Broadfield achieved considerable success in spite of the ever increasing level of racing broadcasts on the station .",
        "label": "{'Rob Broadfield': 'Person', 'Peter Newman': 'Person', 'Maumill': 'Person', 'Sattler': 'Person', 'Mabury': 'Person', 'Gary Carvolth': 'Person'}",
        "prompt": "Given entity label set: ['Organization', 'Person', 'Location', 'Miscellaneous']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{\"Entity Name\": \"Entity Label\"}]. If there is no entity in the text, return the following empty list: []. \nText: During the early nineties the station 's current affairs / talkback program hosted by Sattler , Maumill , Mabury , Peter Newman , Gary Carvolth and Rob Broadfield achieved considerable success in spite of the ever increasing level of racing broadcasts on the station .\nAnswer: ",
        "responses": "['[{\"Sattler\": \"Person\"}, {\"Maumill\": \"Person\"}, {\"Mabury\": \"Person\"}, {\"Peter Newman\": \"Person\"}, {\"Gary Carvolth\": \"Person\"}, {\"Rob Broadfield\": \"Person\"}]', '[{\"Sattler\": \"Person\"}, {\"Maumill\": \"Person\"}, {\"Mabury\": \"Person\"}, {\"Peter Newman\": \"Person\"}, {\"Gary Carvolth\": \"Person\"}, {\"Rob Broadfield\": \"Person\"}]', '[{\"Sattler\": \"Person\"}, {\"Maumill\": \"Person\"}, {\"Mabury\": \"Person\"}, {\"Peter Newman\": \"Person\"}, {\"Gary Carvolth\": \"Person\"}, {\"Rob Broadfield\": \"Person\"}]', '[{\"Sattler\": \"Person\"}, {\"Maumill\": \"Person\"}, {\"Mabury\": \"Person\"}, {\"Peter Newman\": \"Person\"}, {\"Gary Carvolth\": \"Person\"}, {\"Rob Broadfield\": \"Person\"}]', '[{\"Sattler\": \"Person\"}, {\"Maumill\": \"Person\"}, {\"Mabury\": \"Person\"}, {\"Peter Newman\": \"Person\"}, {\"Gary Carvolth\": \"Person\"}, {\"Rob Broadfield\": \"Person\"}]']",
        "prediction_per_consist": "[{'Sattler': 'Person', 'Maumill': 'Person', 'Mabury': 'Person', 'Peter Newman': 'Person', 'Gary Carvolth': 'Person', 'Rob Broadfield': 'Person'}, {'Sattler': 'Person', 'Maumill': 'Person', 'Mabury': 'Person', 'Peter Newman': 'Person', 'Gary Carvolth': 'Person', 'Rob Broadfield': 'Person'}, {'Sattler': 'Person', 'Maumill': 'Person', 'Mabury': 'Person', 'Peter Newman': 'Person', 'Gary Carvolth': 'Person', 'Rob Broadfield': 'Person'}, {'Sattler': 'Person', 'Maumill': 'Person', 'Mabury': 'Person', 'Peter Newman': 'Person', 'Gary Carvolth': 'Person', 'Rob Broadfield': 'Person'}, {'Sattler': 'Person', 'Maumill': 'Person', 'Mabury': 'Person', 'Peter Newman': 'Person', 'Gary Carvolth': 'Person', 'Rob Broadfield': 'Person'}]",
        "prediction": "{'Sattler': 'Person', 'Maumill': 'Person', 'Mabury': 'Person', 'Peter Newman': 'Person', 'Gary Carvolth': 'Person', 'Rob Broadfield': 'Person'}",
        "consistency_score": "{'entities': {('Sattler', 'Person'): 5, ('Maumill', 'Person'): 5, ('Mabury', 'Person'): 5, ('Peter Newman', 'Person'): 5, ('Gary Carvolth', 'Person'): 5, ('Rob Broadfield', 'Person'): 5}, 'avg': 5.0}",
        "consistency_score_SC_all_ans": "{'entities': {('Sattler', 'Person'): 5, ('Maumill', 'Person'): 5, ('Mabury', 'Person'): 5, ('Peter Newman', 'Person'): 5, ('Gary Carvolth', 'Person'): 5, ('Rob Broadfield', 'Person'): 5}, 'avg': 5.0}"
    }
]