{'idx': 0, 'sentence': 'UK Edition came with the OSC-DIS video , and most of the tracks were re-engineered .', 'label': "{'OSC-DIS': 'Miscellaneous', 'UK': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "UK Edition"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "OSC-DIS"\n) \n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'UK Edition': 'Organization', 'OSC-DIS': 'Miscellaneous'}}
{'idx': 1, 'sentence': "During this time Couch 's Division was detached from the Army and was occupied with guarding the fords on the Potomac .", 'label': '{\'Potomac\': \'Location\', "Couch \'s Division": \'Organization\', \'Army\': \'Organization\'}', 'response': 'Organization_entity1 = Organization(\n    name = "Couch \'s Division"\n)\nLocation_entity1 = Location(\n    name = "Army"\n)\nLocation_entity2 = Location(\n    name = "Potomac"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {"Couch 's Division": 'Organization', 'Army': 'Location', 'Potomac': 'Location'}}
{'idx': 2, 'sentence': 'At the Battle of Gettysburg in July , it helped defend the left flank of the Union army .', 'label': "{'Union': 'Organization', 'Battle of Gettysburg': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Gettysburg"\n)\nOrganization_entity1 = Organization(\n    name = "Union army"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Gettysburg': 'Location', 'Union army': 'Organization'}}
{'idx': 3, 'sentence': "The 139th supported Sheridan in the Appomattox Campaign and fought in the Battle of Sayler 's Creek .", 'label': '{\'139th\': \'Organization\', \'Appomattox Campaign\': \'Miscellaneous\', "Battle of Sayler \'s Creek": \'Miscellaneous\', \'Sheridan\': \'Person\'}', 'response': 'Organization_entity1 = Organization(\n    name = "139th"\n)\nPerson_entity1 = Person(\n    name = "Sheridan"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Appomattox Campaign"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Battle of Sayler\'s Creek"\n)', 'prediction': {'139th': 'Organization', 'Sheridan': 'Person', 'Appomattox Campaign': 'Miscellaneous', "Battle of Sayler's Creek": 'Miscellaneous'}}
{'idx': 4, 'sentence': 'Two cars were demolished and the two following cars were telescoped .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "cars"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "cars"\n)', 'prediction': {'cars': 'Miscellaneous'}}
{'idx': 5, 'sentence': 'The second car of the West Jersey train was also carried into the ditch , the third and fourth cars being telescoped .', 'label': "{'West Jersey': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "West Jersey train"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'West Jersey train': 'Organization'}}
{'idx': 6, 'sentence': 'As onlookers watched through the night , the mangled and burned bodies of the dead were carried from the wreckage which trapped them and laid side by side on the gravel bank near the track , with no other covering than the few newspapers gathered from the passengers .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "track"\n)\n\nMiscellaneous_entity1 = Miscellaneous(\n    name = "newspapers"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'track': 'Location', 'newspapers': 'Miscellaneous'}}
{'idx': 7, 'sentence': 'James W. Hoyt , Secretary of the New Jersey Department of Public Safety , immediately upon learning of the extent of the accident , telegraphed for the Philadelphia Medical Emergency Corps , fifteen of whom responded , and hurried to Atlantic City on a special train which left Philadelphia at 10:45 pm .', 'label': "{'Philadelphia': 'Location', 'Atlantic City': 'Location', 'James W. Hoyt': 'Person', 'Philadelphia Medical Emergency Corps': 'Organization', 'New Jersey Department of Public Safety': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "James W. Hoyt"\n)\nOrganization_entity1 = Organization(\n    name = "New Jersey Department of Public Safety"\n)\nOrganization_entity2 = Organization(\n    name = "Philadelphia Medical Emergency Corps"\n)\nLocation_entity1 = Location(\n    name = "Atlantic City"\n)\nLocation_entity2 = Location(\n    name = "Philadelphia"\n)', 'prediction': {'James W. Hoyt': 'Person', 'New Jersey Department of Public Safety': 'Organization', 'Philadelphia Medical Emergency Corps': 'Organization', 'Atlantic City': 'Location', 'Philadelphia': 'Location'}}
{'idx': 8, 'sentence': 'He went directly into the block tower and questioned operator George F. Hauser. Houser told him that he thought the excursion train had time to cross the tracks of the Reading before the express got there and he set the " clear " signal for the West Jersey train .', 'label': "{'West Jersey': 'Location', 'George F. Hauser. Houser': 'Person', 'Reading': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "George F. Hauser"\n)\nOrganization_entity1 = Organization(\n    name = "Reading"\n)\nOrganization_entity2 = Organization(\n    name = "West Jersey"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'George F. Hauser': 'Person', 'Reading': 'Organization', 'West Jersey': 'Organization'}}
{'idx': 9, 'sentence': 'Before Hauser could make a further explanation to the coroner he received an order from the railroad officials to say nothing .', 'label': "{'Hauser': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Hauser"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "coroner"\n)\nOrganization_entity1 = Organization(\n    name = "railroad officials"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Hauser': 'Person', 'coroner': 'Miscellaneous', 'railroad officials': 'Organization'}}
{'idx': 10, 'sentence': 'His reputation was that of an experienced engineer and a man of exceptionally high moral character , and not of a reckless or careless disposition .', 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "engineer"\n)\nPerson_entity2 = Person(\n    name = "man"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "reputation"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "moral character"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "disposition"\n)', 'prediction': {'engineer': 'Person', 'man': 'Person', 'reputation': 'Miscellaneous', 'moral character': 'Miscellaneous', 'disposition': 'Miscellaneous'}}
{'idx': 11, 'sentence': 'Three others found that " the cause of the collision was the failure of Edward Farr , engineer of Train No. 23 , to give heed in time to the semaphore signals and crossing under the rules. .. the tower man , George F. Hauser , may have used poor judgment in his estimate of the distance away of the Atlantic City Railroad train when he gave the white boards to the West Jersey and Seashore Excursion Train No . 700 . "', 'label': "{'Edward Farr': 'Person', 'George F. Hauser': 'Person', 'Seashore': 'Location', 'West Jersey': 'Location', 'Atlantic City Railroad': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Edward Farr"\n)\nOrganization_entity1 = Organization(\n    name = "Atlantic City Railroad"\n)\nOrganization_entity2 = Organization(\n    name = "West Jersey and Seashore Excursion Train"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Train No. 23"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Train No. 700"\n)\nPerson_entity2 = Person(\n    name = "George F. Hauser"\n)', 'prediction': {'Edward Farr': 'Person', 'Atlantic City Railroad': 'Organization', 'West Jersey and Seashore Excursion Train': 'Organization', 'Train No. 23': 'Miscellaneous', 'Train No. 700': 'Miscellaneous', 'George F. Hauser': 'Person'}}
{'idx': 12, 'sentence': 'They participated in the GMAC Bowl , losing to Tulsa 63-7 .', 'label': "{'GMAC Bowl': 'Miscellaneous', 'Tulsa': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "GMAC Bowl"\n)\nLocation_entity1 = Location(\n    name = "Tulsa"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'GMAC Bowl': 'Organization', 'Tulsa': 'Location'}}
{'idx': 13, 'sentence': 'Overall , 53 lettermen are returning from the 2006 team ( 25 on offense , 28 on defense and 0 on special teams ) .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "2006"\n)\nOrganization_entity1 = Organization(\n    name = "team"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "25"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "28"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "0"\n)', 'prediction': {'2006': 'Miscellaneous', 'team': 'Organization', '25': 'Miscellaneous', '28': 'Miscellaneous', '0': 'Miscellaneous'}}
{'idx': 14, 'sentence': '30 Seconds to Mars ( or Thirty Seconds to Mars ) is an alternative rock band from Los Angeles , California , featuring Jared Leto , Shannon Leto , Tomo Milicevic .', 'label': "{'Shannon Leto': 'Person', 'Tomo Milicevic': 'Person', 'Los Angeles': 'Location', 'Jared Leto': 'Person', '30 Seconds to Mars': 'Organization', 'Thirty Seconds to Mars': 'Organization', 'California': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "30 Seconds to Mars"\n)\nLocation_entity1 = Location(\n    name = "Los Angeles"\n)\nLocation_entity2 = Location(\n    name = "California"\n)\nPerson_entity1 = Person(\n    name = "Jared Leto"\n)\nPerson_entity2 = Person(\n    name = "Shannon Leto"\n)\nPerson_entity3 = Person(\n    name = "Tomo Milicevic"\n)', 'prediction': {'30 Seconds to Mars': 'Organization', 'Los Angeles': 'Location', 'California': 'Location', 'Jared Leto': 'Person', 'Shannon Leto': 'Person', 'Tomo Milicevic': 'Person'}}
{'idx': 15, 'sentence': 'Their sophomore album , A Beautiful Lie , was released on August 30 , 2005 .', 'label': "{'A Beautiful Lie': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Their sophomore album"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "A Beautiful Lie"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "August 30"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "2005"\n)', 'prediction': {'Their sophomore album': 'Organization', 'A Beautiful Lie': 'Miscellaneous', 'August 30': 'Miscellaneous', '2005': 'Miscellaneous'}}
{'idx': 16, 'sentence': 'The second nomination was for Best Rock Video ; however , they lost to AFI \'s " Miss Murder " .', 'label': "{'AFI': 'Organization', 'Miss Murder': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "AFI"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Best Rock Video"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Miss Murder"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'AFI': 'Organization', 'Best Rock Video': 'Miscellaneous', 'Miss Murder': 'Miscellaneous'}}
{'idx': 17, 'sentence': '" Jared and Shannon put together this thing called Environmentor which is illustrating ways --- alternatives --- to kind of clean up some of the mess we leave behind .', 'label': "{'Jared': 'Person', 'Shannon': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Jared"\n)\nPerson_entity2 = Person(\n    name = "Shannon"\n)\nOrganization_entity1 = Organization(\n    name = "Environmentor"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Jared': 'Person', 'Shannon': 'Person', 'Environmentor': 'Organization'}}
{'idx': 18, 'sentence': 'They are also scheduled to play Roskilde , Rock am Ring , Pinkpop , Give It A Name Festival and Download .', 'label': "{'Rock am Ring': 'Miscellaneous', 'Pinkpop': 'Miscellaneous', 'Roskilde': 'Miscellaneous', 'Download': 'Miscellaneous', 'Give It A Name Festival': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Roskilde"\n)\nOrganization_entity1 = Organization(\n    name = "Rock am Ring"\n)\nOrganization_entity2 = Organization(\n    name = "Pinkpop"\n)\nOrganization_entity3 = Organization(\n    name = "Give It A Name Festival"\n)\nOrganization_entity4 = Organization(\n    name = "Download"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Roskilde': 'Location', 'Rock am Ring': 'Organization', 'Pinkpop': 'Organization', 'Give It A Name Festival': 'Organization', 'Download': 'Organization'}}
{'idx': 19, 'sentence': 'On August 8th , 2007 , Kerrang ! announced that 30 Seconds to Mars has been nominated for two categories of the Kerrang !', 'label': "{'Kerrang !': 'Organization', '30 Seconds to Mars': 'Organization'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "August 8th"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2007"\n)\nOrganization_entity1 = Organization(\n    name = "Kerrang"\n)\nOrganization_entity2 = Organization(\n    name = "30 Seconds to Mars"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "two categories"\n)\nOrganization_entity3 = Organization(\n    name = "Kerrang"\n)', 'prediction': {'August 8th': 'Miscellaneous', '2007': 'Miscellaneous', 'Kerrang': 'Organization', '30 Seconds to Mars': 'Organization', 'two categories': 'Miscellaneous'}}
{'idx': 20, 'sentence': 'They beat out Korn and had amassed over 7 million votes .', 'label': "{'Korn': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Korn"\n)', 'prediction': {'Korn': 'Organization'}}
{'idx': 21, 'sentence': 'It is also the name of one of their songs in the album 30 Seconds to Mars .', 'label': "{'30 Seconds to Mars': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "30 Seconds to Mars"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'30 Seconds to Mars': 'Organization'}}
{'idx': 22, 'sentence': 'Another track featured on certain imported 30 Seconds to Mars titles is " Anarchy in Tokyo " , a song that was recorded during the process of their self-titled debut .', 'label': "{'30 Seconds to Mars': 'Organization', 'Anarchy in Tokyo': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "30 Seconds to Mars"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Anarchy in Tokyo"\n)', 'prediction': {'30 Seconds to Mars': 'Organization', 'Anarchy in Tokyo': 'Miscellaneous'}}
{'idx': 23, 'sentence': 'Also made available are the demo versions of " Buddha for Mary " and " 93 Million Miles " ; the latter originally had lyrics referring to the band Deadsy , whose members Dr. Nner and P. Exeter Blue I provided extra instrumentation on several tracks , but the lyrics were changed after the two bands were involved in a small feud .', 'label': "{'Buddha for Mary': 'Miscellaneous', '93 Million Miles': 'Miscellaneous', 'Dr. Nner': 'Person', 'P. Exeter Blue I': 'Person', 'Deadsy': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Deadsy"\n)\nPerson_entity1 = Person(\n    name = "Dr. Nner"\n)\nPerson_entity2 = Person(\n    name = "P. Exeter Blue I"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Deadsy': 'Organization', 'Dr. Nner': 'Person', 'P. Exeter Blue I': 'Person'}}
{'idx': 24, 'sentence': 'The 38th NAACP Image Awards honored the best in film , television and music for 2006 .', 'label': "{'38th NAACP Image Awards': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "38th"\n)\nOrganization_entity1 = Organization(\n    name = "NAACP Image Awards"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2006"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'38th': 'Miscellaneous', 'NAACP Image Awards': 'Organization', '2006': 'Miscellaneous'}}
{'idx': 25, 'sentence': 'The following recipients received distinguished awards by the NAACP for their contributions to arts , civil rights , news , and humanitarian efforts .', 'label': "{'NAACP': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "NAACP"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'NAACP': 'Organization'}}
{'idx': 26, 'sentence': 'Its units supported the Allied invasion of Normandy ( June 1944 ) ; the Allied ground troops during the Battle of the Bulge ( December 1944 through January 1945 ) ; the Allied airborne attack on Holland ( Operation Market Garden , September 1944 ) ; the defense of the Remagen bridgehead against German air attacks ( March 1945 ) ; and the airborne attack across the Rhine ( March 1945 ) .', 'label': "{'Battle of the Bulge': 'Miscellaneous', 'Allied': 'Organization', 'German': 'Miscellaneous', 'Holland': 'Location', 'Remagen': 'Location', 'Operation Market Garden': 'Miscellaneous', 'Rhine': 'Location', 'Normandy': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Allied"\n)\nLocation_entity1 = Location(\n    name = "Normandy"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "June 1944"\n)\nOrganization_entity2 = Organization(\n    name = "Allied"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Battle of the Bulge"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "December 1944"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "January 1945"\n)\nOrganization_entity3 = Organization(\n    name = "Allied"\n)\nLocation_entity2 = Location(\n    name = "Holland"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "Operation Market Garden"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "September 1944"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "Remagen bridgehead"\n)\nMiscellaneous_entity8 = Miscellaneous(\n    name = "March 1945"\n)\nMiscellaneous_entity9 = Miscellaneous(\n    name = "German"\n)\nMiscellaneous_entity10 = Miscellaneous(\n    name = "March 1945"\n)\nLocation_entity3 = Location(\n    name = "Rhine"\n)', 'prediction': {'Allied': 'Organization', 'Normandy': 'Location', 'June 1944': 'Miscellaneous', 'Battle of the Bulge': 'Miscellaneous', 'December 1944': 'Miscellaneous', 'January 1945': 'Miscellaneous', 'Holland': 'Location', 'Operation Market Garden': 'Miscellaneous', 'September 1944': 'Miscellaneous', 'Remagen bridgehead': 'Miscellaneous', 'March 1945': 'Miscellaneous', 'German': 'Miscellaneous', 'Rhine': 'Location'}}
{'idx': 27, 'sentence': 'Assigned or attached units of the division participated in numerous exercises with the Spanish Air Defense Command , and in some instances , with the U.S. Sixth Fleet .', 'label': "{'U.S. Sixth Fleet': 'Organization', 'Spanish Air Defense Command': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Spanish Air Defense Command"\n)\nOrganization_entity2 = Organization(\n    name = "U.S. Sixth Fleet"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Spanish Air Defense Command': 'Organization', 'U.S. Sixth Fleet': 'Organization'}}
{'idx': 28, 'sentence': 'Redesignated 65 Air Division ( Defense ) on 17 April 1952 .', 'label': "{'65 Air Division ( Defense )': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "65 Air Division"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Defense"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "17 April 1952"\n)', 'prediction': {'65 Air Division': 'Organization', 'Defense': 'Miscellaneous', '17 April 1952': 'Miscellaneous'}}
{'idx': 29, 'sentence': 'Inactivated on 30 June 1991 .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "30 June 1991"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'30 June 1991': 'Miscellaneous'}}
{'idx': 30, 'sentence': 'Iceland Air Defense Force , 24 April 1952 -- 8 March 1954 .', 'label': "{'Iceland Air Defense Force': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Iceland Air Defense Force"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "24 April 1952"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "8 March 1954"\n)', 'prediction': {'Iceland Air Defense Force': 'Organization', '24 April 1952': 'Miscellaneous', '8 March 1954': 'Miscellaneous'}}
{'idx': 31, 'sentence': 'Sembach Air Base , Germany , 1 June 1985 ; Lindsey Air Station , Germany , 1 October 1987 -- 30 June 1991 .', 'label': "{'Germany': 'Location', 'Sembach Air Base': 'Organization', 'Lindsey Air Station': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "Sembach Air Base"\n)\nLocation_entity2 = Location(\n    name = "Germany"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1 June 1985"\n)\nLocation_entity3 = Location(\n    name = "Lindsey Air Station"\n)\nLocation_entity4 = Location(\n    name = "Germany"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1 October 1987"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "30 June 1991"\n)', 'prediction': {'Sembach Air Base': 'Location', 'Germany': 'Location', '1 June 1985': 'Miscellaneous', 'Lindsey Air Station': 'Location', '1 October 1987': 'Miscellaneous', '30 June 1991': 'Miscellaneous'}}
{'idx': 32, 'sentence': 'Curry , 29 July 1945 -- unkn .', 'label': "{'Curry': 'Person'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Curry"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "29 July 1945"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Curry': 'Miscellaneous', '29 July 1945': 'Miscellaneous'}}
{'idx': 33, 'sentence': "In 1963 the Victorian Broadcasting Network purchased Nicholson 's and sold the electrical division of the organisation to Vox Adeon .", 'label': '{"Nicholson \'s": \'Organization\', \'Vox Adeon\': \'Organization\', \'Victorian Broadcasting Network\': \'Organization\'}', 'response': 'Organization_entity1 = Organization(\n    name = "Victorian Broadcasting Network"\n)\nOrganization_entity2 = Organization(\n    name = "Nicholson\'s"\n)\nOrganization_entity3 = Organization(\n    name = "Vox Adeon"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Victorian Broadcasting Network': 'Organization', "Nicholson's": 'Organization', 'Vox Adeon': 'Organization'}}
{'idx': 34, 'sentence': 'The limited hours of broadcasting 69 years ago have gradually been increased to a 24 hour , seven day a week service .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "69 years ago"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "24 hour"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "seven day"\n)\nOrganization_entity1 = Organization(\n    name = "service"\n)', 'prediction': {'69 years ago': 'Miscellaneous', '24 hour': 'Miscellaneous', 'seven day': 'Miscellaneous', 'service': 'Organization'}}
{'idx': 35, 'sentence': 'In 1987 the TAB purchased 6PR to secure the future of race broadcasts in Western Australia and races were broadcast across the station during popular talkback programs .', 'label': "{'TAB': 'Organization', 'Western Australia': 'Location', '6PR': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "TAB"\n)\nOrganization_entity2 = Organization(\n    name = "6PR"\n)\nLocation_entity1 = Location(\n    name = "Western Australia"\n)', 'prediction': {'TAB': 'Organization', '6PR': 'Organization', 'Western Australia': 'Location'}}
{'idx': 36, 'sentence': "During the Australian Rules Football Season 882 6PR is Perth 's Football Leader .", 'label': "{'882 6PR': 'Organization', 'Perth': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Australian Rules Football Season"\n)\nOrganization_entity2 = Organization(\n    name = "6PR"\n)\nLocation_entity1 = Location(\n    name = "Perth"\n)', 'prediction': {'Australian Rules Football Season': 'Organization', '6PR': 'Organization', 'Perth': 'Location'}}
{'idx': 37, 'sentence': 'Peter Vlahos is based in the 6PR Studio while Karl Langdon & Harvey Deegan base themselves at different matches .', 'label': "{'Harvey Deegan': 'Person', '6PR': 'Organization', 'Peter Vlahos': 'Person', 'Karl Langdon': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Peter Vlahos"\n)\nOrganization_entity1 = Organization(\n    name = "6PR Studio"\n)\nPerson_entity2 = Person(\n    name = "Karl Langdon"\n)\nPerson_entity3 = Person(\n    name = "Harvey Deegan"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Peter Vlahos': 'Person', '6PR Studio': 'Organization', 'Karl Langdon': 'Person', 'Harvey Deegan': 'Person'}}
{'idx': 38, 'sentence': 'As of the 2007/2008 A-League season 6PR will again broadcast every Perth Glory Home & Away fixture .', 'label': "{'6PR': 'Organization', 'Perth Glory': 'Organization', '2007/2008 A-League': 'Organization'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "2007/2008 A-League season"\n)\nOrganization_entity1 = Organization(\n    name = "6PR"\n)\nOrganization_entity2 = Organization(\n    name = "Perth Glory"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'2007/2008 A-League season': 'Miscellaneous', '6PR': 'Organization', 'Perth Glory': 'Organization'}}
{'idx': 39, 'sentence': '883JIA FM , is a Chinese radio station of SAFRA Radio in Singapore .', 'label': "{'Singapore': 'Location', 'Chinese': 'Miscellaneous', 'SAFRA Radio': 'Organization', '883JIA FM': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "883JIA FM"\n)\nOrganization_entity2 = Organization(\n    name = "SAFRA Radio"\n)\nLocation_entity1 = Location(\n    name = "Singapore"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'883JIA FM': 'Organization', 'SAFRA Radio': 'Organization', 'Singapore': 'Location'}}
{'idx': 40, 'sentence': '883Jia FM Official Website', 'label': "{'883Jia FM': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "883Jia FM"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'883Jia FM': 'Organization'}}
{'idx': 41, 'sentence': 'Both were transferred from Kreis Flensburg with the establishment of the current Danish-German border .', 'label': "{'Danish-German': 'Location', 'Kreis Flensburg': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Kreis Flensburg"\n)\nLocation_entity2 = Location(\n    name = "Danish-German border"\n)', 'prediction': {'Kreis Flensburg': 'Location', 'Danish-German border': 'Location'}}
{'idx': 42, 'sentence': 'He is known to have composed three chansons de geste as well as the romance Cleomadé .', 'label': "{'Cleomadé': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "chansons de geste"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "romance Cleomadé"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'chansons de geste': 'Miscellaneous', 'romance Cleomadé': 'Miscellaneous'}}
{'idx': 43, 'sentence': 'Despite being born in the West African country of the Cape Verde islands he plays for the Swiss Under-19s side .', 'label': "{'West African': 'Miscellaneous', 'Cape Verde islands': 'Location', 'Swiss': 'Miscellaneous', 'Under-19s': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "Cape Verde islands"\n)\nOrganization_entity1 = Organization(\n    name = "Swiss Under-19s"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Cape Verde islands': 'Location', 'Swiss Under-19s': 'Organization'}}
{'idx': 44, 'sentence': 'Born on April 16 , 1819 in Gostkócity near Łęczyca in a Polish szlachta family of Lipscy to Jacob Lipski and Marjania Zaluska , she spent her life in the Prussian partition , including the Grand Duchy of Poznań .', 'label': "{'Polish': 'Miscellaneous', 'Łęczyca': 'Location', 'Jacob Lipski': 'Person', 'Prussian': 'Miscellaneous', 'Lipscy': 'Location', 'Grand Duchy of Poznań': 'Location', 'Marjania Zaluska': 'Person'}", 'response': 'Location_entity1 = Location(\n    name = "Gostkócity"\n)\nLocation_entity2 = Location(\n    name = "Łęczyca"\n)\nOrganization_entity1 = Organization(\n    name = "Prussian partition"\n)\nLocation_entity3 = Location(\n    name = "Grand Duchy of Poznań"\n)\nPerson_entity1 = Person(\n    name = "Jacob Lipski"\n)\nPerson_entity2 = Person(\n    name = "Marjania Zaluska"\n)\nPerson_entity3 = Person(\n    name = "she"\n)', 'prediction': {'Gostkócity': 'Location', 'Łęczyca': 'Location', 'Prussian partition': 'Organization', 'Grand Duchy of Poznań': 'Location', 'Jacob Lipski': 'Person', 'Marjania Zaluska': 'Person', 'she': 'Person'}}
{'idx': 45, 'sentence': 'She took part in many activities designed to promote Polish culture , and sponsored and organized various festivities or organizations ( such as the Society of Scientific Help for Girls ( Towarzystwo Pomocy Naukowej dla dziewcząt ) ) .', 'label': "{'Society of Scientific Help for Girls': 'Organization', 'Polish': 'Miscellaneous', 'Towarzystwo Pomocy Naukowej dla dziewcząt': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "She"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Polish"\n)\nOrganization_entity1 = Organization(\n    name = "Society of Scientific Help for Girls"\n)', 'prediction': {'She': 'Person', 'Polish': 'Miscellaneous', 'Society of Scientific Help for Girls': 'Organization'}}
{'idx': 46, 'sentence': 'Excluded from all political and social rights , they were only allowed to enter a church by a special door , and during the service a rail separated them from the other worshippers .', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "church"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "political"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "social"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "rights"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "service"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "rail"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "worshippers"\n)', 'prediction': {'church': 'Organization', 'political': 'Miscellaneous', 'social': 'Miscellaneous', 'rights': 'Miscellaneous', 'service': 'Miscellaneous', 'rail': 'Miscellaneous', 'worshippers': 'Miscellaneous'}}
{'idx': 47, 'sentence': 'It has been suggested that they were descendants of the Visigoths , and somebody derives the name from caas ( dog ) and Goth .', 'label': "{'Goth': 'Miscellaneous', 'Visigoths': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Visigoths"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "caas"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "dog"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Goth"\n)', 'prediction': {'Visigoths': 'Person', 'caas': 'Miscellaneous', 'dog': 'Miscellaneous', 'Goth': 'Miscellaneous'}}
{'idx': 48, 'sentence': 'It was not until the French Revolution that any steps were taken to ameliorate their lot , but today they no longer form a class and have been practically lost sight of in the general peasantry .', 'label': "{'French Revolution': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "French Revolution"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "steps"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "lot"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "class"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "peasantry"\n)', 'prediction': {'French Revolution': 'Location', 'steps': 'Miscellaneous', 'lot': 'Miscellaneous', 'class': 'Miscellaneous', 'peasantry': 'Miscellaneous'}}
{'idx': 49, 'sentence': 'Robert Gibson succeeded Wren as the " Liberal-Labour " MPP for Kenora and served until the 1967 election .', 'label': "{'Liberal-Labour': 'Organization', 'Kenora': 'Location', 'Robert Gibson': 'Person', 'Wren': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Robert Gibson"\n)\nPerson_entity2 = Person(\n    name = "Wren"\n)\nOrganization_entity1 = Organization(\n    name = "Liberal-Labour"\n)\nLocation_entity1 = Location(\n    name = "Kenora"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1967 election"\n)', 'prediction': {'Robert Gibson': 'Person', 'Wren': 'Person', 'Liberal-Labour': 'Organization', 'Kenora': 'Location', '1967 election': 'Miscellaneous'}}
{'idx': 50, 'sentence': 'It was probably first performed by Gradsky on August 20 , 1998 on Vasilievsky Spusk next to the Red Square in Moscow .', 'label': "{'Gradsky': 'Person', 'Red Square': 'Location', 'Vasilievsky Spusk': 'Location', 'Moscow': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Gradsky"\n)\nLocation_entity1 = Location(\n    name = "Vasilievsky Spusk"\n)\nLocation_entity2 = Location(\n    name = "Red Square"\n)\nLocation_entity3 = Location(\n    name = "Moscow"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "August 20"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1998"\n)', 'prediction': {'Gradsky': 'Person', 'Vasilievsky Spusk': 'Location', 'Red Square': 'Location', 'Moscow': 'Location', 'August 20': 'Miscellaneous', '1998': 'Miscellaneous'}}
{'idx': 51, 'sentence': "The Amateur Hockey Association of Canada ( AHAC ) was an amateur men 's ice hockey league founded in 1886 , in existence until 1898 .", 'label': "{'AHAC': 'Organization', 'Amateur Hockey Association of Canada': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Amateur Hockey Association of Canada"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "AHAC"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1886"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "1898"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Amateur Hockey Association of Canada': 'Organization', 'AHAC': 'Miscellaneous', '1886': 'Miscellaneous', '1898': 'Miscellaneous'}}
{'idx': 52, 'sentence': 'They agreed that the season should run from the 1st of January until the 15th of March .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "season"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "January"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "March"\n)', 'prediction': {'season': 'Miscellaneous', 'January': 'Miscellaneous', 'March': 'Miscellaneous'}}
{'idx': 53, 'sentence': "The rover would line up behind the centre , with the point and coverpoint following , in an ' I ' formation towards the goaltender .", 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "rover"\n)\nOrganization_entity2 = Organization(\n    name = "centre"\n)\nOrganization_entity3 = Organization(\n    name = "point"\n)\nOrganization_entity4 = Organization(\n    name = "coverpoint"\n)\nOrganization_entity5 = Organization(\n    name = "goaltender"\n)', 'prediction': {'rover': 'Organization', 'centre': 'Organization', 'point': 'Organization', 'coverpoint': 'Organization', 'goaltender': 'Organization'}}
{'idx': 54, 'sentence': 'There were no boards along the sides of the ice , and there were no standard dimensions for a rink , although dimensions were instituted for the positioning of the goal out from the ends of the rink .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "ice"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "boards"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "dimensions"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "rink"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "goal"\n)', 'prediction': {'ice': 'Location', 'boards': 'Miscellaneous', 'dimensions': 'Miscellaneous', 'rink': 'Miscellaneous', 'goal': 'Miscellaneous'}}
{'idx': 55, 'sentence': 'The first championship team of the AHAC was the Montreal Crystals , having unofficially being declared the champions before the AHAC .', 'label': "{'AHAC': 'Organization', 'Montreal Crystals': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "AHAC"\n)\nOrganization_entity2 = Organization(\n    name = "Montreal Crystals"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'AHAC': 'Organization', 'Montreal Crystals': 'Organization'}}
{'idx': 56, 'sentence': 'In 1893 , the first year since 1888 where the AHAC played under a series system , the Montreal Hockey Club lost their first game against the Ottawa Hockey Club , and proceeded to win their next seven en route to the championship .', 'label': "{'Ottawa Hockey Club': 'Organization', 'Montreal Hockey Club': 'Organization', 'AHAC': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "AHAC"\n)\nOrganization_entity2 = Organization(\n    name = "Montreal Hockey Club"\n)\nOrganization_entity3 = Organization(\n    name = "Ottawa Hockey Club"\n)', 'prediction': {'AHAC': 'Organization', 'Montreal Hockey Club': 'Organization', 'Ottawa Hockey Club': 'Organization'}}
{'idx': 57, 'sentence': 'In the end , the MAAA investigated into why its hockey club wanted to refuse and return the trophy , even though such an action would damage the reputation of the MAAA .', 'label': "{'MAAA': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "MAAA"\n)\nOrganization_entity2 = Organization(\n    name = "MAAA"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'MAAA': 'Organization'}}
{'idx': 58, 'sentence': '† Stanley Cup winner', 'label': "{'Stanley Cup': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Stanley Cup winner"\n)', 'prediction': {'Stanley Cup winner': 'Miscellaneous'}}
{'idx': 59, 'sentence': 'Andrew Sant ( b. 1950 ) is an English born Australian poet .', 'label': "{'Andrew Sant': 'Person', 'English': 'Miscellaneous', 'Australian': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Andrew Sant"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1950"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "English"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Australian"\n)\nOrganization_entity1 = Organization(\n    name = "poet"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Andrew Sant': 'Person', '1950': 'Miscellaneous', 'English': 'Miscellaneous', 'Australian': 'Miscellaneous', 'poet': 'Organization'}}
{'idx': 60, 'sentence': 'Individual poems have appeared in The Times Literary Supplement , Poetry ( Chicago ) , Poetry London , The Australian , Antipodes and many other publications .', 'label': "{'Antipodes': 'Organization', 'Poetry': 'Organization', 'Poetry London': 'Organization', 'The Times Literary Supplement': 'Organization', 'Chicago': 'Location', 'The Australian': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "The Times Literary Supplement"\n)\nOrganization_entity2 = Organization(\n    name = "Poetry"\n)\nLocation_entity1 = Location(\n    name = "Chicago"\n)\nOrganization_entity3 = Organization(\n    name = "Poetry London"\n)\nOrganization_entity4 = Organization(\n    name = "The Australian"\n)\nOrganization_entity5 = Organization(\n    name = "Antipodes"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'The Times Literary Supplement': 'Organization', 'Poetry': 'Organization', 'Chicago': 'Location', 'Poetry London': 'Organization', 'The Australian': 'Organization', 'Antipodes': 'Organization'}}
{'idx': 61, 'sentence': 'Ten years after the initial diagnosis she developed another form of cancer , which she and her doctors fought with equal determination .', 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "she"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Ten years"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "cancer"\n)', 'prediction': {'she': 'Person', 'Ten years': 'Miscellaneous', 'cancer': 'Miscellaneous'}}
{'idx': 62, 'sentence': 'Fearing a lawsuit by pro-life activists , they convened a court hearing at the hospital and obtained separate counsels for Carder , her fetus , and the hospital .', 'label': "{'Carder': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "hospital"\n)\nPerson_entity1 = Person(\n    name = "Carder"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "lawsuit"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "pro-life activists"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "court hearing"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "fetus"\n)', 'prediction': {'hospital': 'Organization', 'Carder': 'Person', 'lawsuit': 'Miscellaneous', 'pro-life activists': 'Miscellaneous', 'court hearing': 'Miscellaneous', 'fetus': 'Miscellaneous'}}
{'idx': 63, 'sentence': 'Obstetricians at the hospital initially refused to carry out the procedure , but eventually one reluctantly agreed .', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "hospital"\n)', 'prediction': {'hospital': 'Organization'}}
{'idx': 64, 'sentence': "In the wake of the surgery , Carder 's family and the American Civil Liberties Union 's Reproductive Freedom Project asked the D.C. Court of Appeals to vacate the order and its legal precedent , on grounds that the order had violated Carder 's right to informed consent and her constitutional rights of privacy and bodily integrity .", 'label': "{'Reproductive Freedom Project': 'Organization', 'American Civil Liberties Union': 'Organization', 'D.C. Court of Appeals': 'Organization', 'Carder': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Carder"\n)\nOrganization_entity1 = Organization(\n    name = "American Civil Liberties Union"\n)\nOrganization_entity2 = Organization(\n    name = "Reproductive Freedom Project"\n)\nLocation_entity1 = Location(\n    name = "D.C. Court of Appeals"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "surgery"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "order"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "legal precedent"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "informed consent"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "constitutional rights"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "privacy"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "bodily integrity"\n)', 'prediction': {'Carder': 'Person', 'American Civil Liberties Union': 'Organization', 'Reproductive Freedom Project': 'Organization', 'D.C. Court of Appeals': 'Location', 'surgery': 'Miscellaneous', 'order': 'Miscellaneous', 'legal precedent': 'Miscellaneous', 'informed consent': 'Miscellaneous', 'constitutional rights': 'Miscellaneous', 'privacy': 'Miscellaneous', 'bodily integrity': 'Miscellaneous'}}
{'idx': 65, 'sentence': 'With a very diverse background in every type of industry imaginable Angelo began his growth in Miami as a young Actor / Model working many non-union & later union jobs .', 'label': "{'Angelo': 'Person', 'Miami': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Angelo"\n)\nLocation_entity1 = Location(\n    name = "Miami"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Actor"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Model"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Angelo': 'Person', 'Miami': 'Location', 'Actor': 'Miscellaneous', 'Model': 'Miscellaneous'}}
{'idx': 66, 'sentence': 'During this time he was also working in Corporate America for Fortune 500 Corporations leading their marketing departments in companies like AT&T , Wachovia , Carnival Cruise Lines , and many more .', 'label': "{'AT&T': 'Organization', 'Fortune': 'Organization', 'Carnival Cruise Lines': 'Organization', 'America': 'Location', 'Wachovia': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Corporate America"\n)\nOrganization_entity2 = Organization(\n    name = "Fortune 500 Corporations"\n)\nOrganization_entity3 = Organization(\n    name = "AT&T"\n)\nOrganization_entity4 = Organization(\n    name = "Wachovia"\n)\nOrganization_entity5 = Organization(\n    name = "Carnival Cruise Lines"\n)', 'prediction': {'Corporate America': 'Organization', 'Fortune 500 Corporations': 'Organization', 'AT&T': 'Organization', 'Wachovia': 'Organization', 'Carnival Cruise Lines': 'Organization'}}
{'idx': 67, 'sentence': 'In 2002 , Angelo launched NOK Entertainment to create a company that could market , promote , produce , & create all types of special events at any venue from Miami , South Beach to West Palm Beach , including L.A. , NYC , & Vegas .', 'label': "{'South Beach': 'Location', 'West Palm Beach': 'Location', 'L.A.': 'Location', 'NOK Entertainment': 'Organization', 'Angelo': 'Person', 'Miami': 'Location', 'NYC': 'Location', 'Vegas': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Angelo"\n)\nOrganization_entity1 = Organization(\n    name = "NOK Entertainment"\n)\nLocation_entity1 = Location(\n    name = "Miami"\n)\nLocation_entity2 = Location(\n    name = "South Beach"\n)\nLocation_entity3 = Location(\n    name = "West Palm Beach"\n)\nLocation_entity4 = Location(\n    name = "L.A."\n)\nLocation_entity5 = Location(\n    name = "NYC"\n)\nLocation_entity6 = Location(\n    name = "Vegas"\n)', 'prediction': {'Angelo': 'Person', 'NOK Entertainment': 'Organization', 'Miami': 'Location', 'South Beach': 'Location', 'West Palm Beach': 'Location', 'L.A.': 'Location', 'NYC': 'Location', 'Vegas': 'Location'}}
{'idx': 68, 'sentence': 'Angelo has reached out to corporate America , the young and successful , the trendy , the tourist , the wealthy , the professional , the rich & famous .', 'label': "{'America': 'Location', 'Angelo': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "corporate America"\n)\nPerson_entity1 = Person(\n    name = "Angelo"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "young"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "trendy"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "tourist"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "wealthy"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "professional"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "rich & famous"\n)', 'prediction': {'corporate America': 'Organization', 'Angelo': 'Person', 'young': 'Miscellaneous', 'trendy': 'Miscellaneous', 'tourist': 'Miscellaneous', 'wealthy': 'Miscellaneous', 'professional': 'Miscellaneous', 'rich & famous': 'Miscellaneous'}}
{'idx': 69, 'sentence': 'Current News : Angelo is working on a book , the date for release is Dec. 2008 . He is also launching several businesses as well as launching several concerts in the Miami Area .', 'label': "{'Miami': 'Location', 'Angelo': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Angelo"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Dec. 2008"\n)\nOrganization_entity1 = Organization(\n    name = "businesses"\n)\nLocation_entity1 = Location(\n    name = "Miami Area"\n)', 'prediction': {'Angelo': 'Person', 'Dec. 2008': 'Miscellaneous', 'businesses': 'Organization', 'Miami Area': 'Location'}}
{'idx': 70, 'sentence': 'Influence rather than position . "', 'label': '{}', 'response': 'None.', 'prediction': {}}
{'idx': 71, 'sentence': 'It was written by Henrique Lopes de Mendonça ( lyrics ) and Alfredo Keil ( music ) after the nationalist resurgence provoked by the British Ultimatum ( for Portuguese troops to vacate the territory between Angola and Mozambique ) , was adopted as a Republican anthem and , finally , by the new Portuguese Republic in 1910 as the national anthem , replacing " O Hymno da Carta " , the last anthem of the Constitutional Monarchy in Portugal .', 'label': "{'Henrique Lopes de Mendonça': 'Person', 'Portuguese Republic': 'Location', 'British Ultimatum': 'Miscellaneous', 'Angola': 'Location', 'O Hymno da Carta': 'Miscellaneous', 'Constitutional Monarchy': 'Organization', 'Alfredo Keil': 'Person', 'Mozambique': 'Location', 'Portugal': 'Location', 'Republican': 'Organization', 'Portuguese': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Henrique Lopes de Mendonça"\n)\nPerson_entity2 = Person(\n    name = "Alfredo Keil"\n)\nOrganization_entity1 = Organization(\n    name = "Portuguese Republic"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "British Ultimatum"\n)\nLocation_entity1 = Location(\n    name = "Angola"\n)\nLocation_entity2 = Location(\n    name = "Mozambique"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1910"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "O Hymno da Carta"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "Constitutional Monarchy"\n)', 'prediction': {'Henrique Lopes de Mendonça': 'Person', 'Alfredo Keil': 'Person', 'Portuguese Republic': 'Organization', 'British Ultimatum': 'Miscellaneous', 'Angola': 'Location', 'Mozambique': 'Location', '1910': 'Miscellaneous', 'O Hymno da Carta': 'Miscellaneous', 'Constitutional Monarchy': 'Miscellaneous'}}
{'idx': 72, 'sentence': 'On January 31 , 1891 , a republican revolution broke out in the northern city of Porto and " A Portuguesa " was adopted by the rebels as their anthem .', 'label': "{'A Portuguesa': 'Miscellaneous', 'Porto': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Porto"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "January 31"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1891"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "A Portuguesa"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Porto': 'Location', 'January 31': 'Miscellaneous', '1891': 'Miscellaneous', 'A Portuguesa': 'Miscellaneous'}}
{'idx': 73, 'sentence': 'The fifth line of the chorus : " Contra os canhões marchar , marchar " ( Against the cannons march , march ! ) is an alteration of the original " Contra os bretões marchar , marchar " ( Against the Britos march , march ! ) , a reference to the Pink Map .', 'label': "{'Britos': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Pink Map"\n)', 'prediction': {'Pink Map': 'Miscellaneous'}}
{'idx': 74, 'sentence': 'After World War II , it was changed to Veterans Day in the United States and to Remembrance Day in the British Commonwealth of Nations .', 'label': "{'Remembrance Day': 'Miscellaneous', 'United States': 'Location', 'World War II': 'Miscellaneous', 'British Commonwealth of Nations': 'Organization', 'Veterans Day': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Veterans Day"\n)\nOrganization_entity2 = Organization(\n    name = "Remembrance Day"\n)\nLocation_entity1 = Location(\n    name = "United States"\n)\nLocation_entity2 = Location(\n    name = "British Commonwealth of Nations"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Veterans Day': 'Organization', 'Remembrance Day': 'Organization', 'United States': 'Location', 'British Commonwealth of Nations': 'Location'}}
{'idx': 75, 'sentence': 'November 11th 2008 will be the 90th anniversary of Armistice Day .', 'label': "{'Armistice Day': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "November 11th 2008"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "90th anniversary"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Armistice Day"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'November 11th 2008': 'Miscellaneous', '90th anniversary': 'Miscellaneous', 'Armistice Day': 'Miscellaneous'}}
{'idx': 76, 'sentence': 'The ISAP , ILPAP and ETHEL companies belong to the public company OASA ( Organismos Astikon Syngoinonion Athinon / Athens Urban Transport Organisation / Οργανισμός Αστικών Συγκοινωνιών Αθηνών . The AMEL and Tram companies belong to Attiko Metro ( Αττικό Μετρό Α.Ε. in Greek ) , a company that is currently wholly owned by the Greek government .', 'label': "{'Greek government': 'Organization', 'ILPAP': 'Organization', 'Attiko Metro': 'Organization', 'Athens Urban Transport Organisation': 'Organization', 'ISAP': 'Organization', 'Tram': 'Organization', 'Greek': 'Miscellaneous', 'ETHEL': 'Organization', 'OASA': 'Organization', 'AMEL': 'Organization', 'Organismos Astikon Syngoinonion Athinon': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "ISAP"\n)\nOrganization_entity2 = Organization(\n    name = "ILPAP"\n)\nOrganization_entity3 = Organization(\n    name = "ETHEL"\n)\nOrganization_entity4 = Organization(\n    name = "OASA"\n)\nOrganization_entity5 = Organization(\n    name = "Attiko Metro"\n)\nOrganization_entity6 = Organization(\n    name = "Greek government"\n)', 'prediction': {'ISAP': 'Organization', 'ILPAP': 'Organization', 'ETHEL': 'Organization', 'OASA': 'Organization', 'Attiko Metro': 'Organization', 'Greek government': 'Organization'}}
{'idx': 77, 'sentence': 'According to the 2001 UK census , Atwick parish had a population of 318 .', 'label': "{'Atwick': 'Location', 'UK': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Atwick"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2001"\n)\nOrganization_entity1 = Organization(\n    name = "UK census"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "318"\n)', 'prediction': {'Atwick': 'Location', '2001': 'Miscellaneous', 'UK census': 'Organization', '318': 'Miscellaneous'}}
{'idx': 78, 'sentence': 'It is not a political party , but rather sees itself as a watchdog against government intervention .', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "political party"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "watchdog"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "government intervention"\n)', 'prediction': {'political party': 'Organization', 'watchdog': 'Miscellaneous', 'government intervention': 'Miscellaneous'}}
{'idx': 79, 'sentence': 'The League is distinctive for asserting that The Protocols of the Elders of Zion is a genuine Jewish document ( the Encyclopædi Britannica for example describes the Protocols as a " fraudulent document that served as a pretext and rationale for anti-Semitism in the early 20th century " ) .', 'label': "{'The Protocols of the Elders of Zion': 'Miscellaneous', 'Encyclopædi Britannica': 'Miscellaneous', 'League': 'Organization', 'Jewish': 'Miscellaneous', 'Protocols': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "The League"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "The Protocols of the Elders of Zion"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Jewish"\n)\nOrganization_entity2 = Organization(\n    name = "Encyclopædi Britannica"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "anti-Semitism"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "20th century"\n)', 'prediction': {'The League': 'Organization', 'The Protocols of the Elders of Zion': 'Miscellaneous', 'Jewish': 'Miscellaneous', 'Encyclopædi Britannica': 'Organization', 'anti-Semitism': 'Miscellaneous', '20th century': 'Miscellaneous'}}
{'idx': 80, 'sentence': 'Former Western Australian Labor MP , founder of the Australia First Party and later One Nation member Graeme Campbell was associated with the League at the same time as he was a member of One Nation and Australia First .', 'label': "{'Graeme Campbell': 'Person', 'Australia First': 'Organization', 'Labor': 'Organization', 'One Nation': 'Organization', 'Western Australian': 'Miscellaneous', 'Australia First Party': 'Organization', 'League': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "Graeme Campbell"\n)\nOrganization_entity1 = Organization(\n    name = "Australia First Party"\n)\nOrganization_entity2 = Organization(\n    name = "One Nation"\n)\nOrganization_entity3 = Organization(\n    name = "League"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Graeme Campbell': 'Person', 'Australia First Party': 'Organization', 'One Nation': 'Organization', 'League': 'Organization'}}
{'idx': 81, 'sentence': 'In the 1970s and early 1980s , the League attempted to gain control of the National Party of Australia , encouraging members to join the party in sufficient numbers to take control , a tactic known as entryism .', 'label': "{'League': 'Organization', 'National Party of Australia': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "League"\n)\nOrganization_entity2 = Organization(\n    name = "National Party of Australia"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1970s"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1980s"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "entryism"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'League': 'Organization', 'National Party of Australia': 'Organization', '1970s': 'Miscellaneous', '1980s': 'Miscellaneous', 'entryism': 'Miscellaneous'}}
{'idx': 82, 'sentence': 'Critics have pointed to the past participation of the League in the former World Anti-Communist League alongside dictatorial regimes like that of Augusto Pinochet .', 'label': "{'World Anti-Communist League': 'Organization', 'Augusto Pinochet': 'Person', 'League': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "League"\n)\nOrganization_entity2 = Organization(\n    name = "World Anti-Communist League"\n)\nPerson_entity1 = Person(\n    name = "Augusto Pinochet"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'League': 'Organization', 'World Anti-Communist League': 'Organization', 'Augusto Pinochet': 'Person'}}
{'idx': 83, 'sentence': 'The Ayalon Cave is a large underground limestone cave located near Ramla , Israel .', 'label': "{'Ayalon Cave': 'Location', 'Ramla': 'Location', 'Israel': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Ayalon Cave"\n)\nLocation_entity2 = Location(\n    name = "Ramla"\n)\nLocation_entity3 = Location(\n    name = "Israel"\n)', 'prediction': {'Ayalon Cave': 'Location', 'Ramla': 'Location', 'Israel': 'Location'}}
{'idx': 84, 'sentence': 'The cave will remain closed to the public to allow scientific investigation to continue undisturbed .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "cave"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'cave': 'Location'}}
{'idx': 85, 'sentence': 'Baatsagaan is a sum ( district ) of Bayankhongor Province in southern Mongolia .', 'label': "{'Mongolia': 'Location', 'Baatsagaan': 'Location', 'Bayankhongor Province': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Baatsagaan"\n)\nLocation_entity2 = Location(\n    name = "Bayankhongor Province"\n)\nLocation_entity3 = Location(\n    name = "Mongolia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Baatsagaan': 'Location', 'Bayankhongor Province': 'Location', 'Mongolia': 'Location'}}
{'idx': 86, 'sentence': 'The Badminton World Federation ( BWF ) is the international governing body for the sport of badminton .', 'label': "{'Badminton World Federation': 'Organization', 'BWF': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Badminton World Federation"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "BWF"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "badminton"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Badminton World Federation': 'Organization', 'BWF': 'Miscellaneous', 'badminton': 'Miscellaneous'}}
{'idx': 87, 'sentence': 'About ten miles from Bandarlapalle the Deccan Plateau ends in a dense forest range , sloping down into the plains of Tamilnadu .', 'label': "{'Tamilnadu': 'Location', 'Deccan Plateau': 'Location', 'Bandarlapalle': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Bandarlapalle"\n)\nLocation_entity2 = Location(\n    name = "Deccan Plateau"\n)\nLocation_entity3 = Location(\n    name = "Tamilnadu"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bandarlapalle': 'Location', 'Deccan Plateau': 'Location', 'Tamilnadu': 'Location'}}
{'idx': 88, 'sentence': 'However , since the last decade there has lot of developmental work taken place , with good roads , drinking water and schools being built .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "last decade"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "developmental work"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "good roads"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "drinking water"\n)\nOrganization_entity1 = Organization(\n    name = "schools"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'last decade': 'Miscellaneous', 'developmental work': 'Miscellaneous', 'good roads': 'Miscellaneous', 'drinking water': 'Miscellaneous', 'schools': 'Organization'}}
{'idx': 89, 'sentence': 'Following its independence , Bangladesh became an independent member of the World Organization of the Scout Movement in 1974 .', 'label': "{'World Organization of the Scout Movement': 'Organization', 'Bangladesh': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Bangladesh"\n)\nOrganization_entity2 = Organization(\n    name = "World Organization of the Scout Movement"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1974"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bangladesh': 'Organization', 'World Organization of the Scout Movement': 'Organization', '1974': 'Miscellaneous'}}
{'idx': 90, 'sentence': 'Membership is open to youth between 6 and 25 years of age , regardless of caste , creed or color .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Membership"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "youth"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "6"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "25"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "caste"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "creed"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "color"\n)', 'prediction': {'Membership': 'Miscellaneous', 'youth': 'Miscellaneous', '6': 'Miscellaneous', '25': 'Miscellaneous', 'caste': 'Miscellaneous', 'creed': 'Miscellaneous', 'color': 'Miscellaneous'}}
{'idx': 91, 'sentence': '5 .', 'label': '{}', 'response': 'None', 'prediction': {}}
{'idx': 92, 'sentence': 'In addition , there are American Boy Scouts in Dhaka , linked to the Direct Service branch of the Boy Scouts of America , which supports units around the world .', 'label': "{'Boy Scouts of America': 'Organization', 'Dhaka': 'Location', 'American Boy Scouts': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "American Boy Scouts"\n)\nLocation_entity1 = Location(\n    name = "Dhaka"\n)\nOrganization_entity2 = Organization(\n    name = "Direct Service"\n)\nOrganization_entity3 = Organization(\n    name = "Boy Scouts of America"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'American Boy Scouts': 'Organization', 'Dhaka': 'Location', 'Direct Service': 'Organization', 'Boy Scouts of America': 'Organization'}}
{'idx': 93, 'sentence': 'Li Shimin led a siege on the city of Luoyang , head of the self-declared emperor Wang Shichong , who solicited help from Dou Jiande from the east .', 'label': "{'Wang Shichong': 'Person', 'Luoyang': 'Location', 'Li Shimin': 'Person', 'Dou Jiande': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Li Shimin"\n)\nLocation_entity1 = Location(\n    name = "Luoyang"\n)\nPerson_entity2 = Person(\n    name = "Wang Shichong"\n)\nPerson_entity3 = Person(\n    name = "Dou Jiande"\n)\n\nOrganization_entity1 = Organization(\n    name = "Tang"\n)', 'prediction': {'Li Shimin': 'Person', 'Luoyang': 'Location', 'Wang Shichong': 'Person', 'Dou Jiande': 'Person', 'Tang': 'Organization'}}
{'idx': 94, 'sentence': 'The French Voulet-Chanoine Mission , led by the captains Paul Voulet and Julien Chanoine , had been dispatched in 1898 to Africa by the French government with the mission to conquer the territories between the Niger River and Lake Chad and join in uniting French territories in West Africa .', 'label': "{'French': 'Miscellaneous', 'Voulet-Chanoine Mission': 'Organization', 'Paul Voulet': 'Person', 'West Africa': 'Location', 'Lake Chad': 'Location', 'Julien Chanoine': 'Person', 'French government': 'Organization', 'Niger River': 'Location', 'Africa': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "French Voulet-Chanoine Mission"\n)\nPerson_entity1 = Person(\n    name = "Paul Voulet"\n)\nPerson_entity2 = Person(\n    name = "Julien Chanoine"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1898"\n)\nLocation_entity1 = Location(\n    name = "Africa"\n)\nLocation_entity2 = Location(\n    name = "Niger River"\n)\nLocation_entity3 = Location(\n    name = "Lake Chad"\n)\nLocation_entity4 = Location(\n    name = "West Africa"\n)', 'prediction': {'French Voulet-Chanoine Mission': 'Organization', 'Paul Voulet': 'Person', 'Julien Chanoine': 'Person', '1898': 'Miscellaneous', 'Africa': 'Location', 'Niger River': 'Location', 'Lake Chad': 'Location', 'West Africa': 'Location'}}
{'idx': 95, 'sentence': 'The French found the enemy assembled on the field , while women and children had already retired themselves in a small thick and almost impenetrable bush where the Azna defended themselves when facing a superior enemy .', 'label': "{'Azna': 'Miscellaneous', 'French': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "French"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Azna"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'French': 'Organization', 'Azna': 'Miscellaneous'}}
{'idx': 96, 'sentence': 'The Battle of Vilcapugio was fought on October 1 , 1813 during the Campaign of Alto Peru in the Argentine War of Independence , where the pro-independence forces led by General Manuel Belgrano were defeated by the pro-Spanish Realists , led by Joaquin de la Pazuela .', 'label': "{'Campaign of Alto Peru': 'Miscellaneous', 'Argentine War of Independence': 'Miscellaneous', 'Manuel Belgrano': 'Person', 'Joaquin de la Pazuela': 'Person', 'Battle of Vilcapugio': 'Miscellaneous', 'pro-Spanish Realists': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Campaign of Alto Peru"\n)\nOrganization_entity2 = Organization(\n    name = "Argentine War of Independence"\n)\nPerson_entity1 = Person(\n    name = "General Manuel Belgrano"\n)\nPerson_entity2 = Person(\n    name = "Joaquin de la Pazuela"\n)', 'prediction': {'Campaign of Alto Peru': 'Organization', 'Argentine War of Independence': 'Organization', 'General Manuel Belgrano': 'Person', 'Joaquin de la Pazuela': 'Person'}}
{'idx': 97, 'sentence': "At the end of September 1813 , most of Belgrano 's army arrived in the prairie of Vilcapugio , which was a plateau surrounded by tall mountains to the north of Potosí .", 'label': "{'Potosí': 'Location', 'Belgrano': 'Person', 'Vilcapugio': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Vilcapugio"\n)\nLocation_entity2 = Location(\n    name = "Potosí"\n)\nOrganization_entity1 = Organization(\n    name = "Belgrano"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Vilcapugio': 'Location', 'Potosí': 'Location', 'Belgrano': 'Organization'}}
{'idx': 98, 'sentence': 'Belgrano and Eustaquio Díaz Vélez had decided that Vel would be the one to go to Potosí to reunite with the dispersed troops .', 'label': "{'Vel': 'Person', 'Eustaquio Díaz Vélez': 'Person', 'Potosí': 'Location', 'Belgrano': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Belgrano"\n)\nPerson_entity2 = Person(\n    name = "Eustaquio Díaz Vélez"\n)\nLocation_entity1 = Location(\n    name = "Potosí"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Belgrano': 'Person', 'Eustaquio Díaz Vélez': 'Person', 'Potosí': 'Location'}}
{'idx': 99, 'sentence': 'BayCon is a large convention topping two thousand attendees over the last several years .', 'label': "{'BayCon': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "BayCon"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "two thousand"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'BayCon': 'Organization', 'two thousand': 'Miscellaneous'}}
{'idx': 100, 'sentence': "BayCon ' 83 was also held over Thanksgiving weekend .", 'label': "{'BayCon': 'Miscellaneous', 'Thanksgiving': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "BayCon \'83"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {"BayCon '83": 'Organization'}}
{'idx': 101, 'sentence': 'The BEL20 is the benchmark stock market index of Euronext Brussels .', 'label': "{'Euronext Brussels': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "BEL20"\n)\nLocation_entity1 = Location(\n    name = "Euronext Brussels"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'BEL20': 'Organization', 'Euronext Brussels': 'Location'}}
{'idx': 102, 'sentence': 'In addition , a candidate for inclusion must possess a free float market capitalisation ( in Euros ) of at least 300000 times the price of the index on the last trading day of December .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Euros"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "300000"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "December"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Euros': 'Miscellaneous', '300000': 'Miscellaneous', 'December': 'Miscellaneous'}}
{'idx': 103, 'sentence': 'He began his career as a short film comedy director and gradually moved into feature film directing and production later in his career .', 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "He"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "short film comedy director"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "feature film directing"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "production"\n)', 'prediction': {'He': 'Person', 'short film comedy director': 'Miscellaneous', 'feature film directing': 'Miscellaneous', 'production': 'Miscellaneous'}}
{'idx': 104, 'sentence': 'He played professionally for the Rochester Jeffersons and Buffalo Bisons', 'label': "{'Buffalo Bisons': 'Organization', 'Rochester Jeffersons': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Rochester Jeffersons"\n)\nOrganization_entity2 = Organization(\n    name = "Buffalo Bisons"\n)', 'prediction': {'Rochester Jeffersons': 'Organization', 'Buffalo Bisons': 'Organization'}}
{'idx': 105, 'sentence': 'Ben now also helps run Movement Bodyboarding Magazine .', 'label': "{'Movement Bodyboarding Magazine': 'Organization', 'Ben': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Ben"\n)\nOrganization_entity1 = Organization(\n    name = "Movement Bodyboarding Magazine"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ben': 'Person', 'Movement Bodyboarding Magazine': 'Organization'}}
{'idx': 106, 'sentence': 'At 28 , he sensed his chances of ever winning a world title receding with each hand raised in opposition : he had fancied his chances at the infamous Island .', 'label': "{'Island': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Island"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Island': 'Person'}}
{'idx': 107, 'sentence': "The irony of that frigid afternoon in Cronulla did n't dawn on Player as he paddled out in flawless , two-metre waves for the final of the Pipeline Pro ; he was too preoccupied with matters at hand .", 'label': "{'Player': 'Person', 'Pipeline Pro': 'Miscellaneous', 'Cronulla': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Cronulla"\n)\nPerson_entity1 = Person(\n    name = "Player"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Pipeline Pro"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Cronulla': 'Location', 'Player': 'Person', 'Pipeline Pro': 'Miscellaneous'}}
{'idx': 108, 'sentence': 'Then , further controversy .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "controversy"\n)', 'prediction': {'controversy': 'Miscellaneous'}}
{'idx': 109, 'sentence': 'No such contest debacles this year , which means Ben Player is more ambitious than ever to win it clean .', 'label': "{'Ben Player': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Ben Player"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ben Player': 'Person'}}
{'idx': 110, 'sentence': "That wiry frame has filled out during the 13 seasons he 's spent hassling for waves amongst the hungry pack of board riders who converge on the famous stretch of sand every northern winter .", 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "None"\n)\nOrganization_entity1 = Organization(\n    name = "None"\n)\nLocation_entity1 = Location(\n    name = "None"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "13 seasons"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "northern winter"\n)', 'prediction': {'None': 'Location', '13 seasons': 'Miscellaneous', 'northern winter': 'Miscellaneous'}}
{'idx': 111, 'sentence': 'Player won Australian titles as a cadet ( under-16s ) and as a pro in 2000 , part of the new generation that reshaped bodyboarding in Australia .', 'label': "{'Australia': 'Location', 'Australian': 'Miscellaneous', 'Player': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Player"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Australian"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "cadet"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "under-16s"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "pro"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "2000"\n)\nLocation_entity1 = Location(\n    name = "Australia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Player': 'Person', 'Australian': 'Miscellaneous', 'cadet': 'Miscellaneous', 'under-16s': 'Miscellaneous', 'pro': 'Miscellaneous', '2000': 'Miscellaneous', 'Australia': 'Location'}}
{'idx': 112, 'sentence': 'Basically I lost $85,000 for that year and $35,000 that was owed to me , " says Player .', 'label': "{'Player': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Player"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Player': 'Person'}}
{'idx': 113, 'sentence': '" It \'s still growing , but with the money remaining in bodyboarding . "', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "bodyboarding"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'bodyboarding': 'Organization'}}
{'idx': 114, 'sentence': 'For the first two years Player sold advertising for the mag , which was named Movement .', 'label': "{'Player': 'Person', 'Movement': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "Player"\n)\nOrganization_entity1 = Organization(\n    name = "Movement"\n)', 'prediction': {'Player': 'Person', 'Movement': 'Organization'}}
{'idx': 115, 'sentence': 'Bodyboarders now seek out the sort of aquatic slabs breaking in shallow water that stand-up surfers leave alone .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Bodyboarders"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "aquatic slabs"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "shallow water"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "stand-up surfers"\n)', 'prediction': {'Bodyboarders': 'Miscellaneous', 'aquatic slabs': 'Miscellaneous', 'shallow water': 'Miscellaneous', 'stand-up surfers': 'Miscellaneous'}}
{'idx': 116, 'sentence': '" I think surfing actually embraces bodyboarding much more now , because it \'s not really seen as competition -- we \'re something totally different , " he says .', 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "he"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "surfing"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "bodyboarding"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "competition"\n)', 'prediction': {'he': 'Person', 'surfing': 'Miscellaneous', 'bodyboarding': 'Miscellaneous', 'competition': 'Miscellaneous'}}
{'idx': 117, 'sentence': 'Portugal is the exception on the tour , a playful beach break , but it retains its status on the tour due to the carnival atmosphere that the sport attracts in Europe , as well as in South America .', 'label': "{'Europe': 'Location', 'Portugal': 'Location', 'South America': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Portugal"\n)\nLocation_entity2 = Location(\n    name = "Europe"\n)\nLocation_entity3 = Location(\n    name = "South America"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Portugal': 'Location', 'Europe': 'Location', 'South America': 'Location'}}
{'idx': 118, 'sentence': 'Kopački Rit , situated at the confluence of the Drava and the Danube , the unique preserved wetland area in this part of Europe is not far from Mece .', 'label': "{'Mece': 'Location', 'Kopački Rit': 'Location', 'Drava': 'Location', 'Europe': 'Location', 'Danube': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Kopački Rit"\n)\nLocation_entity2 = Location(\n    name = "Drava"\n)\nLocation_entity3 = Location(\n    name = "Danube"\n)\nLocation_entity4 = Location(\n    name = "Europe"\n)\nLocation_entity5 = Location(\n    name = "Mece"\n)', 'prediction': {'Kopački Rit': 'Location', 'Drava': 'Location', 'Danube': 'Location', 'Europe': 'Location', 'Mece': 'Location'}}
{'idx': 119, 'sentence': 'The name Bilka is believed by many to be a mix of the German Billiges Kaufhaus ( low-price department store ) , which its founder , Herman Salling had encountered during his business trips to West Germany .', 'label': "{'Herman Salling': 'Person', 'Bilka': 'Organization', 'West Germany': 'Location', 'German': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Bilka"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "German"\n)\nOrganization_entity2 = Organization(\n    name = "Billiges Kaufhaus"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "low-price department store"\n)\nPerson_entity1 = Person(\n    name = "Herman Salling"\n)\nLocation_entity1 = Location(\n    name = "West Germany"\n)', 'prediction': {'Bilka': 'Organization', 'German': 'Miscellaneous', 'Billiges Kaufhaus': 'Organization', 'low-price department store': 'Miscellaneous', 'Herman Salling': 'Person', 'West Germany': 'Location'}}
{'idx': 120, 'sentence': 'Attended James High School , in Houston .', 'label': "{'James High School': 'Organization', 'Houston': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Houston"\n)\nOrganization_entity1 = Organization(\n    name = "James High School"\n)', 'prediction': {'Houston': 'Location', 'James High School': 'Organization'}}
{'idx': 121, 'sentence': 'Atessis was a member of teams which set school record 30-game winning streak that currently stands as the twelfth-longest in NCAA history and was a three-year letterman and three year starter at left defensive end .', 'label': "{'NCAA': 'Organization', 'Atessis': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Atessis"\n)\nOrganization_entity1 = Organization(\n    name = "NCAA"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "thirty"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "twelfth"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "three-year"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "three"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "left"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "defensive end"\n)', 'prediction': {'Atessis': 'Person', 'NCAA': 'Organization', 'thirty': 'Miscellaneous', 'twelfth': 'Miscellaneous', 'three-year': 'Miscellaneous', 'three': 'Miscellaneous', 'left': 'Miscellaneous', 'defensive end': 'Miscellaneous'}}
{'idx': 122, 'sentence': 'Played in the Senior Bowl in Mobile , Alabama , in January 1971 .', 'label': "{'Senior Bowl': 'Miscellaneous', 'Mobile': 'Location', 'Alabama': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Mobile"\n)\nLocation_entity2 = Location(\n    name = "Alabama"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Senior Bowl"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "January 1971"\n)', 'prediction': {'Mobile': 'Location', 'Alabama': 'Location', 'Senior Bowl': 'Miscellaneous', 'January 1971': 'Miscellaneous'}}
{'idx': 123, 'sentence': 'In 2005 was named to the All-Time University of Texas team by the Austin American-Statesman and was named to the Red River Rivalry All-time team by the Fort Worth Star-Telegram , also in 2005 .', 'label': "{'Fort Worth Star-Telegram': 'Organization', 'Austin American-Statesman': 'Organization', 'Red River Rivalry All-time team': 'Organization', 'University of Texas': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "University of Texas"\n)\nOrganization_entity2 = Organization(\n    name = "Austin American-Statesman"\n)\nOrganization_entity3 = Organization(\n    name = "Red River Rivalry"\n)\nOrganization_entity4 = Organization(\n    name = "Fort Worth Star-Telegram"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2005"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'University of Texas': 'Organization', 'Austin American-Statesman': 'Organization', 'Red River Rivalry': 'Organization', 'Fort Worth Star-Telegram': 'Organization', '2005': 'Miscellaneous'}}
{'idx': 124, 'sentence': 'Asked to drop weight and move to outside linebacker , a position he had never played .', 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "None"\n)\nOrganization_entity1 = Organization(\n    name = "None"\n)\nLocation_entity1 = Location(\n    name = "None"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "None"\n)', 'prediction': {'None': 'Miscellaneous'}}
{'idx': 125, 'sentence': 'Frequently injured , he was on track to shatter the league record for scoring in 1944 when another injury ended his season two points short .', 'label': "{'1944': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "he"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1944"\n)', 'prediction': {'he': 'Person', '1944': 'Miscellaneous'}}
{'idx': 126, 'sentence': 'In 1998 , he was ranked number 53 on The Hockey News list of the 100 Greatest Hockey Players .', 'label': "{'The Hockey News': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "he"\n)\nOrganization_entity1 = Organization(\n    name = "The Hockey News"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1998"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "53"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "100"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "Greatest Hockey Players"\n)', 'prediction': {'he': 'Person', 'The Hockey News': 'Organization', '1998': 'Miscellaneous', '53': 'Miscellaneous', '100': 'Miscellaneous', 'Greatest Hockey Players': 'Miscellaneous'}}
{'idx': 127, 'sentence': 'Brampton City Council is the governing body for the City of Brampton , Ontario .', 'label': "{'Ontario': 'Location', 'Brampton City Council': 'Organization', 'City of Brampton': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Brampton City Council"\n)\nLocation_entity1 = Location(\n    name = "Brampton"\n)\nLocation_entity2 = Location(\n    name = "Ontario"\n)', 'prediction': {'Brampton City Council': 'Organization', 'Brampton': 'Location', 'Ontario': 'Location'}}
{'idx': 128, 'sentence': 'The municipality is a part of the administrative municipality of Wörlitze Winkel , which has a seat in the city of Oranienbau .', 'label': "{'Wörlitze Winkel': 'Location', 'Oranienbau': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "municipality"\n)\nOrganization_entity2 = Organization(\n    name = "administrative municipality"\n)\nLocation_entity1 = Location(\n    name = "Wörlitze Winkel"\n)\nLocation_entity2 = Location(\n    name = "Oranienbau"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'municipality': 'Organization', 'administrative municipality': 'Organization', 'Wörlitze Winkel': 'Location', 'Oranienbau': 'Location'}}
{'idx': 129, 'sentence': 'Hinkley Locomotive Works modified their 2-foot gauge Forney design to run boiler first with an extended frame similar to that installed on Sandy River Railroad # 1 following a wreck in early 1882 .', 'label': "{'Sandy River Railroad': 'Location', 'Hinkley Locomotive Works': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Hinkley Locomotive Works"\n)\nOrganization_entity2 = Organization(\n    name = "Sandy River Railroad"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Forney"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2-foot gauge"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "boiler"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "extended frame"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "wreck"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "1882"\n)', 'prediction': {'Hinkley Locomotive Works': 'Organization', 'Sandy River Railroad': 'Organization', 'Forney': 'Miscellaneous', '2-foot gauge': 'Miscellaneous', 'boiler': 'Miscellaneous', 'extended frame': 'Miscellaneous', 'wreck': 'Miscellaneous', '1882': 'Miscellaneous'}}
{'idx': 130, 'sentence': 'Original Hinkley locomotives # 1-2 were replaced by # 5-6 of an improved design with pilot wheels .', 'label': "{'Hinkley': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Hinkley"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "locomotives # 1-2"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "5-6"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "pilot wheels"\n)', 'prediction': {'Hinkley': 'Organization', 'locomotives # 1-2': 'Miscellaneous', '5-6': 'Miscellaneous', 'pilot wheels': 'Miscellaneous'}}
{'idx': 131, 'sentence': 'The first consisted of baggage # 10 , RPO # 25 , and one or two coaches .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "baggage # 10"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "RPO # 25"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "coaches"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'baggage # 10': 'Miscellaneous', 'RPO # 25': 'Miscellaneous', 'coaches': 'Miscellaneous'}}
{'idx': 132, 'sentence': 'Locomotive # 8 was the heaviest locomotive on any 2-foot gauge railway in Maine .', 'label': "{'Maine': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Maine"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Locomotive # 8"\n)\n\nOrganization_entity1 = Organization(\n    name = "2-foot gauge railway"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Maine': 'Location', 'Locomotive # 8': 'Miscellaneous', '2-foot gauge railway': 'Organization'}}
{'idx': 133, 'sentence': 'Milepost 0 : Bridgton Junction - Interchange yard with the Portland and Ogdensburg ( later Maine Central Railroad Mountain Division . )', 'label': "{'Bridgton Junction': 'Location', 'Portland and Ogdensburg': 'Location', 'Maine Central Railroad Mountain Division': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Portland and Ogdensburg"\n)\nOrganization_entity2 = Organization(\n    name = "Maine Central Railroad Mountain Division"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Portland and Ogdensburg': 'Organization', 'Maine Central Railroad Mountain Division': 'Organization'}}
{'idx': 134, 'sentence': 'Milepost 1 : granite masonry arch over Hancock Brook .', 'label': "{'Hancock Brook': 'Location'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Milepost 1"\n)\nLocation_entity1 = Location(\n    name = "Hancock Brook"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Milepost 1': 'Miscellaneous', 'Hancock Brook': 'Location'}}
{'idx': 135, 'sentence': 'Milepost 4.4 : Twin Lake - small flag stop passenger shelter .', 'label': "{'Twin Lake': 'Location'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Milepost 4.4"\n)\nLocation_entity1 = Location(\n    name = "Twin Lake"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "small flag stop passenger shelter"\n)', 'prediction': {'Milepost 4.4': 'Miscellaneous', 'Twin Lake': 'Location', 'small flag stop passenger shelter': 'Miscellaneous'}}
{'idx': 136, 'sentence': "Milepost 9.0 : Perley 's Mills - southbound spur with small flag stop passenger shelter .", 'label': '{"Perley \'s Mills": \'Location\'}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Milepost 9.0"\n)\nLocation_entity1 = Location(\n    name = "Perley \'s Mills"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "southbound spur"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "small flag stop passenger shelter"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Milepost 9.0': 'Miscellaneous', "Perley 's Mills": 'Location', 'southbound spur': 'Miscellaneous', 'small flag stop passenger shelter': 'Miscellaneous'}}
{'idx': 137, 'sentence': 'Milepost 15.8 : Bridgton - had the largest population of any village served by the Maine 2-foot gauge railroads .', 'label': "{'Maine': 'Location', 'Bridgton': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Milepost 15.8"\n)\nOrganization_entity1 = Organization(\n    name = "Maine 2-foot gauge railroads"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Milepost 15.8': 'Location', 'Maine 2-foot gauge railroads': 'Organization'}}
{'idx': 138, 'sentence': "Milepost 20.7 : Harrison - agent 's station with a passing siding and several southbound spurs serving a freight house , a cannery , a grain store , a 2-track car shed , and a turntable with a single-stall enginehouse .", 'label': "{'Harrison': 'Location'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Milepost 20.7"\n)\nLocation_entity1 = Location(\n    name = "Harrison"\n)\nOrganization_entity1 = Organization(\n    name = "agent \'s station"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "passing siding"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "southbound spurs"\n)\nOrganization_entity2 = Organization(\n    name = "freight house"\n)\nOrganization_entity3 = Organization(\n    name = "cannery"\n)\nOrganization_entity4 = Organization(\n    name = "grain store"\n)\nOrganization_entity5 = Organization(\n    name = "2-track car shed"\n)\nOrganization_entity6 = Organization(\n    name = "turntable"\n)\nOrganization_entity7 = Organization(\n    name = "single-stall enginehouse"\n)', 'prediction': {'Milepost 20.7': 'Miscellaneous', 'Harrison': 'Location', "agent 's station": 'Organization', 'passing siding': 'Miscellaneous', 'southbound spurs': 'Miscellaneous', 'freight house': 'Organization', 'cannery': 'Organization', 'grain store': 'Organization', '2-track car shed': 'Organization', 'turntable': 'Organization', 'single-stall enginehouse': 'Organization'}}
{'idx': 139, 'sentence': 'The car was sold for use as a restaurant in 1935 .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "car"\n)\nOrganization_entity1 = Organization(\n    name = "restaurant"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1935"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'car': 'Miscellaneous', 'restaurant': 'Organization', '1935': 'Miscellaneous'}}
{'idx': 140, 'sentence': 'Cars # 22 and # 21/14 were the only 2-foot gauge tank cars in Maine .', 'label': "{'Maine': 'Location'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Cars # 22"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Cars # 21/14"\n)\nLocation_entity1 = Location(\n    name = "Maine"\n)', 'prediction': {'Cars # 22': 'Miscellaneous', 'Cars # 21/14': 'Miscellaneous', 'Maine': 'Location'}}
{'idx': 141, 'sentence': 'It is also a partner in the Masters of Digital Media program run by Great Northern Way Campus Ltd , and rents training space there with several other institutions .', 'label': "{'Great Northern Way Campus Ltd': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Masters of Digital Media program"\n)\nOrganization_entity2 = Organization(\n    name = "Great Northern Way Campus Ltd"\n)', 'prediction': {'Masters of Digital Media program': 'Organization', 'Great Northern Way Campus Ltd': 'Organization'}}
{'idx': 142, 'sentence': 'His manager was future Hall of Famer Bill McKechnie .', 'label': "{'Bill McKechnie': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bill McKechnie"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bill McKechnie': 'Person'}}
{'idx': 143, 'sentence': 'Stan believes that this will destroy his chance for a promotion .', 'label': "{'Stan': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Stan"\n)', 'prediction': {'Stan': 'Person'}}
{'idx': 144, 'sentence': 'At a diner , Bullock calls Hayley a slut , which offends Stan , and the two CIA men get into a lengthy fist-fight ( with some audio-commentary from Klaus ) .', 'label': "{'Stan': 'Person', 'Hayley': 'Person', 'Bullock': 'Person', 'CIA': 'Organization', 'Klaus': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bullock"\n)\nPerson_entity2 = Person(\n    name = "Hayley"\n)\nPerson_entity3 = Person(\n    name = "Stan"\n)\nOrganization_entity1 = Organization(\n    name = "CIA"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Klaus"\n)', 'prediction': {'Bullock': 'Person', 'Hayley': 'Person', 'Stan': 'Person', 'CIA': 'Organization', 'Klaus': 'Miscellaneous'}}
{'idx': 145, 'sentence': 'A parcel just south of it was named Lincoln Park the same year .', 'label': "{'Lincoln Park': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Lincoln Park"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Lincoln Park': 'Location'}}
{'idx': 146, 'sentence': 'Rebuilding of the reservoir to convert it from open-air to covered started in April 2003 and lasted through summer 2005 .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "reservoir"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "April 2003"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "summer 2005"\n)', 'prediction': {'reservoir': 'Location', 'April 2003': 'Miscellaneous', 'summer 2005': 'Miscellaneous'}}
{'idx': 147, 'sentence': 'In 1972 , Caloi introduced the Caloi 10 , which became a cultural landmark and established the name Caloi in Brazil .', 'label': "{'Caloi': 'Organization', 'Caloi 10': 'Miscellaneous', 'Brazil': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Caloi"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Caloi 10"\n)\nLocation_entity1 = Location(\n    name = "Brazil"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Caloi': 'Organization', 'Caloi 10': 'Miscellaneous', 'Brazil': 'Location'}}
{'idx': 148, 'sentence': 'Guido died in 1955 , and the company was directed by his son Bruno Caloi until 1999 .', 'label': "{'Bruno Caloi': 'Person', 'Guido': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Guido"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1955"\n)\nOrganization_entity1 = Organization(\n    name = "Bruno Caloi"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1999"\n)', 'prediction': {'Guido': 'Person', '1955': 'Miscellaneous', 'Bruno Caloi': 'Organization', '1999': 'Miscellaneous'}}
{'idx': 149, 'sentence': 'This tracks comes off their 1998 album , Electro-Shock Blues .', 'label': "{'Electro-Shock Blues': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1998"\n)\nOrganization_entity1 = Organization(\n    name = "Electro-Shock Blues"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'1998': 'Miscellaneous', 'Electro-Shock Blues': 'Organization'}}
{'idx': 150, 'sentence': 'Savage lives in Saskatchewan .', 'label': "{'Saskatchewan': 'Location', 'Savage': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Savage"\n)\nLocation_entity1 = Location(\n    name = "Saskatchewan"\n)', 'prediction': {'Savage': 'Person', 'Saskatchewan': 'Location'}}
{'idx': 151, 'sentence': '" She insists on \' a clean sound \' , has banned backing vocals and says her pet hate is \' over-singing \' . "', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "clean sound"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "backing vocals"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "over-singing"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'clean sound': 'Miscellaneous', 'backing vocals': 'Miscellaneous', 'over-singing': 'Miscellaneous'}}
{'idx': 152, 'sentence': 'Because of the power of the drugs the handlers then have to move quickly to secure the animal for transport , monitor its vital signs , protect its eyes and ears , and then inject reversing drugs when needed .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "drugs"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "handlers"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "animal"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "transport"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "vital signs"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "eyes"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "ears"\n)\nMiscellaneous_entity8 = Miscellaneous(\n    name = "reversing drugs"\n)', 'prediction': {'drugs': 'Miscellaneous', 'handlers': 'Miscellaneous', 'animal': 'Miscellaneous', 'transport': 'Miscellaneous', 'vital signs': 'Miscellaneous', 'eyes': 'Miscellaneous', 'ears': 'Miscellaneous', 'reversing drugs': 'Miscellaneous'}}
{'idx': 153, 'sentence': "He began playing in 2001 and has won tournaments in Walsall , Melbourne , Luton and London ( where he won the £500 no limit hold'em event of the 200 British Open , defeating Lucy Rokach in the heads-up confrontation .", 'label': "{'Walsall': 'Location', 'British Open': 'Miscellaneous', 'Luton': 'Location', 'Lucy Rokach': 'Person', 'Melbourne': 'Location', 'London': 'Location', '200': 'Person'}", 'response': 'Location_entity1 = Location(\n    name = "Walsall"\n)\nLocation_entity2 = Location(\n    name = "Melbourne"\n)\nLocation_entity3 = Location(\n    name = "Luton"\n)\nLocation_entity4 = Location(\n    name = "London"\n)\nPerson_entity1 = Person(\n    name = "Lucy Rokach"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2001"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "£500"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "British Open"\n)', 'prediction': {'Walsall': 'Location', 'Melbourne': 'Location', 'Luton': 'Location', 'London': 'Location', 'Lucy Rokach': 'Person', '2001': 'Miscellaneous', '£500': 'Miscellaneous', 'British Open': 'Miscellaneous'}}
{'idx': 154, 'sentence': 'Citrone eventually served approximately twelve months for the offence and was ordered to pay some £370,000 as part of a Confiscation Order ordered in favour of the Crown .', 'label': "{'Crown': 'Organization', 'Citrone': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Crown"\n)', 'prediction': {'Crown': 'Organization'}}
{'idx': 155, 'sentence': 'As of 2007 his total live tournament winnings exceed $670,000 .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "2007"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "$670,000"\n)', 'prediction': {'2007': 'Miscellaneous', '$670,000': 'Miscellaneous'}}
{'idx': 156, 'sentence': 'Carmen Cavallaro ( May 6 , 1913 -- October 12 , 1989 ) was an American pianist born in New York .', 'label': "{'American': 'Miscellaneous', 'New York': 'Location', 'Carmen Cavallaro': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Carmen Cavallaro"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "May 6"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1913"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "October 12"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "1989"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "American"\n)\nLocation_entity1 = Location(\n    name = "New York"\n)', 'prediction': {'Carmen Cavallaro': 'Person', 'May 6': 'Miscellaneous', '1913': 'Miscellaneous', 'October 12': 'Miscellaneous', '1989': 'Miscellaneous', 'American': 'Miscellaneous', 'New York': 'Location'}}
{'idx': 157, 'sentence': "After four years he switched to a series of other big bands , including Rudy Vallee 's in 1937 .", 'label': "{'Rudy Vallee': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Rudy Vallee"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1937"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Rudy Vallee': 'Organization', '1937': 'Miscellaneous'}}
{'idx': 158, 'sentence': 'Cavallaro developed a piano style of glittering and rippling arpeggios to augment his melody , which was often arranged in thick and lush triple and quadruple octave chords .', 'label': "{'Cavallaro': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Cavallaro"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "piano"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "arpeggios"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "melody"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "chords"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Cavallaro': 'Person', 'piano': 'Miscellaneous', 'arpeggios': 'Miscellaneous', 'melody': 'Miscellaneous', 'chords': 'Miscellaneous'}}
{'idx': 159, 'sentence': "His most celebrated film achievement was playing the piano music for actor Tyrone Power 's hands to mime , in The Eddy Duchin Story ( 1956 ) .", 'label': "{'Tyrone Power': 'Person', 'The Eddy Duchin Story': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Tyrone Power"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "The Eddy Duchin Story"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1956"\n)', 'prediction': {'Tyrone Power': 'Person', 'The Eddy Duchin Story': 'Miscellaneous', '1956': 'Miscellaneous'}}
{'idx': 160, 'sentence': 'At the time , his father had bought tickets to a Buddy Rich concert and could not find someone to watch his son , so he took young Carter along to the show .', 'label': "{'Buddy Rich': 'Person', 'Carter': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Buddy Rich"\n)\nPerson_entity2 = Person(\n    name = "Carter"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Buddy Rich': 'Person', 'Carter': 'Person'}}
{'idx': 161, 'sentence': "Secrets would perform throughout Virginia , often at Miller's , the bar in Charlottesville where Dave Matthews worked as a bartender .", 'label': '{\'Dave Matthews\': \'Person\', \'Charlottesville\': \'Location\', "Miller\'s": \'Organization\', \'Virginia\': \'Location\'}', 'response': 'Location_entity1 = Location(\n    name = "Virginia"\n)\nOrganization_entity1 = Organization(\n    name = "Miller\'s"\n)\nLocation_entity2 = Location(\n    name = "Charlottesville"\n)\nPerson_entity1 = Person(\n    name = "Dave Matthews"\n)', 'prediction': {'Virginia': 'Location', "Miller's": 'Organization', 'Charlottesville': 'Location', 'Dave Matthews': 'Person'}}
{'idx': 162, 'sentence': 'With his second wife , Karen , he has two children : a daughter , Nadja Angelique Beauford born October 5th 2001 and a son Marcus Carrington Beauford born in December 2004 .', 'label': "{'Karen': 'Person', 'October 5th 2001': 'Person', 'Marcus Carrington Beauford': 'Person', 'Nadja Angelique Beauford': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Karen"\n)\nPerson_entity2 = Person(\n    name = "Nadja Angelique Beauford"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "October 5th 2001"\n)\nPerson_entity3 = Person(\n    name = "Marcus Carrington Beauford"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "December 2004"\n)', 'prediction': {'Karen': 'Person', 'Nadja Angelique Beauford': 'Person', 'October 5th 2001': 'Miscellaneous', 'Marcus Carrington Beauford': 'Person', 'December 2004': 'Miscellaneous'}}
{'idx': 163, 'sentence': "In 1991 , the mall expanded , adding a food court and three new anchors : Thalhimer's , JC Penney , and Sears , and was renamed Cary Towne Center .", 'label': '{\'Cary Towne Center\': \'Organization\', "Thalhimer\'s": \'Organization\', \'Sears\': \'Organization\', \'JC Penney\': \'Organization\'}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1991"\n)\nOrganization_entity1 = Organization(\n    name = "Thalhimer\'s"\n)\nOrganization_entity2 = Organization(\n    name = "JC Penney"\n)\nOrganization_entity3 = Organization(\n    name = "Sears"\n)\nOrganization_entity4 = Organization(\n    name = "Cary Towne Center"\n)', 'prediction': {'1991': 'Miscellaneous', "Thalhimer's": 'Organization', 'JC Penney': 'Organization', 'Sears': 'Organization', 'Cary Towne Center': 'Organization'}}
{'idx': 164, 'sentence': 'Cable systems in the early 1980s had far more limited channel capacity than they do today ( usually only a few dozen channels in most cities ) .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Cable systems"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1980s"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "channel capacity"\n)\nLocation_entity1 = Location(\n    name = "cities"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Cable systems': 'Miscellaneous', '1980s': 'Miscellaneous', 'channel capacity': 'Miscellaneous', 'cities': 'Location'}}
{'idx': 165, 'sentence': 'Centennial Tower and PlazaCenter are next door .', 'label': "{'PlazaCenter': 'Organization', 'Centennial Tower': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "Centennial Tower"\n)\nOrganization_entity1 = Organization(\n    name = "PlazaCenter"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Centennial Tower': 'Location', 'PlazaCenter': 'Organization'}}
{'idx': 166, 'sentence': 'He played in Single A in 2002 and recorded a 2.26 ERA which ranked him 10th in all of minor league baseball .', 'label': "{'Single A': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Single A"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2002"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2.26"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "10th"\n)\nOrganization_entity2 = Organization(\n    name = "minor league baseball"\n)', 'prediction': {'Single A': 'Organization', '2002': 'Miscellaneous', '2.26': 'Miscellaneous', '10th': 'Miscellaneous', 'minor league baseball': 'Organization'}}
{'idx': 167, 'sentence': 'On December 12 , 2004 , Gaudin was traded to the Toronto Blue Jays for backup catcher Kevin Cash .', 'label': "{'Gaudin': 'Person', 'Toronto Blue Jays': 'Organization', 'Kevin Cash': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Toronto Blue Jays"\n)\nPerson_entity1 = Person(\n    name = "Gaudin"\n)\nPerson_entity2 = Person(\n    name = "Kevin Cash"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Toronto Blue Jays': 'Organization', 'Gaudin': 'Person', 'Kevin Cash': 'Person'}}
{'idx': 168, 'sentence': 'In his first season as an Athletic , he posted various career highs and his ERA ( 3.09 ) and opponents batting average were the lowest of his career .', 'label': "{'Athletic': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Athletic"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Athletic': 'Organization'}}
{'idx': 169, 'sentence': 'The language is of the Chamicuro people who number between 10 and 20 .', 'label': "{'Chamicuro': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Chamicuro"\n)\nOrganization_entity1 = Organization(\n    name = "Chamicuro people"\n)', 'prediction': {'Chamicuro': 'Miscellaneous', 'Chamicuro people': 'Organization'}}
{'idx': 170, 'sentence': 'Champdor is a commune in the French département of Ai .', 'label': "{'Ai': 'Location', 'Champdor': 'Location', 'French': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Champdor"\n)\nLocation_entity2 = Location(\n    name = "French"\n)\nLocation_entity3 = Location(\n    name = "Ai"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Champdor': 'Location', 'French': 'Location', 'Ai': 'Location'}}
{'idx': 171, 'sentence': 'Charan Jeath Singh is a Fiji Indian who has been involved in local Government and national politics in Fiji representing various political organisations .', 'label': "{'Charan Jeath Singh': 'Person', 'Indian': 'Miscellaneous', 'Fiji': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Charan Jeath Singh"\n)\nLocation_entity1 = Location(\n    name = "Fiji"\n)\nOrganization_entity1 = Organization(\n    name = "local Government"\n)\nOrganization_entity2 = Organization(\n    name = "national politics"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Charan Jeath Singh': 'Person', 'Fiji': 'Location', 'local Government': 'Organization', 'national politics': 'Organization'}}
{'idx': 172, 'sentence': 'In the 2006 general election , he contested the Vanua Levu West Indian Communal Constituency , Fiji ) for the National Alliance Party ( NAPF ) and again lost with only 14% of the votes cast .', 'label': "{'NAPF': 'Organization', 'Vanua Levu West Indian': 'Location', 'Fiji': 'Location', 'National Alliance Party': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "National Alliance Party"\n)\nLocation_entity1 = Location(\n    name = "Fiji"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'National Alliance Party': 'Organization', 'Fiji': 'Location'}}
{'idx': 173, 'sentence': 'After just a year at Coburg he returned to the league and played with North Melbourne , becoming a regular in their side during the 1930s .', 'label': "{'Coburg': 'Organization', 'North Melbourne': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Coburg"\n)\nOrganization_entity2 = Organization(\n    name = "North Melbourne"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1930s"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Coburg': 'Organization', 'North Melbourne': 'Organization', '1930s': 'Miscellaneous'}}
{'idx': 174, 'sentence': 'It has been used as a political prison by Germans during the occupation of France from 1940 to 1944 .', 'label': "{'Germans': 'Miscellaneous', 'France': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Germans"\n)\nLocation_entity1 = Location(\n    name = "France"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1940"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1944"\n)', 'prediction': {'Germans': 'Organization', 'France': 'Location', '1940': 'Miscellaneous', '1944': 'Miscellaneous'}}
{'idx': 175, 'sentence': 'Christopher Bailey is a lecturer of English at the University of Brighton and is an occasional screenwriter for television .', 'label': "{'University of Brighton': 'Organization', 'Christopher Bailey': 'Person', 'English': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Christopher Bailey"\n)\nOrganization_entity1 = Organization(\n    name = "University of Brighton"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Christopher Bailey': 'Person', 'University of Brighton': 'Organization'}}
{'idx': 176, 'sentence': "As a result , the two Mara scripts were Bailey 's final broadcast work for both Doctor Who and television in general and he returned to a career in academia .", 'label': "{'Doctor Who': 'Miscellaneous', 'Bailey': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bailey"\n)\nOrganization_entity1 = Organization(\n    name = "Doctor Who"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bailey': 'Person', 'Doctor Who': 'Organization'}}
{'idx': 177, 'sentence': 'After a twenty minute stand-off he aimed the pistol at Lieutenant Michael Weippert , who responded by opening fire .', 'label': "{'Michael Weippert': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Lieutenant Michael Weippert"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Lieutenant Michael Weippert': 'Person'}}
{'idx': 178, 'sentence': 'The Orlando Sentinel reported that Ralph Penley was not told of events until after his son was shot .', 'label': "{'Ralph Penley': 'Person', 'Orlando Sentinel': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "Ralph Penley"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ralph Penley': 'Person'}}
{'idx': 179, 'sentence': 'It remained on the F1 calendar for 30 out of the next 34 years .', 'label': "{'F1': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "F1"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'F1': 'Organization'}}
{'idx': 180, 'sentence': 'The most famous corner in the circuit is the Tarzanbocht ( Tarzan corner ) which provides excellent overtaking opportunities .', 'label': "{'Tarzan corner': 'Location', 'Tarzanbocht': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Tarzan"\n)', 'prediction': {'Tarzan': 'Person'}}
{'idx': 181, 'sentence': "This was later converted to NASCAR 4 , NASCAR 2002 , 2003 and other simulations using a converter from website ' The Pits ' .", 'label': "{'NASCAR 4': 'Miscellaneous', 'NASCAR 2002': 'Miscellaneous', 'The Pits': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "NASCAR"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "4"\n)\nOrganization_entity2 = Organization(\n    name = "NASCAR 2002"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2003"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "simulations"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "converter"\n)\nOrganization_entity3 = Organization(\n    name = "website \' The Pits \'"\n)', 'prediction': {'NASCAR': 'Organization', '4': 'Miscellaneous', 'NASCAR 2002': 'Organization', '2003': 'Miscellaneous', 'simulations': 'Miscellaneous', 'converter': 'Miscellaneous', "website ' The Pits '": 'Organization'}}
{'idx': 182, 'sentence': 'Clergoux is a village and commune in the Corrèz département of central Franc .', 'label': "{'Franc': 'Location', 'Clergoux': 'Location', 'Corrèz': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Clergoux"\n)\nLocation_entity2 = Location(\n    name = "Corrèz"\n)\nLocation_entity3 = Location(\n    name = "Franc"\n)', 'prediction': {'Clergoux': 'Location', 'Corrèz': 'Location', 'Franc': 'Location'}}
{'idx': 183, 'sentence': 'Clinical Hospital Mostar ( Croatian Klinička bolnica Mostar ) is the largest hospital in Mostar , Bosnia and Herzegovina .', 'label': "{'Mostar': 'Location', 'Clinical Hospital Mostar': 'Organization', 'Croatian': 'Miscellaneous', 'Bosnia and Herzegovina': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Clinical Hospital Mostar"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Croatian Klinička bolnica Mostar"\n)\nLocation_entity1 = Location(\n    name = "Mostar"\n)\nLocation_entity2 = Location(\n    name = "Bosnia and Herzegovina"\n)', 'prediction': {'Clinical Hospital Mostar': 'Organization', 'Croatian Klinička bolnica Mostar': 'Miscellaneous', 'Mostar': 'Location', 'Bosnia and Herzegovina': 'Location'}}
{'idx': 184, 'sentence': 'The Cold Spring Harbor Laboratory ( CSHL ) is a private , non-profit institution with research programs focusing on cancer , neurobiology , plant genetics , genomics and bioinformatics .', 'label': "{'CSHL': 'Organization', 'Cold Spring Harbor Laboratory': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Cold Spring Harbor Laboratory"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "CSHL"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "private"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "non-profit"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "cancer"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "neurobiology"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "plant genetics"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "genomics"\n)\nMiscellaneous_entity8 = Miscellaneous(\n    name = "bioinformatics"\n)', 'prediction': {'Cold Spring Harbor Laboratory': 'Organization', 'CSHL': 'Miscellaneous', 'private': 'Miscellaneous', 'non-profit': 'Miscellaneous', 'cancer': 'Miscellaneous', 'neurobiology': 'Miscellaneous', 'plant genetics': 'Miscellaneous', 'genomics': 'Miscellaneous', 'bioinformatics': 'Miscellaneous'}}
{'idx': 185, 'sentence': "The Carnegie Institution Department of Genetics scientists at Cold Spring Harbor made innumerable contributions to the sciences of genetics , medicine , and the then-infant science of molecular biology , and in 1962 its facilities merged with those of The Brooklyn Institute 's Biological Laboratory to create what is known today as Cold Spring Harbor Laboratory .", 'label': "{'Cold Spring Harbor Laboratory': 'Organization', 'Carnegie Institution Department of Genetics': 'Organization', 'Cold Spring Harbor': 'Organization', 'The Brooklyn Institute': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Carnegie Institution Department of Genetics"\n)\nLocation_entity1 = Location(\n    name = "Cold Spring Harbor"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1962"\n)\nOrganization_entity2 = Organization(\n    name = "Brooklyn Institute"\n)\nOrganization_entity3 = Organization(\n    name = "Biological Laboratory"\n)\nOrganization_entity4 = Organization(\n    name = "Cold Spring Harbor Laboratory"\n)', 'prediction': {'Carnegie Institution Department of Genetics': 'Organization', 'Cold Spring Harbor': 'Location', '1962': 'Miscellaneous', 'Brooklyn Institute': 'Organization', 'Biological Laboratory': 'Organization', 'Cold Spring Harbor Laboratory': 'Organization'}}
{'idx': 186, 'sentence': 'Currently , cancer biologist Bruce Stillman serves as laboratory President .', 'label': "{'Bruce Stillman': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bruce Stillman"\n)\nOrganization_entity1 = Organization(\n    name = "laboratory"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bruce Stillman': 'Person', 'laboratory': 'Organization'}}
{'idx': 187, 'sentence': 'Aside from its scientific mission , the laboratory is host to world-class scientific conferences on a variety of topics .', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "laboratory"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'laboratory': 'Organization'}}
{'idx': 188, 'sentence': 'Salvador Luria and Max Delbrüc founded the Phage Course in 1948 , a course that trained many of the leaders of the new field of molecular genetics .', 'label': "{'Salvador Luria': 'Person', 'Max Delbrüc': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Salvador Luria"\n)\nPerson_entity2 = Person(\n    name = "Max Delbrüc"\n)\nOrganization_entity1 = Organization(\n    name = "Phage Course"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1948"\n)', 'prediction': {'Salvador Luria': 'Person', 'Max Delbrüc': 'Person', 'Phage Course': 'Organization', '1948': 'Miscellaneous'}}
{'idx': 189, 'sentence': 'It is part of the Coleman Federal Correctional Complex .', 'label': "{'Coleman Federal Correctional Complex': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Coleman Federal Correctional Complex"\n)', 'prediction': {'Coleman Federal Correctional Complex': 'Location'}}
{'idx': 190, 'sentence': 'Held since 1990 , the tournament is played on outdoor hardcourts .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1990"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "tournament"\n)\nLocation_entity1 = Location(\n    name = "outdoor hardcourts"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'1990': 'Miscellaneous', 'tournament': 'Miscellaneous', 'outdoor hardcourts': 'Location'}}
{'idx': 191, 'sentence': 'Later it became a 6/40 game .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "6/40"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'6/40': 'Miscellaneous'}}
{'idx': 192, 'sentence': 'Top-prize winners choose lump sum or annuity within 60 days of claiming the jackpot .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Top-prize"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "60 days"\n)\nOrganization_entity1 = Organization(\n    name = "jackpot"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Top-prize': 'Miscellaneous', '60 days': 'Miscellaneous', 'jackpot': 'Organization'}}
{'idx': 193, 'sentence': 'A Classic Lotto jackpot of $3.5 million ( annuity ) on a ticket bought in February 2006 went unclaimed .', 'label': "{'Classic Lotto': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Classic Lotto"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "February 2006"\n)', 'prediction': {'Classic Lotto': 'Miscellaneous', 'February 2006': 'Miscellaneous'}}
{'idx': 194, 'sentence': 'It is currently served by the South West Trains , Southern , and First Great Western train operating companies .', 'label': "{'First Great Western': 'Organization', 'South West Trains': 'Organization', 'Southern': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "South West Trains"\n)\nOrganization_entity2 = Organization(\n    name = "Southern"\n)\nOrganization_entity3 = Organization(\n    name = "First Great Western"\n)', 'prediction': {'South West Trains': 'Organization', 'Southern': 'Organization', 'First Great Western': 'Organization'}}
{'idx': 195, 'sentence': 'Crazyhead are an English punk rock / garage rock band from Leicester .', 'label': "{'Crazyhead': 'Organization', 'English': 'Miscellaneous', 'Leicester': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Crazyhead"\n)\nLocation_entity1 = Location(\n    name = "Leicester"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Crazyhead': 'Organization', 'Leicester': 'Location'}}
{'idx': 196, 'sentence': 'Their second single " Baby Turpentine " reached number 4 in the Indie Chart .', 'label': "{'Baby Turpentine': 'Miscellaneous', 'Indie Chart': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Baby Turpentine"\n)\nOrganization_entity1 = Organization(\n    name = "Indie Chart"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Baby Turpentine': 'Miscellaneous', 'Indie Chart': 'Organization'}}
{'idx': 197, 'sentence': 'Later that year they played at the Namibian Independence Day concert to an audience of 50,000 .', 'label': "{'Namibian Independence Day concert': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Namibian Independence Day concert"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Namibian Independence Day concert': 'Location'}}
{'idx': 198, 'sentence': 'They started recording material for a new album , but the departure of Anderson to work abroad meant the end of the band .', 'label': "{'Anderson': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "band"\n)\nPerson_entity1 = Person(\n    name = "Anderson"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'band': 'Organization', 'Anderson': 'Person'}}
{'idx': 199, 'sentence': 'The partnership went public in 1994 , trading under the stock symbol CRO on the New York Stock Exchange .', 'label': "{'New York Stock Exchange': 'Organization'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1994"\n)\nOrganization_entity1 = Organization(\n    name = "CRO"\n)\nLocation_entity1 = Location(\n    name = "New York Stock Exchange"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'1994': 'Miscellaneous', 'CRO': 'Organization', 'New York Stock Exchange': 'Location'}}
{'idx': 200, 'sentence': 'He was born in Humberstone Township in 1825 , the son of John Near , and grew up there .', 'label': "{'John Near': 'Person', 'Humberstone Township': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Humberstone Township"\n)\nPerson_entity1 = Person(\n    name = "John Near"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Humberstone Township': 'Location', 'John Near': 'Person'}}
{'idx': 201, 'sentence': 'Prodan won five consecutive league titles with Steaua before moving to play in Spain .', 'label': "{'Spain': 'Location', 'Steaua': 'Organization', 'Prodan': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Steaua"\n)\nLocation_entity1 = Location(\n    name = "Spain"\n)', 'prediction': {'Steaua': 'Organization', 'Spain': 'Location'}}
{'idx': 202, 'sentence': 'He specialises in algebra and group theory .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "algebra"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "group theory"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'algebra': 'Miscellaneous', 'group theory': 'Miscellaneous'}}
{'idx': 203, 'sentence': 'It was released in 2003 on Aftermath Records .', 'label': "{'Aftermath Records': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Aftermath Records"\n)\n\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2003"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Aftermath Records': 'Organization', '2003': 'Miscellaneous'}}
{'idx': 204, 'sentence': "The band 's music has been described as electro / synthpop with a slightly sombre overtone and introverted lyrical sensibility .", 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "band"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "music"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "electro"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "synthpop"\n)', 'prediction': {'band': 'Organization', 'music': 'Miscellaneous', 'electro': 'Miscellaneous', 'synthpop': 'Miscellaneous'}}
{'idx': 205, 'sentence': 'The band were recently selected to play on the 6th series of the acclaimed RTÉ music show Other Voices .', 'label': "{'RTÉ': 'Organization', 'Other Voices': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "RTÉ"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Other Voices"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'RTÉ': 'Organization', 'Other Voices': 'Miscellaneous'}}
{'idx': 206, 'sentence': 'The start was given in 1990 with the first Cyrillic fonts in the PostScript format , the first Laser printer with in - built Cyrillic fonts in 1991 and the first professional program for complete Cyrillic support under MS Windows - the Flex Type - in 1992 .', 'label': "{'Cyrillic': 'Miscellaneous', 'MS': 'Organization', 'Windows': 'Miscellaneous', 'Flex Type': 'Miscellaneous', 'PostScript': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1990"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "PostScript"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "1991"\n)\nOrganization_entity1 = Organization(\n    name = "MS Windows"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "Flex Type"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "1992"\n)', 'prediction': {'1990': 'Miscellaneous', 'PostScript': 'Miscellaneous', '1991': 'Miscellaneous', 'MS Windows': 'Organization', 'Flex Type': 'Miscellaneous', '1992': 'Miscellaneous'}}
{'idx': 207, 'sentence': 'In only a few years - and 100 000 devices sold in 11 countries around the World - Datecs became the best known brand of electronic cash registers with fiscal memory in Central and Eastern Europe .', 'label': "{'Central and Eastern Europe': 'Location', 'Datecs': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Datecs"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "World"\n)\nLocation_entity1 = Location(\n    name = "Central and Eastern Europe"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Datecs': 'Organization', 'World': 'Miscellaneous', 'Central and Eastern Europe': 'Location'}}
{'idx': 208, 'sentence': 'Snoke received his PhD in physics from the University of Illinois at Urbana-Champaign .', 'label': "{'Urbana-Champaign': 'Location', 'University of Illinois': 'Organization', 'Snoke': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "University of Illinois at Urbana-Champaign"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'University of Illinois at Urbana-Champaign': 'Organization'}}
{'idx': 209, 'sentence': "In 2004 co-authored an article , with Michael Behe , a senior fellow of the Discovery Institute 's Center for Science and Culture , in the scientific journal Protein Science , which received widespread criticism .", 'label': "{'Center for Science and Culture': 'Organization', 'Discovery Institute': 'Organization', 'Protein Science': 'Organization', 'Michael Behe': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Michael Behe"\n)\nOrganization_entity1 = Organization(\n    name = "Discovery Institute"\n)\nOrganization_entity2 = Organization(\n    name = "Center for Science and Culture"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Protein Science"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Michael Behe': 'Person', 'Discovery Institute': 'Organization', 'Center for Science and Culture': 'Organization', 'Protein Science': 'Miscellaneous'}}
{'idx': 210, 'sentence': 'In his ruling , Judge Jones noted that " A review of the article indicates that it does not mention either irreducible complexity or ID .', 'label': "{'Jones': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Judge Jones"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Judge Jones': 'Person'}}
{'idx': 211, 'sentence': 'Davis Gym could hold around 1,100 people .', 'label': "{'Davis Gym': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Davis Gym"\n)', 'prediction': {'Davis Gym': 'Organization'}}
{'idx': 212, 'sentence': 'In return Magedson filed a lawsuit under RICO .', 'label': "{'RICO': 'Miscellaneous', 'Magedson': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "RICO"\n)\nPerson_entity1 = Person(\n    name = "Magedson"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'RICO': 'Organization', 'Magedson': 'Person'}}
{'idx': 213, 'sentence': "A descendant of farmer immigrants from Bentheim , Germany , Langejans was born and raised in Holland , Michigan , where his luthier shop keeps him busy building guitars for such notable musicians as Thom Bresh ( Merle Travis 's son ) and Jars of Clay .", 'label': "{'Thom Bresh': 'Person', 'Germany': 'Location', 'Merle Travis': 'Person', 'Langejans': 'Person', 'Holland': 'Location', 'Jars of Clay': 'Organization', 'Bentheim': 'Location', 'Michigan': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Langejans"\n)\nLocation_entity1 = Location(\n    name = "Bentheim"\n)\nLocation_entity2 = Location(\n    name = "Germany"\n)\nLocation_entity3 = Location(\n    name = "Holland"\n)\nLocation_entity4 = Location(\n    name = "Michigan"\n)\nOrganization_entity1 = Organization(\n    name = "Jars of Clay"\n)\nPerson_entity2 = Person(\n    name = "Thom Bresh"\n)\nPerson_entity3 = Person(\n    name = "Merle Travis"\n)', 'prediction': {'Langejans': 'Person', 'Bentheim': 'Location', 'Germany': 'Location', 'Holland': 'Location', 'Michigan': 'Location', 'Jars of Clay': 'Organization', 'Thom Bresh': 'Person', 'Merle Travis': 'Person'}}
{'idx': 214, 'sentence': 'He has made over 1200 guitars as of 2006 , many of them custom-made-to-order , putting Langejans guitars in the hands of numerous stars from all genre of music .', 'label': "{'Langejans': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Langejans guitars"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Langejans guitars': 'Organization'}}
{'idx': 215, 'sentence': 'The standard production time is generally one year .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "one year"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'one year': 'Miscellaneous'}}
{'idx': 216, 'sentence': 'I Dewa Gede Budjana or Dewa Budjana ( born August 30 , 1963 in Waikabubak ) is an Indonesian guitarist , songwriter and composer .', 'label': "{'Waikabubak': 'Location', 'Dewa Budjana': 'Person', 'I Dewa Gede Budjana': 'Person', 'Indonesian': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Dewa Gede Budjana"\n)\nPerson_entity2 = Person(\n    name = "Dewa Budjana"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "August 30 , 1963"\n)\nLocation_entity1 = Location(\n    name = "Waikabubak"\n)\nOrganization_entity1 = Organization(\n    name = "Indonesian"\n)', 'prediction': {'Dewa Gede Budjana': 'Person', 'Dewa Budjana': 'Person', 'August 30 , 1963': 'Miscellaneous', 'Waikabubak': 'Location', 'Indonesian': 'Organization'}}
{'idx': 217, 'sentence': "Budjana 's passion and talent in music , especially guitar , has been very dominant since he was in an elementary school in Klungkung , Bali .", 'label': "{'Klungkung': 'Location', 'Bali': 'Location', 'Budjana': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Budjana"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "music"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "guitar"\n)\nLocation_entity1 = Location(\n    name = "Klungkung"\n)\nLocation_entity2 = Location(\n    name = "Bali"\n)', 'prediction': {'Budjana': 'Person', 'music': 'Miscellaneous', 'guitar': 'Miscellaneous', 'Klungkung': 'Location', 'Bali': 'Location'}}
{'idx': 218, 'sentence': "In 1976 , when he was thirteen , Budjana 's name started to be seen in the music world in Surabaya .", 'label': "{'Budjana': 'Person', 'Surabaya': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Budjana"\n)\nLocation_entity1 = Location(\n    name = "Surabaya"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1976"\n)', 'prediction': {'Budjana': 'Person', 'Surabaya': 'Location', '1976': 'Miscellaneous'}}
{'idx': 219, 'sentence': 'One year after that , Budjana decided to fly to Jakarta in order to expand his music career .', 'label': "{'Budjana': 'Person', 'Jakarta': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Budjana"\n)\nLocation_entity1 = Location(\n    name = "Jakarta"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Budjana': 'Person', 'Jakarta': 'Location'}}
{'idx': 220, 'sentence': 'His current band , Gigi , was formed in 1994 with Baron ( guitar ) , Thomas ( bass ) , Armand ( vocal ) and Ronald ( drum ) .', 'label': "{'Ronald': 'Person', 'Gigi': 'Organization', 'Armand': 'Person', 'Baron': 'Person', 'Thomas': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Gigi"\n)\nPerson_entity1 = Person(\n    name = "Baron"\n)\nPerson_entity2 = Person(\n    name = "Thomas"\n)\nPerson_entity3 = Person(\n    name = "Armand"\n)\nPerson_entity4 = Person(\n    name = "Ronald"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Gigi': 'Organization', 'Baron': 'Person', 'Thomas': 'Person', 'Armand': 'Person', 'Ronald': 'Person'}}
{'idx': 221, 'sentence': "Spain allied with France during the Seven Years ' War against Great Britain .", 'label': '{\'Great Britain\': \'Location\', \'France\': \'Location\', \'Spain\': \'Location\', "Seven Years \' War": \'Miscellaneous\'}', 'response': 'Organization_entity1 = Organization(\n    name = "Spain"\n)\nOrganization_entity2 = Organization(\n    name = "France"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Seven Years \' War"\n)\nOrganization_entity3 = Organization(\n    name = "Great Britain"\n)', 'prediction': {'Spain': 'Organization', 'France': 'Organization', "Seven Years ' War": 'Miscellaneous', 'Great Britain': 'Organization'}}
{'idx': 222, 'sentence': 'The British force never materialized .', 'label': "{'British': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "British force"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'British force': 'Organization'}}
{'idx': 223, 'sentence': 'She fled again to Abra , where she was captured .', 'label': "{'Abra': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Abra"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Abra': 'Location'}}
{'idx': 224, 'sentence': 'Digilogue is a music album of recordings which became the twentieth commercial release by the British avant-garde music group : zoviet*france : .', 'label': "{'British': 'Miscellaneous', 'zoviet*france': 'Organization', 'Digilogue': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "zoviet*france"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'zoviet*france': 'Organization'}}
{'idx': 225, 'sentence': 'digilogue was recorded using a mixture of failing analogue equipment and high-end digital equipment , and monitored in our studio exclusively on damaged hi-fi speakers .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "digilogue"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "analogue"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "digital"\n)\nOrganization_entity1 = Organization(\n    name = "studio"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "hi-fi speakers"\n)', 'prediction': {'digilogue': 'Miscellaneous', 'analogue': 'Miscellaneous', 'digital': 'Miscellaneous', 'studio': 'Organization', 'hi-fi speakers': 'Miscellaneous'}}
{'idx': 226, 'sentence': '1996 edition', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1996 edition"\n)', 'prediction': {'1996 edition': 'Miscellaneous'}}
{'idx': 227, 'sentence': "The island of Divar ( Divar-derived from the word Dipavati or ' small Island ' in Konkani ) lies in the state of Goa , India .", 'label': "{'Goa': 'Location', 'Konkani': 'Miscellaneous', 'Divar': 'Location', 'India': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Divar"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Dipavati"\n)\nLocation_entity2 = Location(\n    name = "Goa"\n)\nLocation_entity3 = Location(\n    name = "India"\n)', 'prediction': {'Divar': 'Location', 'Dipavati': 'Miscellaneous', 'Goa': 'Location', 'India': 'Location'}}
{'idx': 228, 'sentence': 'Though in a manner equally typical of modern Goa , of late the paddy fields lie fallow and overrun with weeds .', 'label': "{'Goa': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Goa"\n)', 'prediction': {'Goa': 'Location'}}
{'idx': 229, 'sentence': 'It was destroyed by the sultan of the Deccan in the middle of the 14th century and reconstructed at the same locality by Madhav Mantri of Vijaynagar at the close of the same century .', 'label': "{'Vijaynagar': 'Location', 'Madhav Mantri': 'Person', 'Deccan': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Deccan"\n)\nPerson_entity1 = Person(\n    name = "Madhav Mantri"\n)\nOrganization_entity2 = Organization(\n    name = "Vijaynagar"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Deccan': 'Organization', 'Madhav Mantri': 'Person', 'Vijaynagar': 'Organization'}}
{'idx': 230, 'sentence': 'And on the foundations of the same temple a prayer and catechism house was constructed in 1563 , which was later transformed into the chapel of Our Lady of Cande laria . "', 'label': "{'Our Lady of Cande laria': 'Person'}", 'response': 'Location_entity1 = Location(\n    name = "temple"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "prayer"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "catechism house"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "1563"\n)\nOrganization_entity1 = Organization(\n    name = "chapel"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "Lady of Candelaria"\n)', 'prediction': {'temple': 'Location', 'prayer': 'Miscellaneous', 'catechism house': 'Miscellaneous', '1563': 'Miscellaneous', 'chapel': 'Organization', 'Lady of Candelaria': 'Miscellaneous'}}
{'idx': 231, 'sentence': 'Bonderam Festival : The festival is a memoir to the dispute and the fury of the Villagers over the Portuguese system of resolving the disputes .', 'label': "{'Bonderam Festival': 'Miscellaneous', 'Portuguese': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Bonderam Festival"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Portuguese"\n)', 'prediction': {'Bonderam Festival': 'Miscellaneous', 'Portuguese': 'Miscellaneous'}}
{'idx': 232, 'sentence': 'Each section of the village has a float at the parade .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "village"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "float"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "parade"\n)', 'prediction': {'village': 'Location', 'float': 'Miscellaneous', 'parade': 'Miscellaneous'}}
{'idx': 233, 'sentence': 'Unfortunately though , every time the bell was struck , it shattered the windows of the church and the houses in the vicinity , so a deal was struck and the bell was exchanged with that of the Se Cathedral .', 'label': "{'Se Cathedral': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "church"\n)\nLocation_entity2 = Location(\n    name = "houses"\n)\nLocation_entity3 = Location(\n    name = "vicinity"\n)\nOrganization_entity1 = Organization(\n    name = "Se Cathedral"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'church': 'Location', 'houses': 'Location', 'vicinity': 'Location', 'Se Cathedral': 'Organization'}}
{'idx': 234, 'sentence': 'Their son , Philipp Veit , would later become part of a circle of German Christian painters called " the Nazarenes , " who influenced the later English painters in the Pre-Raphaelite Brotherhood .', 'label': "{'German Christian': 'Miscellaneous', 'the Nazarenes': 'Organization', 'Pre-Raphaelite Brotherhood': 'Organization', 'English': 'Miscellaneous', 'Philipp Veit': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Philipp Veit"\n)\nOrganization_entity1 = Organization(\n    name = "the Nazarenes"\n)\nOrganization_entity2 = Organization(\n    name = "the Pre-Raphaelite Brotherhood"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Philipp Veit': 'Person', 'the Nazarenes': 'Organization', 'the Pre-Raphaelite Brotherhood': 'Organization'}}
{'idx': 235, 'sentence': 'They lived in Paris from 1802 until 1804 , and after her divorce they married as Protestants .', 'label': "{'Protestants': 'Miscellaneous', 'Paris': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Paris"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1802"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1804"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Protestants"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Paris': 'Location', '1802': 'Miscellaneous', '1804': 'Miscellaneous', 'Protestants': 'Miscellaneous'}}
{'idx': 236, 'sentence': 'There , she lived with her son Philipp ( also a convert to a medieval style of Catholicism ) until her death in 1839 .', 'label': "{'Philipp': 'Person', 'Catholicism': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Philipp"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "medieval style of Catholicism"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1839"\n)', 'prediction': {'Philipp': 'Person', 'medieval style of Catholicism': 'Miscellaneous', '1839': 'Miscellaneous'}}
{'idx': 237, 'sentence': 'Her nephew was Felix Mendelssohn , the composer , who with his sister , Fanny , were considered nearly the equals of the Mozarts as child prodigies .', 'label': "{'Mozarts': 'Person', 'Felix Mendelssohn': 'Person', 'Fanny': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Felix Mendelssohn"\n)\nPerson_entity2 = Person(\n    name = "Fanny"\n)', 'prediction': {'Felix Mendelssohn': 'Person', 'Fanny': 'Person'}}
{'idx': 238, 'sentence': 'For some Jews , she may be a less than admirable figure as well , having left her Jewish husband , violated her divorce settlement , and converted first to Protestantism ( which was favorable towards Judaism ) , and finally to Catholicism ( which was not ) .', 'label': "{'Judaism': 'Miscellaneous', 'Jews': 'Miscellaneous', 'Protestantism': 'Miscellaneous', 'Jewish': 'Miscellaneous', 'Catholicism': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Jews"\n)\nPerson_entity2 = Person(\n    name = "husband"\n)\nPerson_entity3 = Person(\n    name = "Protestantism"\n)\nPerson_entity4 = Person(\n    name = "Catholicism"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Jews': 'Person', 'husband': 'Person', 'Protestantism': 'Person', 'Catholicism': 'Person'}}
{'idx': 239, 'sentence': '[ 1 ] In older literature and on her gravestone one finds the date 1763 , but this is the birthyear of her older sister Sara ( May 23rd 1763-April 15 1764 ) whose untimely death was one of the reasons Moses Mendelssohn wrote the Phaedon .', 'label': "{'Moses Mendelssohn': 'Person', 'Sara': 'Person', 'Phaedon': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Sara"\n)\nPerson_entity2 = Person(\n    name = "Moses Mendelssohn"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Phaedon"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "May 23rd 1763"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "April 15 1764"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Sara': 'Person', 'Moses Mendelssohn': 'Person', 'Phaedon': 'Miscellaneous', 'May 23rd 1763': 'Miscellaneous', 'April 15 1764': 'Miscellaneous'}}
{'idx': 240, 'sentence': 'Stylistically , the tracks range from industrial metal to goth and electronica .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "industrial metal"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "goth"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "electronica"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'industrial metal': 'Miscellaneous', 'goth': 'Miscellaneous', 'electronica': 'Miscellaneous'}}
{'idx': 241, 'sentence': 'Six foot , three inches tall and 215 pounds in his prime , Bobick was part of a boxing family and grew up with the sport in the 1960s .', 'label': "{'Bobick': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bobick"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1960s"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bobick': 'Person', '1960s': 'Miscellaneous'}}
{'idx': 242, 'sentence': 'Bobick trained with and was managed by heavyweight legend Joe Frazier .', 'label': "{'Joe Frazier': 'Person', 'Bobick': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bobick"\n)\nPerson_entity2 = Person(\n    name = "Joe Frazier"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bobick': 'Person', 'Joe Frazier': 'Person'}}
{'idx': 243, 'sentence': 'Knockout wins that year included Ted Gullick and future champion Mike Weaver .', 'label': "{'Mike Weaver': 'Person', 'Ted Gullick': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Ted Gullick"\n)\nPerson_entity2 = Person(\n    name = "Mike Weaver"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ted Gullick': 'Person', 'Mike Weaver': 'Person'}}
{'idx': 244, 'sentence': 'He was now being dodged by some , but a win over Randy Neumann proved he could not be ignored .', 'label': "{'Randy Neumann': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Randy Neumann"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Randy Neumann': 'Person'}}
{'idx': 245, 'sentence': 'Norton connected first and very hard .', 'label': "{'Norton': 'Person'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Norton"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Norton': 'Miscellaneous'}}
{'idx': 246, 'sentence': "He finished the year 1977 40-1 with 36 KO's .", 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1977"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "40-1"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "36 KO\'s"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'1977': 'Miscellaneous', '40-1': 'Miscellaneous', "36 KO's": 'Miscellaneous'}}
{'idx': 247, 'sentence': 'All four of his pro losses were by KO .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "four"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "pro"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "KO"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'four': 'Miscellaneous', 'pro': 'Miscellaneous', 'KO': 'Miscellaneous'}}
{'idx': 248, 'sentence': 'No. 18 later moved to northern Australia , No. 120 to Western Australia and later transferring overseas ..', 'label': "{'Western Australia': 'Location', 'No. 120': 'Organization', 'Australia': 'Location', 'No. 18': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "northern Australia"\n)\nLocation_entity2 = Location(\n    name = "Western Australia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'northern Australia': 'Location', 'Western Australia': 'Location'}}
{'idx': 249, 'sentence': 'Henry Eberhard Faber is the namesake for both the college in Animal House and the character Faber in Fahrenheit 451 .', 'label': "{'Henry Eberhard Faber': 'Person', 'Fahrenheit 451': 'Miscellaneous', 'Animal House': 'Miscellaneous', 'Faber': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Henry Eberhard Faber"\n)\nOrganization_entity1 = Organization(\n    name = "Animal House"\n)\nPerson_entity2 = Person(\n    name = "Faber"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Fahrenheit 451"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Henry Eberhard Faber': 'Person', 'Animal House': 'Organization', 'Faber': 'Person', 'Fahrenheit 451': 'Miscellaneous'}}
{'idx': 250, 'sentence': 'In 1885 Hitzig became a professor at the University of Halle , where he remained until his retirement in 1903 .', 'label': "{'University of Halle': 'Organization', 'Hitzig': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Hitzig"\n)\nOrganization_entity1 = Organization(\n    name = "University of Halle"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1885"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1903"\n)', 'prediction': {'Hitzig': 'Person', 'University of Halle': 'Organization', '1885': 'Miscellaneous', '1903': 'Miscellaneous'}}
{'idx': 251, 'sentence': 'In 1870 Hitzig published his findings in an essay called " On the Electrical Excitability of the Cerebrum " . This experimentation was considered the first time anyone had done any " localized study " regarding the brain and electrical current .', 'label': "{'On the Electrical Excitability of the Cerebrum': 'Miscellaneous', 'Hitzig': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Hitzig"\n)\n\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1870"\n)\n\nMiscellaneous_entity2 = Miscellaneous(\n    name = "On the Electrical Excitability of the Cerebrum"\n)\n\nMiscellaneous_entity3 = Miscellaneous(\n    name = "localized study"\n)\n\nMiscellaneous_entity4 = Miscellaneous(\n    name = "brain"\n)\n\nMiscellaneous_entity5 = Miscellaneous(\n    name = "electrical current"\n)', 'prediction': {'Hitzig': 'Person', '1870': 'Miscellaneous', 'On the Electrical Excitability of the Cerebrum': 'Miscellaneous', 'localized study': 'Miscellaneous', 'brain': 'Miscellaneous', 'electrical current': 'Miscellaneous'}}
{'idx': 252, 'sentence': 'In the late 1930s in Budapest the restaurant owner László hires the pianist András to play in his restaurant .', 'label': "{'László': 'Person', 'András': 'Person', 'Budapest': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Budapest"\n)\nPerson_entity1 = Person(\n    name = "László"\n)\nPerson_entity2 = Person(\n    name = "András"\n)', 'prediction': {'Budapest': 'Location', 'László': 'Person', 'András': 'Person'}}
{'idx': 253, 'sentence': 'After a few years Nazi Germany captures Budapest and Hans returns .', 'label': "{'Hans': 'Person', 'Nazi Germany': 'Location', 'Budapest': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Nazi Germany"\n)\nLocation_entity1 = Location(\n    name = "Budapest"\n)\nPerson_entity1 = Person(\n    name = "Hans"\n)', 'prediction': {'Nazi Germany': 'Organization', 'Budapest': 'Location', 'Hans': 'Person'}}
{'idx': 254, 'sentence': 'The street was built in the 1880s and now hosts Brixton Market , selling a mix of African , Caribbean , English , Portuguese and Chinese products .', 'label': "{'Chinese': 'Miscellaneous', 'Caribbean': 'Miscellaneous', 'Portuguese': 'Miscellaneous', 'Brixton Market': 'Organization', 'African': 'Miscellaneous', 'English': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Brixton Market"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1880s"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "African"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Caribbean"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "English"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "Portuguese"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "Chinese"\n)', 'prediction': {'Brixton Market': 'Location', '1880s': 'Miscellaneous', 'African': 'Miscellaneous', 'Caribbean': 'Miscellaneous', 'English': 'Miscellaneous', 'Portuguese': 'Miscellaneous', 'Chinese': 'Miscellaneous'}}
{'idx': 255, 'sentence': 'Production at Elm Coulee has more than doubled the oil output of the state of Montana .', 'label': "{'Montana': 'Location', 'Elm Coulee': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Elm Coulee"\n)\nLocation_entity2 = Location(\n    name = "Montana"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Elm Coulee': 'Location', 'Montana': 'Location'}}
{'idx': 256, 'sentence': 'In 1942 , along with Dr. Haidar Abdel-Shafi , and the late Mukhlis Amer , Emil Habibi and Mufid Nashashibi , Touma was a founder of the Palestinian National Liberation League .', 'label': "{'Emil Habibi': 'Person', 'Mukhlis Amer': 'Person', 'Touma': 'Person', 'Palestinian National Liberation League': 'Organization', 'Haidar Abdel-Shafi': 'Person', 'Mufid Nashashibi': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Dr. Haidar Abdel-Shafi"\n)\nPerson_entity2 = Person(\n    name = "Mukhlis Amer"\n)\nPerson_entity3 = Person(\n    name = "Emil Habibi"\n)\nPerson_entity4 = Person(\n    name = "Mufid Nashashibi"\n)\nOrganization_entity1 = Organization(\n    name = "Palestinian National Liberation League"\n)', 'prediction': {'Dr. Haidar Abdel-Shafi': 'Person', 'Mukhlis Amer': 'Person', 'Emil Habibi': 'Person', 'Mufid Nashashibi': 'Person', 'Palestinian National Liberation League': 'Organization'}}
{'idx': 257, 'sentence': 'Eugenio Calabi ( born 1923 ) is an Italian-American mathematician and professor emeritus at the University of Pennsylvania , specializing in differential geometry , partial differential equations and their applications .', 'label': "{'University of Pennsylvania': 'Organization', 'Eugenio Calabi': 'Person', 'Italian-American': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Eugenio Calabi"\n)\nOrganization_entity1 = Organization(\n    name = "University of Pennsylvania"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1923"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Italian-American"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "mathematician"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "professor emeritus"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "differential geometry"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "partial differential equations"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "applications"\n)', 'prediction': {'Eugenio Calabi': 'Person', 'University of Pennsylvania': 'Organization', '1923': 'Miscellaneous', 'Italian-American': 'Miscellaneous', 'mathematician': 'Miscellaneous', 'professor emeritus': 'Miscellaneous', 'differential geometry': 'Miscellaneous', 'partial differential equations': 'Miscellaneous', 'applications': 'Miscellaneous'}}
{'idx': 258, 'sentence': 'Scott Chair of Mathematics at the University of Pennsylvania in 1967 .', 'label': "{'University of Pennsylvania': 'Organization', 'Scott': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "University of Pennsylvania"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1967"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'University of Pennsylvania': 'Organization', '1967': 'Miscellaneous'}}
{'idx': 259, 'sentence': 'The trains designated as Express Nakhonphink are Train No. 1 for Bangkok - Chiang Mai and Train No. 2 for Chiang Mai - Bangkok .', 'label': "{'Bangkok': 'Location', 'Express Nakhonphink': 'Miscellaneous', 'Chiang Mai': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Express Nakhonphink"\n)\nOrganization_entity2 = Organization(\n    name = "Bangkok"\n)\nLocation_entity1 = Location(\n    name = "Chiang Mai"\n)\nLocation_entity2 = Location(\n    name = "Bangkok"\n)', 'prediction': {'Express Nakhonphink': 'Organization', 'Bangkok': 'Location', 'Chiang Mai': 'Location'}}
{'idx': 260, 'sentence': 'EZ2DJ is a series of music video games created by the South Korean company Amuseworld .', 'label': "{'Amuseworld': 'Organization', 'EZ2DJ': 'Miscellaneous', 'South Korean': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Amuseworld"\n)\nLocation_entity1 = Location(\n    name = "South Korean"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Amuseworld': 'Organization', 'South Korean': 'Location'}}
{'idx': 261, 'sentence': 'Ez2DJ 2nd TraX - It Rules Once Again - ( October , 2000 )', 'label': "{'Ez2DJ 2nd TraX - It Rules Once Again': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Ez2DJ 2nd TraX"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "October"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "2000"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ez2DJ 2nd TraX': 'Miscellaneous', 'October': 'Miscellaneous', '2000': 'Miscellaneous'}}
{'idx': 262, 'sentence': 'Ez2DJ 7th TraX - Resistance - Version 1.50 ( December , 2007 )', 'label': "{'Ez2DJ 7th TraX - Resistance - Version 1.50': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Ez2DJ 7th TraX"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Resistance"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Version 1.50"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "December"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "2007"\n)', 'prediction': {'Ez2DJ 7th TraX': 'Miscellaneous', 'Resistance': 'Miscellaneous', 'Version 1.50': 'Miscellaneous', 'December': 'Miscellaneous', '2007': 'Miscellaneous'}}
{'idx': 263, 'sentence': 'However , unlike the Beatmania series ( including III and IIDX ) , depending on the gamemode , effector button are treated as a gameplay button , especially in the gamemode " Radio Mix " , where each player need to control 2 effector buttons .', 'label': "{'III': 'Miscellaneous', 'Beatmania': 'Miscellaneous', 'IIDX': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Beatmania"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "III"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "IIDX"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "Radio Mix"\n)', 'prediction': {'Beatmania': 'Miscellaneous', 'III': 'Miscellaneous', 'IIDX': 'Miscellaneous', 'Radio Mix': 'Miscellaneous'}}
{'idx': 264, 'sentence': 'Written by Erin ( 10/14/07 ) , Edited by AHRISA ( 07/01/08 )', 'label': "{'AHRISA': 'Person', 'Erin': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Erin"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "10/14/07"\n)\nPerson_entity2 = Person(\n    name = "AHRISA"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "07/01/08"\n)', 'prediction': {'Erin': 'Person', '10/14/07': 'Miscellaneous', 'AHRISA': 'Person', '07/01/08': 'Miscellaneous'}}
{'idx': 265, 'sentence': '3 .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "3"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'3': 'Miscellaneous'}}
{'idx': 266, 'sentence': '5 .', 'label': '{}', 'response': 'None', 'prediction': {}}
{'idx': 267, 'sentence': '( 1 ) 1st Tracks / 1st SE', 'label': "{'1st Tracks': 'Miscellaneous', '1st SE': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1st"\n)\nLocation_entity1 = Location(\n    name = "Tracks"\n)\nLocation_entity2 = Location(\n    name = "SE"\n)', 'prediction': {'1st': 'Miscellaneous', 'Tracks': 'Location', 'SE': 'Location'}}
{'idx': 268, 'sentence': "A Korean Judge 's ruling has ordered Amuse World to pay Konami damages and stop production of the product completely .", 'label': "{'Amuse World': 'Organization', 'Korean': 'Miscellaneous', 'Konami': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Amuse World"\n)\nOrganization_entity2 = Organization(\n    name = "Konami"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Amuse World': 'Organization', 'Konami': 'Organization'}}
{'idx': 269, 'sentence': 'This area continues to be the core of the system , and is noted for the number of residents in the Richmond Highway area who use the service at all times of the day .', 'label': "{'Richmond Highway': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Richmond Highway"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "system"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "residents"\n)\nLocation_entity1 = Location(\n    name = "Richmond Highway"\n)', 'prediction': {'Richmond Highway': 'Location', 'system': 'Miscellaneous', 'residents': 'Miscellaneous'}}
{'idx': 270, 'sentence': 'Base fare is usually $1 , but can be as much as $3 for express routes .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Base fare"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "express routes"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Base fare': 'Miscellaneous', 'express routes': 'Miscellaneous'}}
{'idx': 271, 'sentence': 'Fairmont State University is a public university located in Fairmont , West Virginia ( population 19,097 ) .', 'label': "{'West Virginia': 'Location', 'Fairmont': 'Location', 'Fairmont State University': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Fairmont State University"\n)\nLocation_entity1 = Location(\n    name = "Fairmont"\n)\nLocation_entity2 = Location(\n    name = "West Virginia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Fairmont State University': 'Organization', 'Fairmont': 'Location', 'West Virginia': 'Location'}}
{'idx': 272, 'sentence': 'On April 7 , 2004 , Governor Bob Wise signed legislation allowing Fairmont State College to change its name to Fairmont State University .', 'label': "{'Fairmont State College': 'Organization', 'Fairmont State University': 'Organization', 'Bob Wise': 'Person'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "April 7"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2004"\n)\nPerson_entity1 = Person(\n    name = "Bob Wise"\n)\nOrganization_entity1 = Organization(\n    name = "Fairmont State College"\n)\nOrganization_entity2 = Organization(\n    name = "Fairmont State University"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'April 7': 'Miscellaneous', '2004': 'Miscellaneous', 'Bob Wise': 'Person', 'Fairmont State College': 'Organization', 'Fairmont State University': 'Organization'}}
{'idx': 273, 'sentence': "Fairmont State 's athletic teams , known as the Falcons , compete in the West Virginia Intercollegiate Athletic Conference in NCAA Division II .", 'label': "{'Falcons': 'Organization', 'NCAA Division II': 'Organization', 'West Virginia Intercollegiate Athletic Conference': 'Organization', 'Fairmont State': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Fairmont State"\n)\nOrganization_entity2 = Organization(\n    name = "West Virginia Intercollegiate Athletic Conference"\n)\nOrganization_entity3 = Organization(\n    name = "NCAA Division II"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Falcons"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Fairmont State': 'Organization', 'West Virginia Intercollegiate Athletic Conference': 'Organization', 'NCAA Division II': 'Organization', 'Falcons': 'Miscellaneous'}}
{'idx': 0, 'sentence': 'UK Edition came with the OSC-DIS video , and most of the tracks were re-engineered .', 'label': "{'OSC-DIS': 'Miscellaneous', 'UK': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "UK Edition"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "OSC-DIS"\n)', 'prediction': {'UK Edition': 'Organization', 'OSC-DIS': 'Miscellaneous'}}
{'idx': 1, 'sentence': "During this time Couch 's Division was detached from the Army and was occupied with guarding the fords on the Potomac .", 'label': '{\'Potomac\': \'Location\', "Couch \'s Division": \'Organization\', \'Army\': \'Organization\'}', 'response': 'Organization_entity1 = Organization(\n    name = "Couch \'s Division"\n)\nLocation_entity1 = Location(\n    name = "Army"\n)\nLocation_entity2 = Location(\n    name = "Potomac"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {"Couch 's Division": 'Organization', 'Army': 'Location', 'Potomac': 'Location'}}
{'idx': 2, 'sentence': 'At the Battle of Gettysburg in July , it helped defend the left flank of the Union army .', 'label': "{'Union': 'Organization', 'Battle of Gettysburg': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Gettysburg"\n)\nOrganization_entity1 = Organization(\n    name = "Union army"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Gettysburg': 'Location', 'Union army': 'Organization'}}
{'idx': 3, 'sentence': "The 139th supported Sheridan in the Appomattox Campaign and fought in the Battle of Sayler 's Creek .", 'label': '{\'139th\': \'Organization\', \'Appomattox Campaign\': \'Miscellaneous\', "Battle of Sayler \'s Creek": \'Miscellaneous\', \'Sheridan\': \'Person\'}', 'response': 'Organization_entity1 = Organization(\n    name = "139th"\n)\nPerson_entity1 = Person(\n    name = "Sheridan"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Appomattox Campaign"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Battle of Sayler\'s Creek"\n)', 'prediction': {'139th': 'Organization', 'Sheridan': 'Person', 'Appomattox Campaign': 'Miscellaneous', "Battle of Sayler's Creek": 'Miscellaneous'}}
{'idx': 4, 'sentence': 'Two cars were demolished and the two following cars were telescoped .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "cars"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "cars"\n)', 'prediction': {'cars': 'Miscellaneous'}}
{'idx': 5, 'sentence': 'The second car of the West Jersey train was also carried into the ditch , the third and fourth cars being telescoped .', 'label': "{'West Jersey': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "West Jersey train"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'West Jersey train': 'Organization'}}
{'idx': 6, 'sentence': 'As onlookers watched through the night , the mangled and burned bodies of the dead were carried from the wreckage which trapped them and laid side by side on the gravel bank near the track , with no other covering than the few newspapers gathered from the passengers .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "track"\n)\n\nMiscellaneous_entity1 = Miscellaneous(\n    name = "newspapers"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'track': 'Location', 'newspapers': 'Miscellaneous'}}
{'idx': 7, 'sentence': 'James W. Hoyt , Secretary of the New Jersey Department of Public Safety , immediately upon learning of the extent of the accident , telegraphed for the Philadelphia Medical Emergency Corps , fifteen of whom responded , and hurried to Atlantic City on a special train which left Philadelphia at 10:45 pm .', 'label': "{'Philadelphia': 'Location', 'Atlantic City': 'Location', 'James W. Hoyt': 'Person', 'Philadelphia Medical Emergency Corps': 'Organization', 'New Jersey Department of Public Safety': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "James W. Hoyt"\n)\nOrganization_entity1 = Organization(\n    name = "New Jersey Department of Public Safety"\n)\nOrganization_entity2 = Organization(\n    name = "Philadelphia Medical Emergency Corps"\n)\nLocation_entity1 = Location(\n    name = "Atlantic City"\n)\nLocation_entity2 = Location(\n    name = "Philadelphia"\n)', 'prediction': {'James W. Hoyt': 'Person', 'New Jersey Department of Public Safety': 'Organization', 'Philadelphia Medical Emergency Corps': 'Organization', 'Atlantic City': 'Location', 'Philadelphia': 'Location'}}
{'idx': 8, 'sentence': 'He went directly into the block tower and questioned operator George F. Hauser. Houser told him that he thought the excursion train had time to cross the tracks of the Reading before the express got there and he set the " clear " signal for the West Jersey train .', 'label': "{'West Jersey': 'Location', 'George F. Hauser. Houser': 'Person', 'Reading': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "George F. Hauser"\n)\nOrganization_entity1 = Organization(\n    name = "Reading"\n)\nOrganization_entity2 = Organization(\n    name = "West Jersey"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'George F. Hauser': 'Person', 'Reading': 'Organization', 'West Jersey': 'Organization'}}
{'idx': 9, 'sentence': 'Before Hauser could make a further explanation to the coroner he received an order from the railroad officials to say nothing .', 'label': "{'Hauser': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Hauser"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "coroner"\n)\nOrganization_entity1 = Organization(\n    name = "railroad officials"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Hauser': 'Person', 'coroner': 'Miscellaneous', 'railroad officials': 'Organization'}}
{'idx': 10, 'sentence': 'His reputation was that of an experienced engineer and a man of exceptionally high moral character , and not of a reckless or careless disposition .', 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "engineer"\n)\nPerson_entity2 = Person(\n    name = "man"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "reputation"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "moral character"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "disposition"\n)', 'prediction': {'engineer': 'Person', 'man': 'Person', 'reputation': 'Miscellaneous', 'moral character': 'Miscellaneous', 'disposition': 'Miscellaneous'}}
{'idx': 11, 'sentence': 'Three others found that " the cause of the collision was the failure of Edward Farr , engineer of Train No. 23 , to give heed in time to the semaphore signals and crossing under the rules. .. the tower man , George F. Hauser , may have used poor judgment in his estimate of the distance away of the Atlantic City Railroad train when he gave the white boards to the West Jersey and Seashore Excursion Train No . 700 . "', 'label': "{'Edward Farr': 'Person', 'George F. Hauser': 'Person', 'Seashore': 'Location', 'West Jersey': 'Location', 'Atlantic City Railroad': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Edward Farr"\n)\nOrganization_entity1 = Organization(\n    name = "Atlantic City Railroad"\n)\nOrganization_entity2 = Organization(\n    name = "West Jersey and Seashore Excursion Train"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Train No. 23"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Train No. 700"\n)\nPerson_entity2 = Person(\n    name = "George F. Hauser"\n)', 'prediction': {'Edward Farr': 'Person', 'Atlantic City Railroad': 'Organization', 'West Jersey and Seashore Excursion Train': 'Organization', 'Train No. 23': 'Miscellaneous', 'Train No. 700': 'Miscellaneous', 'George F. Hauser': 'Person'}}
{'idx': 12, 'sentence': 'They participated in the GMAC Bowl , losing to Tulsa 63-7 .', 'label': "{'GMAC Bowl': 'Miscellaneous', 'Tulsa': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "GMAC Bowl"\n)\nLocation_entity1 = Location(\n    name = "Tulsa"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'GMAC Bowl': 'Organization', 'Tulsa': 'Location'}}
{'idx': 13, 'sentence': 'Overall , 53 lettermen are returning from the 2006 team ( 25 on offense , 28 on defense and 0 on special teams ) .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "2006"\n)\nOrganization_entity1 = Organization(\n    name = "team"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "25"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "28"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "0"\n)', 'prediction': {'2006': 'Miscellaneous', 'team': 'Organization', '25': 'Miscellaneous', '28': 'Miscellaneous', '0': 'Miscellaneous'}}
{'idx': 14, 'sentence': '30 Seconds to Mars ( or Thirty Seconds to Mars ) is an alternative rock band from Los Angeles , California , featuring Jared Leto , Shannon Leto , Tomo Milicevic .', 'label': "{'Shannon Leto': 'Person', 'Tomo Milicevic': 'Person', 'Los Angeles': 'Location', 'Jared Leto': 'Person', '30 Seconds to Mars': 'Organization', 'Thirty Seconds to Mars': 'Organization', 'California': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "30 Seconds to Mars"\n)\nLocation_entity1 = Location(\n    name = "Los Angeles"\n)\nLocation_entity2 = Location(\n    name = "California"\n)\nPerson_entity1 = Person(\n    name = "Jared Leto"\n)\nPerson_entity2 = Person(\n    name = "Shannon Leto"\n)\nPerson_entity3 = Person(\n    name = "Tomo Milicevic"\n)', 'prediction': {'30 Seconds to Mars': 'Organization', 'Los Angeles': 'Location', 'California': 'Location', 'Jared Leto': 'Person', 'Shannon Leto': 'Person', 'Tomo Milicevic': 'Person'}}
{'idx': 15, 'sentence': 'Their sophomore album , A Beautiful Lie , was released on August 30 , 2005 .', 'label': "{'A Beautiful Lie': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Their sophomore album"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "A Beautiful Lie"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "August 30"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "2005"\n)', 'prediction': {'Their sophomore album': 'Organization', 'A Beautiful Lie': 'Miscellaneous', 'August 30': 'Miscellaneous', '2005': 'Miscellaneous'}}
{'idx': 16, 'sentence': 'The second nomination was for Best Rock Video ; however , they lost to AFI \'s " Miss Murder " .', 'label': "{'AFI': 'Organization', 'Miss Murder': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "AFI"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Best Rock Video"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Miss Murder"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'AFI': 'Organization', 'Best Rock Video': 'Miscellaneous', 'Miss Murder': 'Miscellaneous'}}
{'idx': 17, 'sentence': '" Jared and Shannon put together this thing called Environmentor which is illustrating ways --- alternatives --- to kind of clean up some of the mess we leave behind .', 'label': "{'Jared': 'Person', 'Shannon': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Jared"\n)\nPerson_entity2 = Person(\n    name = "Shannon"\n)\nOrganization_entity1 = Organization(\n    name = "Environmentor"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Jared': 'Person', 'Shannon': 'Person', 'Environmentor': 'Organization'}}
{'idx': 18, 'sentence': 'They are also scheduled to play Roskilde , Rock am Ring , Pinkpop , Give It A Name Festival and Download .', 'label': "{'Rock am Ring': 'Miscellaneous', 'Pinkpop': 'Miscellaneous', 'Roskilde': 'Miscellaneous', 'Download': 'Miscellaneous', 'Give It A Name Festival': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Roskilde"\n)\nOrganization_entity1 = Organization(\n    name = "Rock am Ring"\n)\nOrganization_entity2 = Organization(\n    name = "Pinkpop"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Give It A Name Festival"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Download"\n)', 'prediction': {'Roskilde': 'Location', 'Rock am Ring': 'Organization', 'Pinkpop': 'Organization', 'Give It A Name Festival': 'Miscellaneous', 'Download': 'Miscellaneous'}}
{'idx': 19, 'sentence': 'On August 8th , 2007 , Kerrang ! announced that 30 Seconds to Mars has been nominated for two categories of the Kerrang !', 'label': "{'Kerrang !': 'Organization', '30 Seconds to Mars': 'Organization'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "August 8th"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2007"\n)\nOrganization_entity1 = Organization(\n    name = "Kerrang"\n)\nOrganization_entity2 = Organization(\n    name = "30 Seconds to Mars"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "two categories"\n)\nOrganization_entity3 = Organization(\n    name = "Kerrang"\n)', 'prediction': {'August 8th': 'Miscellaneous', '2007': 'Miscellaneous', 'Kerrang': 'Organization', '30 Seconds to Mars': 'Organization', 'two categories': 'Miscellaneous'}}
{'idx': 20, 'sentence': 'They beat out Korn and had amassed over 7 million votes .', 'label': "{'Korn': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Korn"\n)', 'prediction': {'Korn': 'Organization'}}
{'idx': 21, 'sentence': 'It is also the name of one of their songs in the album 30 Seconds to Mars .', 'label': "{'30 Seconds to Mars': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "30 Seconds to Mars"\n)', 'prediction': {'30 Seconds to Mars': 'Organization'}}
{'idx': 22, 'sentence': 'Another track featured on certain imported 30 Seconds to Mars titles is " Anarchy in Tokyo " , a song that was recorded during the process of their self-titled debut .', 'label': "{'30 Seconds to Mars': 'Organization', 'Anarchy in Tokyo': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "30 Seconds to Mars"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Anarchy in Tokyo"\n)', 'prediction': {'30 Seconds to Mars': 'Organization', 'Anarchy in Tokyo': 'Miscellaneous'}}
{'idx': 23, 'sentence': 'Also made available are the demo versions of " Buddha for Mary " and " 93 Million Miles " ; the latter originally had lyrics referring to the band Deadsy , whose members Dr. Nner and P. Exeter Blue I provided extra instrumentation on several tracks , but the lyrics were changed after the two bands were involved in a small feud .', 'label': "{'Buddha for Mary': 'Miscellaneous', '93 Million Miles': 'Miscellaneous', 'Dr. Nner': 'Person', 'P. Exeter Blue I': 'Person', 'Deadsy': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Deadsy"\n)\nPerson_entity1 = Person(\n    name = "Dr. Nner"\n)\nPerson_entity2 = Person(\n    name = "P. Exeter Blue I"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Deadsy': 'Organization', 'Dr. Nner': 'Person', 'P. Exeter Blue I': 'Person'}}
{'idx': 24, 'sentence': 'The 38th NAACP Image Awards honored the best in film , television and music for 2006 .', 'label': "{'38th NAACP Image Awards': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "38th"\n)\nOrganization_entity1 = Organization(\n    name = "NAACP Image Awards"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2006"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'38th': 'Miscellaneous', 'NAACP Image Awards': 'Organization', '2006': 'Miscellaneous'}}
{'idx': 25, 'sentence': 'The following recipients received distinguished awards by the NAACP for their contributions to arts , civil rights , news , and humanitarian efforts .', 'label': "{'NAACP': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "NAACP"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'NAACP': 'Organization'}}
{'idx': 26, 'sentence': 'Its units supported the Allied invasion of Normandy ( June 1944 ) ; the Allied ground troops during the Battle of the Bulge ( December 1944 through January 1945 ) ; the Allied airborne attack on Holland ( Operation Market Garden , September 1944 ) ; the defense of the Remagen bridgehead against German air attacks ( March 1945 ) ; and the airborne attack across the Rhine ( March 1945 ) .', 'label': "{'Battle of the Bulge': 'Miscellaneous', 'Allied': 'Organization', 'German': 'Miscellaneous', 'Holland': 'Location', 'Remagen': 'Location', 'Operation Market Garden': 'Miscellaneous', 'Rhine': 'Location', 'Normandy': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Allied"\n)\nLocation_entity1 = Location(\n    name = "Normandy"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "June 1944"\n)\nOrganization_entity2 = Organization(\n    name = "Allied"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Battle of the Bulge"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "December 1944"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "January 1945"\n)\nOrganization_entity3 = Organization(\n    name = "Allied"\n)\nLocation_entity2 = Location(\n    name = "Holland"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "Operation Market Garden"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "September 1944"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "Remagen bridgehead"\n)\nMiscellaneous_entity8 = Miscellaneous(\n    name = "March 1945"\n)\nMiscellaneous_entity9 = Miscellaneous(\n    name = "German"\n)\nLocation_entity3 = Location(\n    name = "Rhine"\n)\nMiscellaneous_entity10 = Miscellaneous(\n    name = "March 1945"\n)', 'prediction': {'Allied': 'Organization', 'Normandy': 'Location', 'June 1944': 'Miscellaneous', 'Battle of the Bulge': 'Miscellaneous', 'December 1944': 'Miscellaneous', 'January 1945': 'Miscellaneous', 'Holland': 'Location', 'Operation Market Garden': 'Miscellaneous', 'September 1944': 'Miscellaneous', 'Remagen bridgehead': 'Miscellaneous', 'March 1945': 'Miscellaneous', 'German': 'Miscellaneous', 'Rhine': 'Location'}}
{'idx': 27, 'sentence': 'Assigned or attached units of the division participated in numerous exercises with the Spanish Air Defense Command , and in some instances , with the U.S. Sixth Fleet .', 'label': "{'U.S. Sixth Fleet': 'Organization', 'Spanish Air Defense Command': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Spanish Air Defense Command"\n)\nOrganization_entity2 = Organization(\n    name = "U.S. Sixth Fleet"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Spanish Air Defense Command': 'Organization', 'U.S. Sixth Fleet': 'Organization'}}
{'idx': 28, 'sentence': 'Redesignated 65 Air Division ( Defense ) on 17 April 1952 .', 'label': "{'65 Air Division ( Defense )': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "65 Air Division"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Defense"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "17 April 1952"\n)', 'prediction': {'65 Air Division': 'Organization', 'Defense': 'Miscellaneous', '17 April 1952': 'Miscellaneous'}}
{'idx': 29, 'sentence': 'Inactivated on 30 June 1991 .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "30 June 1991"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'30 June 1991': 'Miscellaneous'}}
{'idx': 30, 'sentence': 'Iceland Air Defense Force , 24 April 1952 -- 8 March 1954 .', 'label': "{'Iceland Air Defense Force': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Iceland Air Defense Force"\n)\n\nMiscellaneous_entity1 = Miscellaneous(\n    name = "24 April 1952"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "8 March 1954"\n)', 'prediction': {'Iceland Air Defense Force': 'Organization', '24 April 1952': 'Miscellaneous', '8 March 1954': 'Miscellaneous'}}
{'idx': 31, 'sentence': 'Sembach Air Base , Germany , 1 June 1985 ; Lindsey Air Station , Germany , 1 October 1987 -- 30 June 1991 .', 'label': "{'Germany': 'Location', 'Sembach Air Base': 'Organization', 'Lindsey Air Station': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "Sembach Air Base"\n)\nLocation_entity2 = Location(\n    name = "Germany"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1 June 1985"\n)\nLocation_entity3 = Location(\n    name = "Lindsey Air Station"\n)\nLocation_entity4 = Location(\n    name = "Germany"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1 October 1987"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "30 June 1991"\n)', 'prediction': {'Sembach Air Base': 'Location', 'Germany': 'Location', '1 June 1985': 'Miscellaneous', 'Lindsey Air Station': 'Location', '1 October 1987': 'Miscellaneous', '30 June 1991': 'Miscellaneous'}}
{'idx': 32, 'sentence': 'Curry , 29 July 1945 -- unkn .', 'label': "{'Curry': 'Person'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Curry"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "29 July 1945"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Curry': 'Miscellaneous', '29 July 1945': 'Miscellaneous'}}
{'idx': 33, 'sentence': "In 1963 the Victorian Broadcasting Network purchased Nicholson 's and sold the electrical division of the organisation to Vox Adeon .", 'label': '{"Nicholson \'s": \'Organization\', \'Vox Adeon\': \'Organization\', \'Victorian Broadcasting Network\': \'Organization\'}', 'response': 'Organization_entity1 = Organization(\n    name = "Victorian Broadcasting Network"\n)\nOrganization_entity2 = Organization(\n    name = "Nicholson\'s"\n)\nOrganization_entity3 = Organization(\n    name = "Vox Adeon"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Victorian Broadcasting Network': 'Organization', "Nicholson's": 'Organization', 'Vox Adeon': 'Organization'}}
{'idx': 34, 'sentence': 'The limited hours of broadcasting 69 years ago have gradually been increased to a 24 hour , seven day a week service .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "69 years ago"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "24 hour"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "seven day"\n)\nOrganization_entity1 = Organization(\n    name = "service"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'69 years ago': 'Miscellaneous', '24 hour': 'Miscellaneous', 'seven day': 'Miscellaneous', 'service': 'Organization'}}
{'idx': 35, 'sentence': 'In 1987 the TAB purchased 6PR to secure the future of race broadcasts in Western Australia and races were broadcast across the station during popular talkback programs .', 'label': "{'TAB': 'Organization', 'Western Australia': 'Location', '6PR': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "TAB"\n)\nOrganization_entity2 = Organization(\n    name = "6PR"\n)\nLocation_entity1 = Location(\n    name = "Western Australia"\n)', 'prediction': {'TAB': 'Organization', '6PR': 'Organization', 'Western Australia': 'Location'}}
{'idx': 36, 'sentence': "During the Australian Rules Football Season 882 6PR is Perth 's Football Leader .", 'label': "{'882 6PR': 'Organization', 'Perth': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Australian Rules Football Season"\n)\nOrganization_entity2 = Organization(\n    name = "6PR"\n)\nLocation_entity1 = Location(\n    name = "Perth"\n)', 'prediction': {'Australian Rules Football Season': 'Organization', '6PR': 'Organization', 'Perth': 'Location'}}
{'idx': 37, 'sentence': 'Peter Vlahos is based in the 6PR Studio while Karl Langdon & Harvey Deegan base themselves at different matches .', 'label': "{'Harvey Deegan': 'Person', '6PR': 'Organization', 'Peter Vlahos': 'Person', 'Karl Langdon': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Peter Vlahos"\n)\nOrganization_entity1 = Organization(\n    name = "6PR Studio"\n)\nPerson_entity2 = Person(\n    name = "Karl Langdon"\n)\nPerson_entity3 = Person(\n    name = "Harvey Deegan"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Peter Vlahos': 'Person', '6PR Studio': 'Organization', 'Karl Langdon': 'Person', 'Harvey Deegan': 'Person'}}
{'idx': 38, 'sentence': 'As of the 2007/2008 A-League season 6PR will again broadcast every Perth Glory Home & Away fixture .', 'label': "{'6PR': 'Organization', 'Perth Glory': 'Organization', '2007/2008 A-League': 'Organization'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "2007/2008 A-League season"\n)\nOrganization_entity1 = Organization(\n    name = "6PR"\n)\nOrganization_entity2 = Organization(\n    name = "Perth Glory"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'2007/2008 A-League season': 'Miscellaneous', '6PR': 'Organization', 'Perth Glory': 'Organization'}}
{'idx': 39, 'sentence': '883JIA FM , is a Chinese radio station of SAFRA Radio in Singapore .', 'label': "{'Singapore': 'Location', 'Chinese': 'Miscellaneous', 'SAFRA Radio': 'Organization', '883JIA FM': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "883JIA FM"\n)\nOrganization_entity2 = Organization(\n    name = "SAFRA Radio"\n)\nLocation_entity1 = Location(\n    name = "Singapore"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'883JIA FM': 'Organization', 'SAFRA Radio': 'Organization', 'Singapore': 'Location'}}
{'idx': 40, 'sentence': '883Jia FM Official Website', 'label': "{'883Jia FM': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "883Jia FM"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'883Jia FM': 'Organization'}}
{'idx': 41, 'sentence': 'Both were transferred from Kreis Flensburg with the establishment of the current Danish-German border .', 'label': "{'Danish-German': 'Location', 'Kreis Flensburg': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Kreis Flensburg"\n)\nLocation_entity2 = Location(\n    name = "Danish-German border"\n)', 'prediction': {'Kreis Flensburg': 'Location', 'Danish-German border': 'Location'}}
{'idx': 42, 'sentence': 'He is known to have composed three chansons de geste as well as the romance Cleomadé .', 'label': "{'Cleomadé': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "chansons de geste"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "romance Cleomadé"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'chansons de geste': 'Miscellaneous', 'romance Cleomadé': 'Miscellaneous'}}
{'idx': 43, 'sentence': 'Despite being born in the West African country of the Cape Verde islands he plays for the Swiss Under-19s side .', 'label': "{'West African': 'Miscellaneous', 'Cape Verde islands': 'Location', 'Swiss': 'Miscellaneous', 'Under-19s': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "Cape Verde islands"\n)\nOrganization_entity1 = Organization(\n    name = "Swiss Under-19s"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Cape Verde islands': 'Location', 'Swiss Under-19s': 'Organization'}}
{'idx': 44, 'sentence': 'Born on April 16 , 1819 in Gostkócity near Łęczyca in a Polish szlachta family of Lipscy to Jacob Lipski and Marjania Zaluska , she spent her life in the Prussian partition , including the Grand Duchy of Poznań .', 'label': "{'Polish': 'Miscellaneous', 'Łęczyca': 'Location', 'Jacob Lipski': 'Person', 'Prussian': 'Miscellaneous', 'Lipscy': 'Location', 'Grand Duchy of Poznań': 'Location', 'Marjania Zaluska': 'Person'}", 'response': 'Location_entity1 = Location(\n    name = "Gostkócity"\n)\nLocation_entity2 = Location(\n    name = "Łęczyca"\n)\nOrganization_entity1 = Organization(\n    name = "Prussian partition"\n)\nLocation_entity3 = Location(\n    name = "Grand Duchy of Poznań"\n)\nPerson_entity1 = Person(\n    name = "Jacob Lipski"\n)\nPerson_entity2 = Person(\n    name = "Marjania Zaluska"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "April 16"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1819"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Polish szlachta"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "Lipscy"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Gostkócity': 'Location', 'Łęczyca': 'Location', 'Prussian partition': 'Organization', 'Grand Duchy of Poznań': 'Location', 'Jacob Lipski': 'Person', 'Marjania Zaluska': 'Person', 'April 16': 'Miscellaneous', '1819': 'Miscellaneous', 'Polish szlachta': 'Miscellaneous', 'Lipscy': 'Miscellaneous'}}
{'idx': 45, 'sentence': 'She took part in many activities designed to promote Polish culture , and sponsored and organized various festivities or organizations ( such as the Society of Scientific Help for Girls ( Towarzystwo Pomocy Naukowej dla dziewcząt ) ) .', 'label': "{'Society of Scientific Help for Girls': 'Organization', 'Polish': 'Miscellaneous', 'Towarzystwo Pomocy Naukowej dla dziewcząt': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "She"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Polish"\n)\nOrganization_entity1 = Organization(\n    name = "Society of Scientific Help for Girls"\n)', 'prediction': {'She': 'Person', 'Polish': 'Miscellaneous', 'Society of Scientific Help for Girls': 'Organization'}}
{'idx': 46, 'sentence': 'Excluded from all political and social rights , they were only allowed to enter a church by a special door , and during the service a rail separated them from the other worshippers .', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "church"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "political"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "social"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "rights"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "service"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "rail"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "worshippers"\n)', 'prediction': {'church': 'Organization', 'political': 'Miscellaneous', 'social': 'Miscellaneous', 'rights': 'Miscellaneous', 'service': 'Miscellaneous', 'rail': 'Miscellaneous', 'worshippers': 'Miscellaneous'}}
{'idx': 47, 'sentence': 'It has been suggested that they were descendants of the Visigoths , and somebody derives the name from caas ( dog ) and Goth .', 'label': "{'Goth': 'Miscellaneous', 'Visigoths': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Visigoths"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "caas"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "dog"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Goth"\n)', 'prediction': {'Visigoths': 'Person', 'caas': 'Miscellaneous', 'dog': 'Miscellaneous', 'Goth': 'Miscellaneous'}}
{'idx': 48, 'sentence': 'It was not until the French Revolution that any steps were taken to ameliorate their lot , but today they no longer form a class and have been practically lost sight of in the general peasantry .', 'label': "{'French Revolution': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "French Revolution"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "steps"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "lot"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "class"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "peasantry"\n)', 'prediction': {'French Revolution': 'Location', 'steps': 'Miscellaneous', 'lot': 'Miscellaneous', 'class': 'Miscellaneous', 'peasantry': 'Miscellaneous'}}
{'idx': 49, 'sentence': 'Robert Gibson succeeded Wren as the " Liberal-Labour " MPP for Kenora and served until the 1967 election .', 'label': "{'Liberal-Labour': 'Organization', 'Kenora': 'Location', 'Robert Gibson': 'Person', 'Wren': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Robert Gibson"\n)\nPerson_entity2 = Person(\n    name = "Wren"\n)\nOrganization_entity1 = Organization(\n    name = "Liberal-Labour"\n)\nLocation_entity1 = Location(\n    name = "Kenora"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1967 election"\n)', 'prediction': {'Robert Gibson': 'Person', 'Wren': 'Person', 'Liberal-Labour': 'Organization', 'Kenora': 'Location', '1967 election': 'Miscellaneous'}}
{'idx': 50, 'sentence': 'It was probably first performed by Gradsky on August 20 , 1998 on Vasilievsky Spusk next to the Red Square in Moscow .', 'label': "{'Gradsky': 'Person', 'Red Square': 'Location', 'Vasilievsky Spusk': 'Location', 'Moscow': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Gradsky"\n)\nLocation_entity1 = Location(\n    name = "Vasilievsky Spusk"\n)\nLocation_entity2 = Location(\n    name = "Red Square"\n)\nLocation_entity3 = Location(\n    name = "Moscow"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "August 20"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1998"\n)', 'prediction': {'Gradsky': 'Person', 'Vasilievsky Spusk': 'Location', 'Red Square': 'Location', 'Moscow': 'Location', 'August 20': 'Miscellaneous', '1998': 'Miscellaneous'}}
{'idx': 51, 'sentence': "The Amateur Hockey Association of Canada ( AHAC ) was an amateur men 's ice hockey league founded in 1886 , in existence until 1898 .", 'label': "{'AHAC': 'Organization', 'Amateur Hockey Association of Canada': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Amateur Hockey Association of Canada"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "AHAC"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1886"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "1898"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Amateur Hockey Association of Canada': 'Organization', 'AHAC': 'Miscellaneous', '1886': 'Miscellaneous', '1898': 'Miscellaneous'}}
{'idx': 52, 'sentence': 'They agreed that the season should run from the 1st of January until the 15th of March .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "season"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "January"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "March"\n)', 'prediction': {'season': 'Miscellaneous', 'January': 'Miscellaneous', 'March': 'Miscellaneous'}}
{'idx': 53, 'sentence': "The rover would line up behind the centre , with the point and coverpoint following , in an ' I ' formation towards the goaltender .", 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "rover"\n)\nOrganization_entity2 = Organization(\n    name = "centre"\n)\nOrganization_entity3 = Organization(\n    name = "point"\n)\nOrganization_entity4 = Organization(\n    name = "coverpoint"\n)\nOrganization_entity5 = Organization(\n    name = "goaltender"\n)', 'prediction': {'rover': 'Organization', 'centre': 'Organization', 'point': 'Organization', 'coverpoint': 'Organization', 'goaltender': 'Organization'}}
{'idx': 54, 'sentence': 'There were no boards along the sides of the ice , and there were no standard dimensions for a rink , although dimensions were instituted for the positioning of the goal out from the ends of the rink .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "ice"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "boards"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "dimensions"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "rink"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "goal"\n)', 'prediction': {'ice': 'Location', 'boards': 'Miscellaneous', 'dimensions': 'Miscellaneous', 'rink': 'Miscellaneous', 'goal': 'Miscellaneous'}}
{'idx': 55, 'sentence': 'The first championship team of the AHAC was the Montreal Crystals , having unofficially being declared the champions before the AHAC .', 'label': "{'AHAC': 'Organization', 'Montreal Crystals': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "AHAC"\n)\nOrganization_entity2 = Organization(\n    name = "Montreal Crystals"\n)', 'prediction': {'AHAC': 'Organization', 'Montreal Crystals': 'Organization'}}
{'idx': 56, 'sentence': 'In 1893 , the first year since 1888 where the AHAC played under a series system , the Montreal Hockey Club lost their first game against the Ottawa Hockey Club , and proceeded to win their next seven en route to the championship .', 'label': "{'Ottawa Hockey Club': 'Organization', 'Montreal Hockey Club': 'Organization', 'AHAC': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "AHAC"\n)\nOrganization_entity2 = Organization(\n    name = "Montreal Hockey Club"\n)\nOrganization_entity3 = Organization(\n    name = "Ottawa Hockey Club"\n)', 'prediction': {'AHAC': 'Organization', 'Montreal Hockey Club': 'Organization', 'Ottawa Hockey Club': 'Organization'}}
{'idx': 57, 'sentence': 'In the end , the MAAA investigated into why its hockey club wanted to refuse and return the trophy , even though such an action would damage the reputation of the MAAA .', 'label': "{'MAAA': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "MAAA"\n)\nOrganization_entity2 = Organization(\n    name = "MAAA"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'MAAA': 'Organization'}}
{'idx': 58, 'sentence': '† Stanley Cup winner', 'label': "{'Stanley Cup': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Stanley Cup winner"\n)', 'prediction': {'Stanley Cup winner': 'Miscellaneous'}}
{'idx': 59, 'sentence': 'Andrew Sant ( b. 1950 ) is an English born Australian poet .', 'label': "{'Andrew Sant': 'Person', 'English': 'Miscellaneous', 'Australian': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Andrew Sant"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1950"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "English"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Australian"\n)', 'prediction': {'Andrew Sant': 'Person', '1950': 'Miscellaneous', 'English': 'Miscellaneous', 'Australian': 'Miscellaneous'}}
{'idx': 60, 'sentence': 'Individual poems have appeared in The Times Literary Supplement , Poetry ( Chicago ) , Poetry London , The Australian , Antipodes and many other publications .', 'label': "{'Antipodes': 'Organization', 'Poetry': 'Organization', 'Poetry London': 'Organization', 'The Times Literary Supplement': 'Organization', 'Chicago': 'Location', 'The Australian': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "The Times Literary Supplement"\n)\nOrganization_entity2 = Organization(\n    name = "Poetry"\n)\nLocation_entity1 = Location(\n    name = "Chicago"\n)\nOrganization_entity3 = Organization(\n    name = "Poetry London"\n)\nOrganization_entity4 = Organization(\n    name = "The Australian"\n)\nOrganization_entity5 = Organization(\n    name = "Antipodes"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'The Times Literary Supplement': 'Organization', 'Poetry': 'Organization', 'Chicago': 'Location', 'Poetry London': 'Organization', 'The Australian': 'Organization', 'Antipodes': 'Organization'}}
{'idx': 61, 'sentence': 'Ten years after the initial diagnosis she developed another form of cancer , which she and her doctors fought with equal determination .', 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "she"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Ten years"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "cancer"\n)', 'prediction': {'she': 'Person', 'Ten years': 'Miscellaneous', 'cancer': 'Miscellaneous'}}
{'idx': 62, 'sentence': 'Fearing a lawsuit by pro-life activists , they convened a court hearing at the hospital and obtained separate counsels for Carder , her fetus , and the hospital .', 'label': "{'Carder': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "pro-life activists"\n)\nOrganization_entity2 = Organization(\n    name = "hospital"\n)\nPerson_entity1 = Person(\n    name = "Carder"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "lawsuit"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "fetus"\n)', 'prediction': {'pro-life activists': 'Organization', 'hospital': 'Organization', 'Carder': 'Person', 'lawsuit': 'Miscellaneous', 'fetus': 'Miscellaneous'}}
{'idx': 63, 'sentence': 'Obstetricians at the hospital initially refused to carry out the procedure , but eventually one reluctantly agreed .', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "hospital"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'hospital': 'Organization'}}
{'idx': 64, 'sentence': "In the wake of the surgery , Carder 's family and the American Civil Liberties Union 's Reproductive Freedom Project asked the D.C. Court of Appeals to vacate the order and its legal precedent , on grounds that the order had violated Carder 's right to informed consent and her constitutional rights of privacy and bodily integrity .", 'label': "{'Reproductive Freedom Project': 'Organization', 'American Civil Liberties Union': 'Organization', 'D.C. Court of Appeals': 'Organization', 'Carder': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Carder"\n)\nOrganization_entity1 = Organization(\n    name = "American Civil Liberties Union"\n)\nOrganization_entity2 = Organization(\n    name = "Reproductive Freedom Project"\n)\nLocation_entity1 = Location(\n    name = "D.C. Court of Appeals"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "surgery"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "legal precedent"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "informed consent"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "constitutional rights"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "privacy"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "bodily integrity"\n)', 'prediction': {'Carder': 'Person', 'American Civil Liberties Union': 'Organization', 'Reproductive Freedom Project': 'Organization', 'D.C. Court of Appeals': 'Location', 'surgery': 'Miscellaneous', 'legal precedent': 'Miscellaneous', 'informed consent': 'Miscellaneous', 'constitutional rights': 'Miscellaneous', 'privacy': 'Miscellaneous', 'bodily integrity': 'Miscellaneous'}}
{'idx': 65, 'sentence': 'With a very diverse background in every type of industry imaginable Angelo began his growth in Miami as a young Actor / Model working many non-union & later union jobs .', 'label': "{'Angelo': 'Person', 'Miami': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Angelo"\n)\nLocation_entity1 = Location(\n    name = "Miami"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Actor"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Model"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Angelo': 'Person', 'Miami': 'Location', 'Actor': 'Miscellaneous', 'Model': 'Miscellaneous'}}
{'idx': 66, 'sentence': 'During this time he was also working in Corporate America for Fortune 500 Corporations leading their marketing departments in companies like AT&T , Wachovia , Carnival Cruise Lines , and many more .', 'label': "{'AT&T': 'Organization', 'Fortune': 'Organization', 'Carnival Cruise Lines': 'Organization', 'America': 'Location', 'Wachovia': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Corporate America"\n)\nOrganization_entity2 = Organization(\n    name = "Fortune 500 Corporations"\n)\nOrganization_entity3 = Organization(\n    name = "AT&T"\n)\nOrganization_entity4 = Organization(\n    name = "Wachovia"\n)\nOrganization_entity5 = Organization(\n    name = "Carnival Cruise Lines"\n)', 'prediction': {'Corporate America': 'Organization', 'Fortune 500 Corporations': 'Organization', 'AT&T': 'Organization', 'Wachovia': 'Organization', 'Carnival Cruise Lines': 'Organization'}}
{'idx': 67, 'sentence': 'In 2002 , Angelo launched NOK Entertainment to create a company that could market , promote , produce , & create all types of special events at any venue from Miami , South Beach to West Palm Beach , including L.A. , NYC , & Vegas .', 'label': "{'South Beach': 'Location', 'West Palm Beach': 'Location', 'L.A.': 'Location', 'NOK Entertainment': 'Organization', 'Angelo': 'Person', 'Miami': 'Location', 'NYC': 'Location', 'Vegas': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Angelo"\n)\nOrganization_entity1 = Organization(\n    name = "NOK Entertainment"\n)\nLocation_entity1 = Location(\n    name = "Miami"\n)\nLocation_entity2 = Location(\n    name = "South Beach"\n)\nLocation_entity3 = Location(\n    name = "West Palm Beach"\n)\nLocation_entity4 = Location(\n    name = "L.A."\n)\nLocation_entity5 = Location(\n    name = "NYC"\n)\nLocation_entity6 = Location(\n    name = "Vegas"\n)', 'prediction': {'Angelo': 'Person', 'NOK Entertainment': 'Organization', 'Miami': 'Location', 'South Beach': 'Location', 'West Palm Beach': 'Location', 'L.A.': 'Location', 'NYC': 'Location', 'Vegas': 'Location'}}
{'idx': 68, 'sentence': 'Angelo has reached out to corporate America , the young and successful , the trendy , the tourist , the wealthy , the professional , the rich & famous .', 'label': "{'America': 'Location', 'Angelo': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "corporate America"\n)\nPerson_entity1 = Person(\n    name = "Angelo"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "young"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "trendy"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "tourist"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "wealthy"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "professional"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "rich & famous"\n)', 'prediction': {'corporate America': 'Organization', 'Angelo': 'Person', 'young': 'Miscellaneous', 'trendy': 'Miscellaneous', 'tourist': 'Miscellaneous', 'wealthy': 'Miscellaneous', 'professional': 'Miscellaneous', 'rich & famous': 'Miscellaneous'}}
{'idx': 69, 'sentence': 'Current News : Angelo is working on a book , the date for release is Dec. 2008 . He is also launching several businesses as well as launching several concerts in the Miami Area .', 'label': "{'Miami': 'Location', 'Angelo': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Angelo"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Dec. 2008"\n)\nOrganization_entity1 = Organization(\n    name = "businesses"\n)\nLocation_entity1 = Location(\n    name = "Miami Area"\n)', 'prediction': {'Angelo': 'Person', 'Dec. 2008': 'Miscellaneous', 'businesses': 'Organization', 'Miami Area': 'Location'}}
{'idx': 70, 'sentence': 'Influence rather than position . "', 'label': '{}', 'response': 'None', 'prediction': {}}
{'idx': 71, 'sentence': 'It was written by Henrique Lopes de Mendonça ( lyrics ) and Alfredo Keil ( music ) after the nationalist resurgence provoked by the British Ultimatum ( for Portuguese troops to vacate the territory between Angola and Mozambique ) , was adopted as a Republican anthem and , finally , by the new Portuguese Republic in 1910 as the national anthem , replacing " O Hymno da Carta " , the last anthem of the Constitutional Monarchy in Portugal .', 'label': "{'Henrique Lopes de Mendonça': 'Person', 'Portuguese Republic': 'Location', 'British Ultimatum': 'Miscellaneous', 'Angola': 'Location', 'O Hymno da Carta': 'Miscellaneous', 'Constitutional Monarchy': 'Organization', 'Alfredo Keil': 'Person', 'Mozambique': 'Location', 'Portugal': 'Location', 'Republican': 'Organization', 'Portuguese': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Henrique Lopes de Mendonça"\n)\nPerson_entity2 = Person(\n    name = "Alfredo Keil"\n)\nOrganization_entity1 = Organization(\n    name = "British Ultimatum"\n)\nLocation_entity1 = Location(\n    name = "Angola"\n)\nLocation_entity2 = Location(\n    name = "Mozambique"\n)\nOrganization_entity2 = Organization(\n    name = "Portuguese Republic"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1910"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "O Hymno da Carta"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Constitutional Monarchy"\n)', 'prediction': {'Henrique Lopes de Mendonça': 'Person', 'Alfredo Keil': 'Person', 'British Ultimatum': 'Organization', 'Angola': 'Location', 'Mozambique': 'Location', 'Portuguese Republic': 'Organization', '1910': 'Miscellaneous', 'O Hymno da Carta': 'Miscellaneous', 'Constitutional Monarchy': 'Miscellaneous'}}
{'idx': 72, 'sentence': 'On January 31 , 1891 , a republican revolution broke out in the northern city of Porto and " A Portuguesa " was adopted by the rebels as their anthem .', 'label': "{'A Portuguesa': 'Miscellaneous', 'Porto': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Porto"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "January 31"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1891"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "A Portuguesa"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Porto': 'Location', 'January 31': 'Miscellaneous', '1891': 'Miscellaneous', 'A Portuguesa': 'Miscellaneous'}}
{'idx': 73, 'sentence': 'The fifth line of the chorus : " Contra os canhões marchar , marchar " ( Against the cannons march , march ! ) is an alteration of the original " Contra os bretões marchar , marchar " ( Against the Britos march , march ! ) , a reference to the Pink Map .', 'label': "{'Britos': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "fifth"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "chorus"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "cannons"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "march"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "alteration"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "original"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "Britos"\n)\nMiscellaneous_entity8 = Miscellaneous(\n    name = "Pink Map"\n)', 'prediction': {'fifth': 'Miscellaneous', 'chorus': 'Miscellaneous', 'cannons': 'Miscellaneous', 'march': 'Miscellaneous', 'alteration': 'Miscellaneous', 'original': 'Miscellaneous', 'Britos': 'Miscellaneous', 'Pink Map': 'Miscellaneous'}}
{'idx': 74, 'sentence': 'After World War II , it was changed to Veterans Day in the United States and to Remembrance Day in the British Commonwealth of Nations .', 'label': "{'Remembrance Day': 'Miscellaneous', 'United States': 'Location', 'World War II': 'Miscellaneous', 'British Commonwealth of Nations': 'Organization', 'Veterans Day': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Veterans Day"\n)\nOrganization_entity2 = Organization(\n    name = "Remembrance Day"\n)\nLocation_entity1 = Location(\n    name = "United States"\n)\nLocation_entity2 = Location(\n    name = "British Commonwealth of Nations"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Veterans Day': 'Organization', 'Remembrance Day': 'Organization', 'United States': 'Location', 'British Commonwealth of Nations': 'Location'}}
{'idx': 75, 'sentence': 'November 11th 2008 will be the 90th anniversary of Armistice Day .', 'label': "{'Armistice Day': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "November 11th 2008"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "90th anniversary"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Armistice Day"\n)', 'prediction': {'November 11th 2008': 'Miscellaneous', '90th anniversary': 'Miscellaneous', 'Armistice Day': 'Miscellaneous'}}
{'idx': 76, 'sentence': 'The ISAP , ILPAP and ETHEL companies belong to the public company OASA ( Organismos Astikon Syngoinonion Athinon / Athens Urban Transport Organisation / Οργανισμός Αστικών Συγκοινωνιών Αθηνών . The AMEL and Tram companies belong to Attiko Metro ( Αττικό Μετρό Α.Ε. in Greek ) , a company that is currently wholly owned by the Greek government .', 'label': "{'Greek government': 'Organization', 'ILPAP': 'Organization', 'Attiko Metro': 'Organization', 'Athens Urban Transport Organisation': 'Organization', 'ISAP': 'Organization', 'Tram': 'Organization', 'Greek': 'Miscellaneous', 'ETHEL': 'Organization', 'OASA': 'Organization', 'AMEL': 'Organization', 'Organismos Astikon Syngoinonion Athinon': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "ISAP"\n)\nOrganization_entity2 = Organization(\n    name = "ILPAP"\n)\nOrganization_entity3 = Organization(\n    name = "ETHEL"\n)\nOrganization_entity4 = Organization(\n    name = "OASA"\n)\nOrganization_entity5 = Organization(\n    name = "Attiko Metro"\n)\nOrganization_entity6 = Organization(\n    name = "Greek government"\n)', 'prediction': {'ISAP': 'Organization', 'ILPAP': 'Organization', 'ETHEL': 'Organization', 'OASA': 'Organization', 'Attiko Metro': 'Organization', 'Greek government': 'Organization'}}
{'idx': 77, 'sentence': 'According to the 2001 UK census , Atwick parish had a population of 318 .', 'label': "{'Atwick': 'Location', 'UK': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Atwick"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2001"\n)\nOrganization_entity1 = Organization(\n    name = "UK census"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "318"\n)', 'prediction': {'Atwick': 'Location', '2001': 'Miscellaneous', 'UK census': 'Organization', '318': 'Miscellaneous'}}
{'idx': 78, 'sentence': 'It is not a political party , but rather sees itself as a watchdog against government intervention .', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "political party"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "watchdog"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "government intervention"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'political party': 'Organization', 'watchdog': 'Miscellaneous', 'government intervention': 'Miscellaneous'}}
{'idx': 79, 'sentence': 'The League is distinctive for asserting that The Protocols of the Elders of Zion is a genuine Jewish document ( the Encyclopædi Britannica for example describes the Protocols as a " fraudulent document that served as a pretext and rationale for anti-Semitism in the early 20th century " ) .', 'label': "{'The Protocols of the Elders of Zion': 'Miscellaneous', 'Encyclopædi Britannica': 'Miscellaneous', 'League': 'Organization', 'Jewish': 'Miscellaneous', 'Protocols': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "The League"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "The Protocols of the Elders of Zion"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Jewish"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Encyclopædi Britannica"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "Protocols"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "anti-Semitism"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "20th century"\n)', 'prediction': {'The League': 'Organization', 'The Protocols of the Elders of Zion': 'Miscellaneous', 'Jewish': 'Miscellaneous', 'Encyclopædi Britannica': 'Miscellaneous', 'Protocols': 'Miscellaneous', 'anti-Semitism': 'Miscellaneous', '20th century': 'Miscellaneous'}}
{'idx': 80, 'sentence': 'Former Western Australian Labor MP , founder of the Australia First Party and later One Nation member Graeme Campbell was associated with the League at the same time as he was a member of One Nation and Australia First .', 'label': "{'Graeme Campbell': 'Person', 'Australia First': 'Organization', 'Labor': 'Organization', 'One Nation': 'Organization', 'Western Australian': 'Miscellaneous', 'Australia First Party': 'Organization', 'League': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "Graeme Campbell"\n)\nOrganization_entity1 = Organization(\n    name = "Australia First Party"\n)\nOrganization_entity2 = Organization(\n    name = "One Nation"\n)\nOrganization_entity3 = Organization(\n    name = "League"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Graeme Campbell': 'Person', 'Australia First Party': 'Organization', 'One Nation': 'Organization', 'League': 'Organization'}}
{'idx': 81, 'sentence': 'In the 1970s and early 1980s , the League attempted to gain control of the National Party of Australia , encouraging members to join the party in sufficient numbers to take control , a tactic known as entryism .', 'label': "{'League': 'Organization', 'National Party of Australia': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "League"\n)\nOrganization_entity2 = Organization(\n    name = "National Party of Australia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'League': 'Organization', 'National Party of Australia': 'Organization'}}
{'idx': 82, 'sentence': 'Critics have pointed to the past participation of the League in the former World Anti-Communist League alongside dictatorial regimes like that of Augusto Pinochet .', 'label': "{'World Anti-Communist League': 'Organization', 'Augusto Pinochet': 'Person', 'League': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "League"\n)\nOrganization_entity2 = Organization(\n    name = "World Anti-Communist League"\n)\nPerson_entity1 = Person(\n    name = "Augusto Pinochet"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'League': 'Organization', 'World Anti-Communist League': 'Organization', 'Augusto Pinochet': 'Person'}}
{'idx': 83, 'sentence': 'The Ayalon Cave is a large underground limestone cave located near Ramla , Israel .', 'label': "{'Ayalon Cave': 'Location', 'Ramla': 'Location', 'Israel': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Ayalon Cave"\n)\nLocation_entity2 = Location(\n    name = "Ramla"\n)\nLocation_entity3 = Location(\n    name = "Israel"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ayalon Cave': 'Location', 'Ramla': 'Location', 'Israel': 'Location'}}
{'idx': 84, 'sentence': 'The cave will remain closed to the public to allow scientific investigation to continue undisturbed .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "cave"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'cave': 'Location'}}
{'idx': 85, 'sentence': 'Baatsagaan is a sum ( district ) of Bayankhongor Province in southern Mongolia .', 'label': "{'Mongolia': 'Location', 'Baatsagaan': 'Location', 'Bayankhongor Province': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Baatsagaan"\n)\nLocation_entity2 = Location(\n    name = "Bayankhongor Province"\n)\nLocation_entity3 = Location(\n    name = "Mongolia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Baatsagaan': 'Location', 'Bayankhongor Province': 'Location', 'Mongolia': 'Location'}}
{'idx': 86, 'sentence': 'The Badminton World Federation ( BWF ) is the international governing body for the sport of badminton .', 'label': "{'Badminton World Federation': 'Organization', 'BWF': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Badminton World Federation"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "BWF"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "badminton"\n)', 'prediction': {'Badminton World Federation': 'Organization', 'BWF': 'Miscellaneous', 'badminton': 'Miscellaneous'}}
{'idx': 87, 'sentence': 'About ten miles from Bandarlapalle the Deccan Plateau ends in a dense forest range , sloping down into the plains of Tamilnadu .', 'label': "{'Tamilnadu': 'Location', 'Deccan Plateau': 'Location', 'Bandarlapalle': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Bandarlapalle"\n)\nLocation_entity2 = Location(\n    name = "Deccan Plateau"\n)\nLocation_entity3 = Location(\n    name = "Tamilnadu"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bandarlapalle': 'Location', 'Deccan Plateau': 'Location', 'Tamilnadu': 'Location'}}
{'idx': 88, 'sentence': 'However , since the last decade there has lot of developmental work taken place , with good roads , drinking water and schools being built .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "last decade"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "developmental work"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "good roads"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "drinking water"\n)\nOrganization_entity1 = Organization(\n    name = "schools"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'last decade': 'Miscellaneous', 'developmental work': 'Miscellaneous', 'good roads': 'Miscellaneous', 'drinking water': 'Miscellaneous', 'schools': 'Organization'}}
{'idx': 89, 'sentence': 'Following its independence , Bangladesh became an independent member of the World Organization of the Scout Movement in 1974 .', 'label': "{'World Organization of the Scout Movement': 'Organization', 'Bangladesh': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "World Organization of the Scout Movement"\n)\nLocation_entity1 = Location(\n    name = "Bangladesh"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'World Organization of the Scout Movement': 'Organization', 'Bangladesh': 'Location'}}
{'idx': 90, 'sentence': 'Membership is open to youth between 6 and 25 years of age , regardless of caste , creed or color .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Membership"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "youth"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "6"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "25"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "caste"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "creed"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "color"\n)', 'prediction': {'Membership': 'Miscellaneous', 'youth': 'Miscellaneous', '6': 'Miscellaneous', '25': 'Miscellaneous', 'caste': 'Miscellaneous', 'creed': 'Miscellaneous', 'color': 'Miscellaneous'}}
{'idx': 91, 'sentence': '5 .', 'label': '{}', 'response': 'None', 'prediction': {}}
{'idx': 92, 'sentence': 'In addition , there are American Boy Scouts in Dhaka , linked to the Direct Service branch of the Boy Scouts of America , which supports units around the world .', 'label': "{'Boy Scouts of America': 'Organization', 'Dhaka': 'Location', 'American Boy Scouts': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "American Boy Scouts"\n)\nLocation_entity1 = Location(\n    name = "Dhaka"\n)\nOrganization_entity2 = Organization(\n    name = "Direct Service branch of the Boy Scouts of America"\n)', 'prediction': {'American Boy Scouts': 'Organization', 'Dhaka': 'Location', 'Direct Service branch of the Boy Scouts of America': 'Organization'}}
{'idx': 93, 'sentence': 'Li Shimin led a siege on the city of Luoyang , head of the self-declared emperor Wang Shichong , who solicited help from Dou Jiande from the east .', 'label': "{'Wang Shichong': 'Person', 'Luoyang': 'Location', 'Li Shimin': 'Person', 'Dou Jiande': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Li Shimin"\n)\nLocation_entity1 = Location(\n    name = "Luoyang"\n)\nPerson_entity2 = Person(\n    name = "Wang Shichong"\n)\nPerson_entity3 = Person(\n    name = "Dou Jiande"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Li Shimin': 'Person', 'Luoyang': 'Location', 'Wang Shichong': 'Person', 'Dou Jiande': 'Person'}}
{'idx': 94, 'sentence': 'The French Voulet-Chanoine Mission , led by the captains Paul Voulet and Julien Chanoine , had been dispatched in 1898 to Africa by the French government with the mission to conquer the territories between the Niger River and Lake Chad and join in uniting French territories in West Africa .', 'label': "{'French': 'Miscellaneous', 'Voulet-Chanoine Mission': 'Organization', 'Paul Voulet': 'Person', 'West Africa': 'Location', 'Lake Chad': 'Location', 'Julien Chanoine': 'Person', 'French government': 'Organization', 'Niger River': 'Location', 'Africa': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "French Voulet-Chanoine Mission"\n)\nPerson_entity1 = Person(\n    name = "Paul Voulet"\n)\nPerson_entity2 = Person(\n    name = "Julien Chanoine"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1898"\n)\nLocation_entity1 = Location(\n    name = "Africa"\n)\nLocation_entity2 = Location(\n    name = "Niger River"\n)\nLocation_entity3 = Location(\n    name = "Lake Chad"\n)\nLocation_entity4 = Location(\n    name = "West Africa"\n)', 'prediction': {'French Voulet-Chanoine Mission': 'Organization', 'Paul Voulet': 'Person', 'Julien Chanoine': 'Person', '1898': 'Miscellaneous', 'Africa': 'Location', 'Niger River': 'Location', 'Lake Chad': 'Location', 'West Africa': 'Location'}}
{'idx': 95, 'sentence': 'The French found the enemy assembled on the field , while women and children had already retired themselves in a small thick and almost impenetrable bush where the Azna defended themselves when facing a superior enemy .', 'label': "{'Azna': 'Miscellaneous', 'French': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "French"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Azna"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'French': 'Organization', 'Azna': 'Miscellaneous'}}
{'idx': 96, 'sentence': 'The Battle of Vilcapugio was fought on October 1 , 1813 during the Campaign of Alto Peru in the Argentine War of Independence , where the pro-independence forces led by General Manuel Belgrano were defeated by the pro-Spanish Realists , led by Joaquin de la Pazuela .', 'label': "{'Campaign of Alto Peru': 'Miscellaneous', 'Argentine War of Independence': 'Miscellaneous', 'Manuel Belgrano': 'Person', 'Joaquin de la Pazuela': 'Person', 'Battle of Vilcapugio': 'Miscellaneous', 'pro-Spanish Realists': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Campaign of Alto Peru"\n)\nOrganization_entity2 = Organization(\n    name = "Argentine War of Independence"\n)\nPerson_entity1 = Person(\n    name = "General Manuel Belgrano"\n)\nPerson_entity2 = Person(\n    name = "Joaquin de la Pazuela"\n)', 'prediction': {'Campaign of Alto Peru': 'Organization', 'Argentine War of Independence': 'Organization', 'General Manuel Belgrano': 'Person', 'Joaquin de la Pazuela': 'Person'}}
{'idx': 97, 'sentence': "At the end of September 1813 , most of Belgrano 's army arrived in the prairie of Vilcapugio , which was a plateau surrounded by tall mountains to the north of Potosí .", 'label': "{'Potosí': 'Location', 'Belgrano': 'Person', 'Vilcapugio': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Vilcapugio"\n)\nLocation_entity2 = Location(\n    name = "Potosí"\n)\nOrganization_entity1 = Organization(\n    name = "Belgrano"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Vilcapugio': 'Location', 'Potosí': 'Location', 'Belgrano': 'Organization'}}
{'idx': 98, 'sentence': 'Belgrano and Eustaquio Díaz Vélez had decided that Vel would be the one to go to Potosí to reunite with the dispersed troops .', 'label': "{'Vel': 'Person', 'Eustaquio Díaz Vélez': 'Person', 'Potosí': 'Location', 'Belgrano': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Belgrano"\n)\nPerson_entity2 = Person(\n    name = "Eustaquio Díaz Vélez"\n)\nLocation_entity1 = Location(\n    name = "Potosí"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Belgrano': 'Person', 'Eustaquio Díaz Vélez': 'Person', 'Potosí': 'Location'}}
{'idx': 99, 'sentence': 'BayCon is a large convention topping two thousand attendees over the last several years .', 'label': "{'BayCon': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "BayCon"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "two thousand"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'BayCon': 'Organization', 'two thousand': 'Miscellaneous'}}
{'idx': 100, 'sentence': "BayCon ' 83 was also held over Thanksgiving weekend .", 'label': "{'BayCon': 'Miscellaneous', 'Thanksgiving': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "BayCon \'83"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {"BayCon '83": 'Organization'}}
{'idx': 101, 'sentence': 'The BEL20 is the benchmark stock market index of Euronext Brussels .', 'label': "{'Euronext Brussels': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "BEL20"\n)\nLocation_entity1 = Location(\n    name = "Euronext Brussels"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'BEL20': 'Organization', 'Euronext Brussels': 'Location'}}
{'idx': 102, 'sentence': 'In addition , a candidate for inclusion must possess a free float market capitalisation ( in Euros ) of at least 300000 times the price of the index on the last trading day of December .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Euros"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "300000"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "December"\n)', 'prediction': {'Euros': 'Miscellaneous', '300000': 'Miscellaneous', 'December': 'Miscellaneous'}}
{'idx': 103, 'sentence': 'He began his career as a short film comedy director and gradually moved into feature film directing and production later in his career .', 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "He"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "short film comedy director"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "feature film directing"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "production"\n)', 'prediction': {'He': 'Person', 'short film comedy director': 'Miscellaneous', 'feature film directing': 'Miscellaneous', 'production': 'Miscellaneous'}}
{'idx': 104, 'sentence': 'He played professionally for the Rochester Jeffersons and Buffalo Bisons', 'label': "{'Buffalo Bisons': 'Organization', 'Rochester Jeffersons': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Rochester Jeffersons"\n)\nOrganization_entity2 = Organization(\n    name = "Buffalo Bisons"\n)', 'prediction': {'Rochester Jeffersons': 'Organization', 'Buffalo Bisons': 'Organization'}}
{'idx': 105, 'sentence': 'Ben now also helps run Movement Bodyboarding Magazine .', 'label': "{'Movement Bodyboarding Magazine': 'Organization', 'Ben': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Ben"\n)\nOrganization_entity1 = Organization(\n    name = "Movement Bodyboarding Magazine"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ben': 'Person', 'Movement Bodyboarding Magazine': 'Organization'}}
{'idx': 106, 'sentence': 'At 28 , he sensed his chances of ever winning a world title receding with each hand raised in opposition : he had fancied his chances at the infamous Island .', 'label': "{'Island': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Island"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Island': 'Person'}}
{'idx': 107, 'sentence': "The irony of that frigid afternoon in Cronulla did n't dawn on Player as he paddled out in flawless , two-metre waves for the final of the Pipeline Pro ; he was too preoccupied with matters at hand .", 'label': "{'Player': 'Person', 'Pipeline Pro': 'Miscellaneous', 'Cronulla': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Cronulla"\n)\nPerson_entity1 = Person(\n    name = "Player"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Pipeline Pro"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Cronulla': 'Location', 'Player': 'Person', 'Pipeline Pro': 'Miscellaneous'}}
{'idx': 108, 'sentence': 'Then , further controversy .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "controversy"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'controversy': 'Miscellaneous'}}
{'idx': 109, 'sentence': 'No such contest debacles this year , which means Ben Player is more ambitious than ever to win it clean .', 'label': "{'Ben Player': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Ben Player"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ben Player': 'Person'}}
{'idx': 110, 'sentence': "That wiry frame has filled out during the 13 seasons he 's spent hassling for waves amongst the hungry pack of board riders who converge on the famous stretch of sand every northern winter .", 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "wiry frame"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "13 seasons"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "board riders"\n)\nLocation_entity1 = Location(\n    name = "stretch of sand"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "northern winter"\n)', 'prediction': {'wiry frame': 'Person', '13 seasons': 'Miscellaneous', 'board riders': 'Miscellaneous', 'stretch of sand': 'Location', 'northern winter': 'Miscellaneous'}}
{'idx': 111, 'sentence': 'Player won Australian titles as a cadet ( under-16s ) and as a pro in 2000 , part of the new generation that reshaped bodyboarding in Australia .', 'label': "{'Australia': 'Location', 'Australian': 'Miscellaneous', 'Player': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Player"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Australian"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "cadet"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "under-16s"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "pro"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "2000"\n)\nLocation_entity1 = Location(\n    name = "Australia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Player': 'Person', 'Australian': 'Miscellaneous', 'cadet': 'Miscellaneous', 'under-16s': 'Miscellaneous', 'pro': 'Miscellaneous', '2000': 'Miscellaneous', 'Australia': 'Location'}}
{'idx': 112, 'sentence': 'Basically I lost $85,000 for that year and $35,000 that was owed to me , " says Player .', 'label': "{'Player': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Player"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Player': 'Person'}}
{'idx': 113, 'sentence': '" It \'s still growing , but with the money remaining in bodyboarding . "', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "money"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'money': 'Miscellaneous'}}
{'idx': 114, 'sentence': 'For the first two years Player sold advertising for the mag , which was named Movement .', 'label': "{'Player': 'Person', 'Movement': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "Player"\n)\nOrganization_entity1 = Organization(\n    name = "Movement"\n)', 'prediction': {'Player': 'Person', 'Movement': 'Organization'}}
{'idx': 115, 'sentence': 'Bodyboarders now seek out the sort of aquatic slabs breaking in shallow water that stand-up surfers leave alone .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Bodyboarders"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "aquatic slabs"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "shallow water"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "stand-up surfers"\n)', 'prediction': {'Bodyboarders': 'Miscellaneous', 'aquatic slabs': 'Miscellaneous', 'shallow water': 'Miscellaneous', 'stand-up surfers': 'Miscellaneous'}}
{'idx': 116, 'sentence': '" I think surfing actually embraces bodyboarding much more now , because it \'s not really seen as competition -- we \'re something totally different , " he says .', 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "he"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "surfing"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "bodyboarding"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "competition"\n)', 'prediction': {'he': 'Person', 'surfing': 'Miscellaneous', 'bodyboarding': 'Miscellaneous', 'competition': 'Miscellaneous'}}
{'idx': 117, 'sentence': 'Portugal is the exception on the tour , a playful beach break , but it retains its status on the tour due to the carnival atmosphere that the sport attracts in Europe , as well as in South America .', 'label': "{'Europe': 'Location', 'Portugal': 'Location', 'South America': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Portugal"\n)\nLocation_entity2 = Location(\n    name = "Europe"\n)\nLocation_entity3 = Location(\n    name = "South America"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Portugal': 'Location', 'Europe': 'Location', 'South America': 'Location'}}
{'idx': 118, 'sentence': 'Kopački Rit , situated at the confluence of the Drava and the Danube , the unique preserved wetland area in this part of Europe is not far from Mece .', 'label': "{'Mece': 'Location', 'Kopački Rit': 'Location', 'Drava': 'Location', 'Europe': 'Location', 'Danube': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Kopački Rit"\n)\nLocation_entity2 = Location(\n    name = "Drava"\n)\nLocation_entity3 = Location(\n    name = "Danube"\n)\nLocation_entity4 = Location(\n    name = "Europe"\n)\nLocation_entity5 = Location(\n    name = "Mece"\n)', 'prediction': {'Kopački Rit': 'Location', 'Drava': 'Location', 'Danube': 'Location', 'Europe': 'Location', 'Mece': 'Location'}}
{'idx': 119, 'sentence': 'The name Bilka is believed by many to be a mix of the German Billiges Kaufhaus ( low-price department store ) , which its founder , Herman Salling had encountered during his business trips to West Germany .', 'label': "{'Herman Salling': 'Person', 'Bilka': 'Organization', 'West Germany': 'Location', 'German': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Bilka"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "German"\n)\nOrganization_entity2 = Organization(\n    name = "Billiges Kaufhaus"\n)\nLocation_entity1 = Location(\n    name = "West Germany"\n)\nPerson_entity1 = Person(\n    name = "Herman Salling"\n)', 'prediction': {'Bilka': 'Organization', 'German': 'Miscellaneous', 'Billiges Kaufhaus': 'Organization', 'West Germany': 'Location', 'Herman Salling': 'Person'}}
{'idx': 120, 'sentence': 'Attended James High School , in Houston .', 'label': "{'James High School': 'Organization', 'Houston': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "James"\n)\nOrganization_entity1 = Organization(\n    name = "High School"\n)\nLocation_entity1 = Location(\n    name = "Houston"\n)', 'prediction': {'James': 'Person', 'High School': 'Organization', 'Houston': 'Location'}}
{'idx': 121, 'sentence': 'Atessis was a member of teams which set school record 30-game winning streak that currently stands as the twelfth-longest in NCAA history and was a three-year letterman and three year starter at left defensive end .', 'label': "{'NCAA': 'Organization', 'Atessis': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Atessis"\n)\nOrganization_entity1 = Organization(\n    name = "NCAA"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "thirty"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "twelfth"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "three-year"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "three"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "left"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "defensive end"\n)', 'prediction': {'Atessis': 'Person', 'NCAA': 'Organization', 'thirty': 'Miscellaneous', 'twelfth': 'Miscellaneous', 'three-year': 'Miscellaneous', 'three': 'Miscellaneous', 'left': 'Miscellaneous', 'defensive end': 'Miscellaneous'}}
{'idx': 122, 'sentence': 'Played in the Senior Bowl in Mobile , Alabama , in January 1971 .', 'label': "{'Senior Bowl': 'Miscellaneous', 'Mobile': 'Location', 'Alabama': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Mobile"\n)\nLocation_entity2 = Location(\n    name = "Alabama"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Senior Bowl"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "January 1971"\n)', 'prediction': {'Mobile': 'Location', 'Alabama': 'Location', 'Senior Bowl': 'Miscellaneous', 'January 1971': 'Miscellaneous'}}
{'idx': 123, 'sentence': 'In 2005 was named to the All-Time University of Texas team by the Austin American-Statesman and was named to the Red River Rivalry All-time team by the Fort Worth Star-Telegram , also in 2005 .', 'label': "{'Fort Worth Star-Telegram': 'Organization', 'Austin American-Statesman': 'Organization', 'Red River Rivalry All-time team': 'Organization', 'University of Texas': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "University of Texas"\n)\nOrganization_entity2 = Organization(\n    name = "Austin American-Statesman"\n)\nOrganization_entity3 = Organization(\n    name = "Red River Rivalry"\n)\nOrganization_entity4 = Organization(\n    name = "Fort Worth Star-Telegram"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2005"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'University of Texas': 'Organization', 'Austin American-Statesman': 'Organization', 'Red River Rivalry': 'Organization', 'Fort Worth Star-Telegram': 'Organization', '2005': 'Miscellaneous'}}
{'idx': 124, 'sentence': 'Asked to drop weight and move to outside linebacker , a position he had never played .', 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "None"\n)\nOrganization_entity1 = Organization(\n    name = "None"\n)\nLocation_entity1 = Location(\n    name = "None"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "None"\n)', 'prediction': {'None': 'Miscellaneous'}}
{'idx': 125, 'sentence': 'Frequently injured , he was on track to shatter the league record for scoring in 1944 when another injury ended his season two points short .', 'label': "{'1944': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "he"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1944"\n)', 'prediction': {'he': 'Person', '1944': 'Miscellaneous'}}
{'idx': 126, 'sentence': 'In 1998 , he was ranked number 53 on The Hockey News list of the 100 Greatest Hockey Players .', 'label': "{'The Hockey News': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "he"\n)\nOrganization_entity1 = Organization(\n    name = "The Hockey News"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1998"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "53"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "100"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "Greatest"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "Players"\n)', 'prediction': {'he': 'Person', 'The Hockey News': 'Organization', '1998': 'Miscellaneous', '53': 'Miscellaneous', '100': 'Miscellaneous', 'Greatest': 'Miscellaneous', 'Players': 'Miscellaneous'}}
{'idx': 127, 'sentence': 'Brampton City Council is the governing body for the City of Brampton , Ontario .', 'label': "{'Ontario': 'Location', 'Brampton City Council': 'Organization', 'City of Brampton': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Brampton City Council"\n)\nLocation_entity1 = Location(\n    name = "Brampton"\n)\nLocation_entity2 = Location(\n    name = "Ontario"\n)', 'prediction': {'Brampton City Council': 'Organization', 'Brampton': 'Location', 'Ontario': 'Location'}}
{'idx': 128, 'sentence': 'The municipality is a part of the administrative municipality of Wörlitze Winkel , which has a seat in the city of Oranienbau .', 'label': "{'Wörlitze Winkel': 'Location', 'Oranienbau': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "municipality"\n)\nOrganization_entity2 = Organization(\n    name = "administrative municipality"\n)\nLocation_entity1 = Location(\n    name = "Wörlitze Winkel"\n)\nLocation_entity2 = Location(\n    name = "Oranienbau"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'municipality': 'Organization', 'administrative municipality': 'Organization', 'Wörlitze Winkel': 'Location', 'Oranienbau': 'Location'}}
{'idx': 129, 'sentence': 'Hinkley Locomotive Works modified their 2-foot gauge Forney design to run boiler first with an extended frame similar to that installed on Sandy River Railroad # 1 following a wreck in early 1882 .', 'label': "{'Sandy River Railroad': 'Location', 'Hinkley Locomotive Works': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Hinkley Locomotive Works"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Forney"\n)\nLocation_entity1 = Location(\n    name = "Sandy River Railroad"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1882"\n)', 'prediction': {'Hinkley Locomotive Works': 'Organization', 'Forney': 'Miscellaneous', 'Sandy River Railroad': 'Location', '1882': 'Miscellaneous'}}
{'idx': 130, 'sentence': 'Original Hinkley locomotives # 1-2 were replaced by # 5-6 of an improved design with pilot wheels .', 'label': "{'Hinkley': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Hinkley"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "locomotives # 1-2"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "locomotives # 5-6"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "pilot wheels"\n)', 'prediction': {'Hinkley': 'Organization', 'locomotives # 1-2': 'Miscellaneous', 'locomotives # 5-6': 'Miscellaneous', 'pilot wheels': 'Miscellaneous'}}
{'idx': 131, 'sentence': 'The first consisted of baggage # 10 , RPO # 25 , and one or two coaches .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "baggage # 10"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "RPO # 25"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "coaches"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'baggage # 10': 'Miscellaneous', 'RPO # 25': 'Miscellaneous', 'coaches': 'Miscellaneous'}}
{'idx': 132, 'sentence': 'Locomotive # 8 was the heaviest locomotive on any 2-foot gauge railway in Maine .', 'label': "{'Maine': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Maine"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Maine': 'Location'}}
{'idx': 133, 'sentence': 'Milepost 0 : Bridgton Junction - Interchange yard with the Portland and Ogdensburg ( later Maine Central Railroad Mountain Division . )', 'label': "{'Bridgton Junction': 'Location', 'Portland and Ogdensburg': 'Location', 'Maine Central Railroad Mountain Division': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Portland and Ogdensburg"\n)\nOrganization_entity2 = Organization(\n    name = "Maine Central Railroad Mountain Division"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Portland and Ogdensburg': 'Organization', 'Maine Central Railroad Mountain Division': 'Organization'}}
{'idx': 134, 'sentence': 'Milepost 1 : granite masonry arch over Hancock Brook .', 'label': "{'Hancock Brook': 'Location'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Milepost 1"\n)\nLocation_entity1 = Location(\n    name = "Hancock Brook"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Milepost 1': 'Miscellaneous', 'Hancock Brook': 'Location'}}
{'idx': 135, 'sentence': 'Milepost 4.4 : Twin Lake - small flag stop passenger shelter .', 'label': "{'Twin Lake': 'Location'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Milepost 4.4"\n)\nLocation_entity1 = Location(\n    name = "Twin Lake"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "small flag stop passenger shelter"\n)', 'prediction': {'Milepost 4.4': 'Miscellaneous', 'Twin Lake': 'Location', 'small flag stop passenger shelter': 'Miscellaneous'}}
{'idx': 136, 'sentence': "Milepost 9.0 : Perley 's Mills - southbound spur with small flag stop passenger shelter .", 'label': '{"Perley \'s Mills": \'Location\'}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Milepost 9.0"\n)\nLocation_entity1 = Location(\n    name = "Perley \'s Mills"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "southbound spur"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "small flag stop passenger shelter"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Milepost 9.0': 'Miscellaneous', "Perley 's Mills": 'Location', 'southbound spur': 'Miscellaneous', 'small flag stop passenger shelter': 'Miscellaneous'}}
{'idx': 137, 'sentence': 'Milepost 15.8 : Bridgton - had the largest population of any village served by the Maine 2-foot gauge railroads .', 'label': "{'Maine': 'Location', 'Bridgton': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Milepost 15.8"\n)\nOrganization_entity1 = Organization(\n    name = "Bridgton"\n)\nLocation_entity2 = Location(\n    name = "Maine"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Milepost 15.8': 'Location', 'Bridgton': 'Organization', 'Maine': 'Location'}}
{'idx': 138, 'sentence': "Milepost 20.7 : Harrison - agent 's station with a passing siding and several southbound spurs serving a freight house , a cannery , a grain store , a 2-track car shed , and a turntable with a single-stall enginehouse .", 'label': "{'Harrison': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Harrison"\n)\nOrganization_entity2 = Organization(\n    name = "agent\'s station"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Milepost 20.7"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "passing siding"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "southbound spurs"\n)\nOrganization_entity3 = Organization(\n    name = "freight house"\n)\nOrganization_entity4 = Organization(\n    name = "cannery"\n)\nOrganization_entity5 = Organization(\n    name = "grain store"\n)\nOrganization_entity6 = Organization(\n    name = "2-track car shed"\n)\nOrganization_entity7 = Organization(\n    name = "turntable"\n)\nOrganization_entity8 = Organization(\n    name = "single-stall enginehouse"\n)', 'prediction': {'Harrison': 'Organization', "agent's station": 'Organization', 'Milepost 20.7': 'Miscellaneous', 'passing siding': 'Miscellaneous', 'southbound spurs': 'Miscellaneous', 'freight house': 'Organization', 'cannery': 'Organization', 'grain store': 'Organization', '2-track car shed': 'Organization', 'turntable': 'Organization', 'single-stall enginehouse': 'Organization'}}
{'idx': 139, 'sentence': 'The car was sold for use as a restaurant in 1935 .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "car"\n)\nOrganization_entity1 = Organization(\n    name = "restaurant"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1935"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'car': 'Miscellaneous', 'restaurant': 'Organization', '1935': 'Miscellaneous'}}
{'idx': 140, 'sentence': 'Cars # 22 and # 21/14 were the only 2-foot gauge tank cars in Maine .', 'label': "{'Maine': 'Location'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Cars # 22"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Cars # 21/14"\n)\nLocation_entity1 = Location(\n    name = "Maine"\n)', 'prediction': {'Cars # 22': 'Miscellaneous', 'Cars # 21/14': 'Miscellaneous', 'Maine': 'Location'}}
{'idx': 141, 'sentence': 'It is also a partner in the Masters of Digital Media program run by Great Northern Way Campus Ltd , and rents training space there with several other institutions .', 'label': "{'Great Northern Way Campus Ltd': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Masters of Digital Media program"\n)\nOrganization_entity2 = Organization(\n    name = "Great Northern Way Campus Ltd"\n)', 'prediction': {'Masters of Digital Media program': 'Organization', 'Great Northern Way Campus Ltd': 'Organization'}}
{'idx': 142, 'sentence': 'His manager was future Hall of Famer Bill McKechnie .', 'label': "{'Bill McKechnie': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bill McKechnie"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bill McKechnie': 'Person'}}
{'idx': 143, 'sentence': 'Stan believes that this will destroy his chance for a promotion .', 'label': "{'Stan': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Stan"\n)', 'prediction': {'Stan': 'Person'}}
{'idx': 144, 'sentence': 'At a diner , Bullock calls Hayley a slut , which offends Stan , and the two CIA men get into a lengthy fist-fight ( with some audio-commentary from Klaus ) .', 'label': "{'Stan': 'Person', 'Hayley': 'Person', 'Bullock': 'Person', 'CIA': 'Organization', 'Klaus': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bullock"\n)\nPerson_entity2 = Person(\n    name = "Hayley"\n)\nPerson_entity3 = Person(\n    name = "Stan"\n)\nOrganization_entity1 = Organization(\n    name = "CIA"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Klaus"\n)', 'prediction': {'Bullock': 'Person', 'Hayley': 'Person', 'Stan': 'Person', 'CIA': 'Organization', 'Klaus': 'Miscellaneous'}}
{'idx': 145, 'sentence': 'A parcel just south of it was named Lincoln Park the same year .', 'label': "{'Lincoln Park': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Lincoln Park"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Lincoln Park': 'Location'}}
{'idx': 146, 'sentence': 'Rebuilding of the reservoir to convert it from open-air to covered started in April 2003 and lasted through summer 2005 .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "reservoir"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "April 2003"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "summer 2005"\n)', 'prediction': {'reservoir': 'Location', 'April 2003': 'Miscellaneous', 'summer 2005': 'Miscellaneous'}}
{'idx': 147, 'sentence': 'In 1972 , Caloi introduced the Caloi 10 , which became a cultural landmark and established the name Caloi in Brazil .', 'label': "{'Caloi': 'Organization', 'Caloi 10': 'Miscellaneous', 'Brazil': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Caloi"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Caloi 10"\n)\nLocation_entity1 = Location(\n    name = "Brazil"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Caloi': 'Organization', 'Caloi 10': 'Miscellaneous', 'Brazil': 'Location'}}
{'idx': 148, 'sentence': 'Guido died in 1955 , and the company was directed by his son Bruno Caloi until 1999 .', 'label': "{'Bruno Caloi': 'Person', 'Guido': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Guido"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1955"\n)\nOrganization_entity1 = Organization(\n    name = "Bruno Caloi"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1999"\n)', 'prediction': {'Guido': 'Person', '1955': 'Miscellaneous', 'Bruno Caloi': 'Organization', '1999': 'Miscellaneous'}}
{'idx': 149, 'sentence': 'This tracks comes off their 1998 album , Electro-Shock Blues .', 'label': "{'Electro-Shock Blues': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1998"\n)\nOrganization_entity1 = Organization(\n    name = "Electro-Shock Blues"\n)', 'prediction': {'1998': 'Miscellaneous', 'Electro-Shock Blues': 'Organization'}}
{'idx': 150, 'sentence': 'Savage lives in Saskatchewan .', 'label': "{'Saskatchewan': 'Location', 'Savage': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Savage"\n)\nLocation_entity1 = Location(\n    name = "Saskatchewan"\n)', 'prediction': {'Savage': 'Person', 'Saskatchewan': 'Location'}}
{'idx': 151, 'sentence': '" She insists on \' a clean sound \' , has banned backing vocals and says her pet hate is \' over-singing \' . "', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "clean sound"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "over-singing"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'clean sound': 'Miscellaneous', 'over-singing': 'Miscellaneous'}}
{'idx': 152, 'sentence': 'Because of the power of the drugs the handlers then have to move quickly to secure the animal for transport , monitor its vital signs , protect its eyes and ears , and then inject reversing drugs when needed .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "drugs"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "handlers"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "animal"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "transport"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "vital signs"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "eyes"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "ears"\n)\nMiscellaneous_entity8 = Miscellaneous(\n    name = "reversing drugs"\n)', 'prediction': {'drugs': 'Miscellaneous', 'handlers': 'Miscellaneous', 'animal': 'Miscellaneous', 'transport': 'Miscellaneous', 'vital signs': 'Miscellaneous', 'eyes': 'Miscellaneous', 'ears': 'Miscellaneous', 'reversing drugs': 'Miscellaneous'}}
{'idx': 153, 'sentence': "He began playing in 2001 and has won tournaments in Walsall , Melbourne , Luton and London ( where he won the £500 no limit hold'em event of the 200 British Open , defeating Lucy Rokach in the heads-up confrontation .", 'label': "{'Walsall': 'Location', 'British Open': 'Miscellaneous', 'Luton': 'Location', 'Lucy Rokach': 'Person', 'Melbourne': 'Location', 'London': 'Location', '200': 'Person'}", 'response': 'Location_entity1 = Location(\n    name = "Walsall"\n)\nLocation_entity2 = Location(\n    name = "Melbourne"\n)\nLocation_entity3 = Location(\n    name = "Luton"\n)\nLocation_entity4 = Location(\n    name = "London"\n)\nPerson_entity1 = Person(\n    name = "Lucy Rokach"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2001"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "£500"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "British Open"\n)', 'prediction': {'Walsall': 'Location', 'Melbourne': 'Location', 'Luton': 'Location', 'London': 'Location', 'Lucy Rokach': 'Person', '2001': 'Miscellaneous', '£500': 'Miscellaneous', 'British Open': 'Miscellaneous'}}
{'idx': 154, 'sentence': 'Citrone eventually served approximately twelve months for the offence and was ordered to pay some £370,000 as part of a Confiscation Order ordered in favour of the Crown .', 'label': "{'Crown': 'Organization', 'Citrone': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Crown"\n)', 'prediction': {'Crown': 'Organization'}}
{'idx': 155, 'sentence': 'As of 2007 his total live tournament winnings exceed $670,000 .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "2007"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "$670,000"\n)', 'prediction': {'2007': 'Miscellaneous', '$670,000': 'Miscellaneous'}}
{'idx': 156, 'sentence': 'Carmen Cavallaro ( May 6 , 1913 -- October 12 , 1989 ) was an American pianist born in New York .', 'label': "{'American': 'Miscellaneous', 'New York': 'Location', 'Carmen Cavallaro': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Carmen Cavallaro"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "May 6"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1913"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "October 12"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "1989"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "American"\n)\nLocation_entity1 = Location(\n    name = "New York"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Carmen Cavallaro': 'Person', 'May 6': 'Miscellaneous', '1913': 'Miscellaneous', 'October 12': 'Miscellaneous', '1989': 'Miscellaneous', 'American': 'Miscellaneous', 'New York': 'Location'}}
{'idx': 157, 'sentence': "After four years he switched to a series of other big bands , including Rudy Vallee 's in 1937 .", 'label': "{'Rudy Vallee': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Rudy Vallee"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1937"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Rudy Vallee': 'Organization', '1937': 'Miscellaneous'}}
{'idx': 158, 'sentence': 'Cavallaro developed a piano style of glittering and rippling arpeggios to augment his melody , which was often arranged in thick and lush triple and quadruple octave chords .', 'label': "{'Cavallaro': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Cavallaro"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "piano style"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "arpeggios"\n)\nPerson_entity2 = Person(\n    name = "melody"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "triple"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "quadruple"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "octave chords"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Cavallaro': 'Person', 'piano style': 'Miscellaneous', 'arpeggios': 'Miscellaneous', 'melody': 'Person', 'triple': 'Miscellaneous', 'quadruple': 'Miscellaneous', 'octave chords': 'Miscellaneous'}}
{'idx': 159, 'sentence': "His most celebrated film achievement was playing the piano music for actor Tyrone Power 's hands to mime , in The Eddy Duchin Story ( 1956 ) .", 'label': "{'Tyrone Power': 'Person', 'The Eddy Duchin Story': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Tyrone Power"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "The Eddy Duchin Story"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1956"\n)', 'prediction': {'Tyrone Power': 'Person', 'The Eddy Duchin Story': 'Miscellaneous', '1956': 'Miscellaneous'}}
{'idx': 160, 'sentence': 'At the time , his father had bought tickets to a Buddy Rich concert and could not find someone to watch his son , so he took young Carter along to the show .', 'label': "{'Buddy Rich': 'Person', 'Carter': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Buddy Rich"\n)\nPerson_entity2 = Person(\n    name = "Carter"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Buddy Rich': 'Person', 'Carter': 'Person'}}
{'idx': 161, 'sentence': "Secrets would perform throughout Virginia , often at Miller's , the bar in Charlottesville where Dave Matthews worked as a bartender .", 'label': '{\'Dave Matthews\': \'Person\', \'Charlottesville\': \'Location\', "Miller\'s": \'Organization\', \'Virginia\': \'Location\'}', 'response': 'Location_entity1 = Location(\n    name = "Virginia"\n)\nOrganization_entity1 = Organization(\n    name = "Miller\'s"\n)\nLocation_entity2 = Location(\n    name = "Charlottesville"\n)\nPerson_entity1 = Person(\n    name = "Dave Matthews"\n)', 'prediction': {'Virginia': 'Location', "Miller's": 'Organization', 'Charlottesville': 'Location', 'Dave Matthews': 'Person'}}
{'idx': 162, 'sentence': 'With his second wife , Karen , he has two children : a daughter , Nadja Angelique Beauford born October 5th 2001 and a son Marcus Carrington Beauford born in December 2004 .', 'label': "{'Karen': 'Person', 'October 5th 2001': 'Person', 'Marcus Carrington Beauford': 'Person', 'Nadja Angelique Beauford': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Karen"\n)\nPerson_entity2 = Person(\n    name = "Nadja Angelique Beauford"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "October 5th 2001"\n)\nPerson_entity3 = Person(\n    name = "Marcus Carrington Beauford"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "December 2004"\n)', 'prediction': {'Karen': 'Person', 'Nadja Angelique Beauford': 'Person', 'October 5th 2001': 'Miscellaneous', 'Marcus Carrington Beauford': 'Person', 'December 2004': 'Miscellaneous'}}
{'idx': 163, 'sentence': "In 1991 , the mall expanded , adding a food court and three new anchors : Thalhimer's , JC Penney , and Sears , and was renamed Cary Towne Center .", 'label': '{\'Cary Towne Center\': \'Organization\', "Thalhimer\'s": \'Organization\', \'Sears\': \'Organization\', \'JC Penney\': \'Organization\'}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1991"\n)\nOrganization_entity1 = Organization(\n    name = "Thalhimer\'s"\n)\nOrganization_entity2 = Organization(\n    name = "JC Penney"\n)\nOrganization_entity3 = Organization(\n    name = "Sears"\n)\nOrganization_entity4 = Organization(\n    name = "Cary Towne Center"\n)', 'prediction': {'1991': 'Miscellaneous', "Thalhimer's": 'Organization', 'JC Penney': 'Organization', 'Sears': 'Organization', 'Cary Towne Center': 'Organization'}}
{'idx': 164, 'sentence': 'Cable systems in the early 1980s had far more limited channel capacity than they do today ( usually only a few dozen channels in most cities ) .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Cable systems"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1980s"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "channel capacity"\n)\nLocation_entity1 = Location(\n    name = "cities"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Cable systems': 'Miscellaneous', '1980s': 'Miscellaneous', 'channel capacity': 'Miscellaneous', 'cities': 'Location'}}
{'idx': 165, 'sentence': 'Centennial Tower and PlazaCenter are next door .', 'label': "{'PlazaCenter': 'Organization', 'Centennial Tower': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "Centennial Tower"\n)\nOrganization_entity1 = Organization(\n    name = "PlazaCenter"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Centennial Tower': 'Location', 'PlazaCenter': 'Organization'}}
{'idx': 166, 'sentence': 'He played in Single A in 2002 and recorded a 2.26 ERA which ranked him 10th in all of minor league baseball .', 'label': "{'Single A': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Single A"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2002"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2.26 ERA"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "10th"\n)\nOrganization_entity2 = Organization(\n    name = "minor league baseball"\n)', 'prediction': {'Single A': 'Organization', '2002': 'Miscellaneous', '2.26 ERA': 'Miscellaneous', '10th': 'Miscellaneous', 'minor league baseball': 'Organization'}}
{'idx': 167, 'sentence': 'On December 12 , 2004 , Gaudin was traded to the Toronto Blue Jays for backup catcher Kevin Cash .', 'label': "{'Gaudin': 'Person', 'Toronto Blue Jays': 'Organization', 'Kevin Cash': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Toronto Blue Jays"\n)\nPerson_entity1 = Person(\n    name = "Gaudin"\n)\nPerson_entity2 = Person(\n    name = "Kevin Cash"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Toronto Blue Jays': 'Organization', 'Gaudin': 'Person', 'Kevin Cash': 'Person'}}
{'idx': 168, 'sentence': 'In his first season as an Athletic , he posted various career highs and his ERA ( 3.09 ) and opponents batting average were the lowest of his career .', 'label': "{'Athletic': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Athletic"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Athletic': 'Organization'}}
{'idx': 169, 'sentence': 'The language is of the Chamicuro people who number between 10 and 20 .', 'label': "{'Chamicuro': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Chamicuro"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "10"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "20"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Chamicuro': 'Miscellaneous', '10': 'Miscellaneous', '20': 'Miscellaneous'}}
{'idx': 170, 'sentence': 'Champdor is a commune in the French département of Ai .', 'label': "{'Ai': 'Location', 'Champdor': 'Location', 'French': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Champdor"\n)\nLocation_entity2 = Location(\n    name = "French"\n)\nLocation_entity3 = Location(\n    name = "Ai"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Champdor': 'Location', 'French': 'Location', 'Ai': 'Location'}}
{'idx': 171, 'sentence': 'Charan Jeath Singh is a Fiji Indian who has been involved in local Government and national politics in Fiji representing various political organisations .', 'label': "{'Charan Jeath Singh': 'Person', 'Indian': 'Miscellaneous', 'Fiji': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Charan Jeath Singh"\n)\nLocation_entity1 = Location(\n    name = "Fiji"\n)\nOrganization_entity1 = Organization(\n    name = "local Government"\n)\nOrganization_entity2 = Organization(\n    name = "national politics"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Charan Jeath Singh': 'Person', 'Fiji': 'Location', 'local Government': 'Organization', 'national politics': 'Organization'}}
{'idx': 172, 'sentence': 'In the 2006 general election , he contested the Vanua Levu West Indian Communal Constituency , Fiji ) for the National Alliance Party ( NAPF ) and again lost with only 14% of the votes cast .', 'label': "{'NAPF': 'Organization', 'Vanua Levu West Indian': 'Location', 'Fiji': 'Location', 'National Alliance Party': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "National Alliance Party"\n)\nLocation_entity1 = Location(\n    name = "Fiji"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'National Alliance Party': 'Organization', 'Fiji': 'Location'}}
{'idx': 173, 'sentence': 'After just a year at Coburg he returned to the league and played with North Melbourne , becoming a regular in their side during the 1930s .', 'label': "{'Coburg': 'Organization', 'North Melbourne': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Coburg"\n)\nOrganization_entity2 = Organization(\n    name = "North Melbourne"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1930s"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Coburg': 'Organization', 'North Melbourne': 'Organization', '1930s': 'Miscellaneous'}}
{'idx': 174, 'sentence': 'It has been used as a political prison by Germans during the occupation of France from 1940 to 1944 .', 'label': "{'Germans': 'Miscellaneous', 'France': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Germans"\n)\nLocation_entity1 = Location(\n    name = "France"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1940"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1944"\n)', 'prediction': {'Germans': 'Organization', 'France': 'Location', '1940': 'Miscellaneous', '1944': 'Miscellaneous'}}
{'idx': 175, 'sentence': 'Christopher Bailey is a lecturer of English at the University of Brighton and is an occasional screenwriter for television .', 'label': "{'University of Brighton': 'Organization', 'Christopher Bailey': 'Person', 'English': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Christopher Bailey"\n)\nOrganization_entity1 = Organization(\n    name = "University of Brighton"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Christopher Bailey': 'Person', 'University of Brighton': 'Organization'}}
{'idx': 176, 'sentence': "As a result , the two Mara scripts were Bailey 's final broadcast work for both Doctor Who and television in general and he returned to a career in academia .", 'label': "{'Doctor Who': 'Miscellaneous', 'Bailey': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bailey"\n)\nOrganization_entity1 = Organization(\n    name = "Doctor Who"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bailey': 'Person', 'Doctor Who': 'Organization'}}
{'idx': 177, 'sentence': 'After a twenty minute stand-off he aimed the pistol at Lieutenant Michael Weippert , who responded by opening fire .', 'label': "{'Michael Weippert': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Lieutenant Michael Weippert"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Lieutenant Michael Weippert': 'Person'}}
{'idx': 178, 'sentence': 'The Orlando Sentinel reported that Ralph Penley was not told of events until after his son was shot .', 'label': "{'Ralph Penley': 'Person', 'Orlando Sentinel': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "Ralph Penley"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ralph Penley': 'Person'}}
{'idx': 179, 'sentence': 'It remained on the F1 calendar for 30 out of the next 34 years .', 'label': "{'F1': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "F1"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'F1': 'Organization'}}
{'idx': 180, 'sentence': 'The most famous corner in the circuit is the Tarzanbocht ( Tarzan corner ) which provides excellent overtaking opportunities .', 'label': "{'Tarzan corner': 'Location', 'Tarzanbocht': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Tarzan"\n)', 'prediction': {'Tarzan': 'Person'}}
{'idx': 181, 'sentence': "This was later converted to NASCAR 4 , NASCAR 2002 , 2003 and other simulations using a converter from website ' The Pits ' .", 'label': "{'NASCAR 4': 'Miscellaneous', 'NASCAR 2002': 'Miscellaneous', 'The Pits': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "NASCAR"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "4"\n)\nOrganization_entity2 = Organization(\n    name = "NASCAR 2002"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2003"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "simulations"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "converter"\n)\nOrganization_entity3 = Organization(\n    name = "website \' The Pits \'"\n)', 'prediction': {'NASCAR': 'Organization', '4': 'Miscellaneous', 'NASCAR 2002': 'Organization', '2003': 'Miscellaneous', 'simulations': 'Miscellaneous', 'converter': 'Miscellaneous', "website ' The Pits '": 'Organization'}}
{'idx': 182, 'sentence': 'Clergoux is a village and commune in the Corrèz département of central Franc .', 'label': "{'Franc': 'Location', 'Clergoux': 'Location', 'Corrèz': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Clergoux"\n)\nLocation_entity2 = Location(\n    name = "Corrèz"\n)\nLocation_entity3 = Location(\n    name = "Franc"\n)', 'prediction': {'Clergoux': 'Location', 'Corrèz': 'Location', 'Franc': 'Location'}}
{'idx': 183, 'sentence': 'Clinical Hospital Mostar ( Croatian Klinička bolnica Mostar ) is the largest hospital in Mostar , Bosnia and Herzegovina .', 'label': "{'Mostar': 'Location', 'Clinical Hospital Mostar': 'Organization', 'Croatian': 'Miscellaneous', 'Bosnia and Herzegovina': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Clinical Hospital Mostar"\n)\nLocation_entity1 = Location(\n    name = "Mostar"\n)\nLocation_entity2 = Location(\n    name = "Bosnia and Herzegovina"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Clinical Hospital Mostar': 'Organization', 'Mostar': 'Location', 'Bosnia and Herzegovina': 'Location'}}
{'idx': 184, 'sentence': 'The Cold Spring Harbor Laboratory ( CSHL ) is a private , non-profit institution with research programs focusing on cancer , neurobiology , plant genetics , genomics and bioinformatics .', 'label': "{'CSHL': 'Organization', 'Cold Spring Harbor Laboratory': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Cold Spring Harbor Laboratory"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "CSHL"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "cancer"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "neurobiology"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "plant genetics"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "genomics"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "bioinformatics"\n)', 'prediction': {'Cold Spring Harbor Laboratory': 'Organization', 'CSHL': 'Miscellaneous', 'cancer': 'Miscellaneous', 'neurobiology': 'Miscellaneous', 'plant genetics': 'Miscellaneous', 'genomics': 'Miscellaneous', 'bioinformatics': 'Miscellaneous'}}
{'idx': 185, 'sentence': "The Carnegie Institution Department of Genetics scientists at Cold Spring Harbor made innumerable contributions to the sciences of genetics , medicine , and the then-infant science of molecular biology , and in 1962 its facilities merged with those of The Brooklyn Institute 's Biological Laboratory to create what is known today as Cold Spring Harbor Laboratory .", 'label': "{'Cold Spring Harbor Laboratory': 'Organization', 'Carnegie Institution Department of Genetics': 'Organization', 'Cold Spring Harbor': 'Organization', 'The Brooklyn Institute': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Carnegie Institution Department of Genetics"\n)\nLocation_entity1 = Location(\n    name = "Cold Spring Harbor"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1962"\n)\nOrganization_entity2 = Organization(\n    name = "Brooklyn Institute"\n)\nOrganization_entity3 = Organization(\n    name = "Biological Laboratory"\n)\nOrganization_entity4 = Organization(\n    name = "Cold Spring Harbor Laboratory"\n)', 'prediction': {'Carnegie Institution Department of Genetics': 'Organization', 'Cold Spring Harbor': 'Location', '1962': 'Miscellaneous', 'Brooklyn Institute': 'Organization', 'Biological Laboratory': 'Organization', 'Cold Spring Harbor Laboratory': 'Organization'}}
{'idx': 186, 'sentence': 'Currently , cancer biologist Bruce Stillman serves as laboratory President .', 'label': "{'Bruce Stillman': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bruce Stillman"\n)\nOrganization_entity1 = Organization(\n    name = "laboratory"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bruce Stillman': 'Person', 'laboratory': 'Organization'}}
{'idx': 187, 'sentence': 'Aside from its scientific mission , the laboratory is host to world-class scientific conferences on a variety of topics .', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "laboratory"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'laboratory': 'Organization'}}
{'idx': 188, 'sentence': 'Salvador Luria and Max Delbrüc founded the Phage Course in 1948 , a course that trained many of the leaders of the new field of molecular genetics .', 'label': "{'Salvador Luria': 'Person', 'Max Delbrüc': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Salvador Luria"\n)\nPerson_entity2 = Person(\n    name = "Max Delbrüc"\n)\nOrganization_entity1 = Organization(\n    name = "Phage Course"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1948"\n)', 'prediction': {'Salvador Luria': 'Person', 'Max Delbrüc': 'Person', 'Phage Course': 'Organization', '1948': 'Miscellaneous'}}
{'idx': 189, 'sentence': 'It is part of the Coleman Federal Correctional Complex .', 'label': "{'Coleman Federal Correctional Complex': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Coleman Federal Correctional Complex"\n)', 'prediction': {'Coleman Federal Correctional Complex': 'Location'}}
{'idx': 190, 'sentence': 'Held since 1990 , the tournament is played on outdoor hardcourts .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1990"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "tournament"\n)\nLocation_entity1 = Location(\n    name = "outdoor hardcourts"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'1990': 'Miscellaneous', 'tournament': 'Miscellaneous', 'outdoor hardcourts': 'Location'}}
{'idx': 191, 'sentence': 'Later it became a 6/40 game .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "6/40"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'6/40': 'Miscellaneous'}}
{'idx': 192, 'sentence': 'Top-prize winners choose lump sum or annuity within 60 days of claiming the jackpot .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Top-prize"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "60 days"\n)\nOrganization_entity1 = Organization(\n    name = "jackpot"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Top-prize': 'Miscellaneous', '60 days': 'Miscellaneous', 'jackpot': 'Organization'}}
{'idx': 193, 'sentence': 'A Classic Lotto jackpot of $3.5 million ( annuity ) on a ticket bought in February 2006 went unclaimed .', 'label': "{'Classic Lotto': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Classic Lotto"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "February 2006"\n)', 'prediction': {'Classic Lotto': 'Miscellaneous', 'February 2006': 'Miscellaneous'}}
{'idx': 194, 'sentence': 'It is currently served by the South West Trains , Southern , and First Great Western train operating companies .', 'label': "{'First Great Western': 'Organization', 'South West Trains': 'Organization', 'Southern': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "South West Trains"\n)\nOrganization_entity2 = Organization(\n    name = "Southern"\n)\nOrganization_entity3 = Organization(\n    name = "First Great Western"\n)', 'prediction': {'South West Trains': 'Organization', 'Southern': 'Organization', 'First Great Western': 'Organization'}}
{'idx': 195, 'sentence': 'Crazyhead are an English punk rock / garage rock band from Leicester .', 'label': "{'Crazyhead': 'Organization', 'English': 'Miscellaneous', 'Leicester': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Crazyhead"\n)\nLocation_entity1 = Location(\n    name = "Leicester"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Crazyhead': 'Organization', 'Leicester': 'Location'}}
{'idx': 196, 'sentence': 'Their second single " Baby Turpentine " reached number 4 in the Indie Chart .', 'label': "{'Baby Turpentine': 'Miscellaneous', 'Indie Chart': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Baby Turpentine"\n)\nOrganization_entity1 = Organization(\n    name = "Indie Chart"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Baby Turpentine': 'Miscellaneous', 'Indie Chart': 'Organization'}}
{'idx': 197, 'sentence': 'Later that year they played at the Namibian Independence Day concert to an audience of 50,000 .', 'label': "{'Namibian Independence Day concert': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Namibian Independence Day concert"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Namibian Independence Day concert': 'Location'}}
{'idx': 198, 'sentence': 'They started recording material for a new album , but the departure of Anderson to work abroad meant the end of the band .', 'label': "{'Anderson': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "band"\n)\nPerson_entity1 = Person(\n    name = "Anderson"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'band': 'Organization', 'Anderson': 'Person'}}
{'idx': 199, 'sentence': 'The partnership went public in 1994 , trading under the stock symbol CRO on the New York Stock Exchange .', 'label': "{'New York Stock Exchange': 'Organization'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1994"\n)\nOrganization_entity1 = Organization(\n    name = "CRO"\n)\nLocation_entity1 = Location(\n    name = "New York Stock Exchange"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'1994': 'Miscellaneous', 'CRO': 'Organization', 'New York Stock Exchange': 'Location'}}
{'idx': 200, 'sentence': 'He was born in Humberstone Township in 1825 , the son of John Near , and grew up there .', 'label': "{'John Near': 'Person', 'Humberstone Township': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Humberstone Township"\n)\nPerson_entity1 = Person(\n    name = "John Near"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Humberstone Township': 'Location', 'John Near': 'Person'}}
{'idx': 201, 'sentence': 'Prodan won five consecutive league titles with Steaua before moving to play in Spain .', 'label': "{'Spain': 'Location', 'Steaua': 'Organization', 'Prodan': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Steaua"\n)\nLocation_entity1 = Location(\n    name = "Spain"\n)', 'prediction': {'Steaua': 'Organization', 'Spain': 'Location'}}
{'idx': 202, 'sentence': 'He specialises in algebra and group theory .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "algebra"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "group theory"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'algebra': 'Miscellaneous', 'group theory': 'Miscellaneous'}}
{'idx': 203, 'sentence': 'It was released in 2003 on Aftermath Records .', 'label': "{'Aftermath Records': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Aftermath Records"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2003"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Aftermath Records': 'Organization', '2003': 'Miscellaneous'}}
{'idx': 204, 'sentence': "The band 's music has been described as electro / synthpop with a slightly sombre overtone and introverted lyrical sensibility .", 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "band"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "music"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "electro"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "synthpop"\n)', 'prediction': {'band': 'Organization', 'music': 'Miscellaneous', 'electro': 'Miscellaneous', 'synthpop': 'Miscellaneous'}}
{'idx': 205, 'sentence': 'The band were recently selected to play on the 6th series of the acclaimed RTÉ music show Other Voices .', 'label': "{'RTÉ': 'Organization', 'Other Voices': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "RTÉ"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Other Voices"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'RTÉ': 'Organization', 'Other Voices': 'Miscellaneous'}}
{'idx': 206, 'sentence': 'The start was given in 1990 with the first Cyrillic fonts in the PostScript format , the first Laser printer with in - built Cyrillic fonts in 1991 and the first professional program for complete Cyrillic support under MS Windows - the Flex Type - in 1992 .', 'label': "{'Cyrillic': 'Miscellaneous', 'MS': 'Organization', 'Windows': 'Miscellaneous', 'Flex Type': 'Miscellaneous', 'PostScript': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1990"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Cyrillic fonts"\n)\nOrganization_entity1 = Organization(\n    name = "PostScript"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "1991"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "Laser printer"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "Cyrillic fonts"\n)\nOrganization_entity2 = Organization(\n    name = "MS Windows"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "Flex Type"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "1992"\n)', 'prediction': {'1990': 'Miscellaneous', 'Cyrillic fonts': 'Miscellaneous', 'PostScript': 'Organization', '1991': 'Miscellaneous', 'Laser printer': 'Miscellaneous', 'MS Windows': 'Organization', 'Flex Type': 'Miscellaneous', '1992': 'Miscellaneous'}}
{'idx': 207, 'sentence': 'In only a few years - and 100 000 devices sold in 11 countries around the World - Datecs became the best known brand of electronic cash registers with fiscal memory in Central and Eastern Europe .', 'label': "{'Central and Eastern Europe': 'Location', 'Datecs': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Datecs"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "World"\n)\nLocation_entity1 = Location(\n    name = "Central and Eastern Europe"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Datecs': 'Organization', 'World': 'Miscellaneous', 'Central and Eastern Europe': 'Location'}}
{'idx': 208, 'sentence': 'Snoke received his PhD in physics from the University of Illinois at Urbana-Champaign .', 'label': "{'Urbana-Champaign': 'Location', 'University of Illinois': 'Organization', 'Snoke': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "University of Illinois at Urbana-Champaign"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'University of Illinois at Urbana-Champaign': 'Organization'}}
{'idx': 209, 'sentence': "In 2004 co-authored an article , with Michael Behe , a senior fellow of the Discovery Institute 's Center for Science and Culture , in the scientific journal Protein Science , which received widespread criticism .", 'label': "{'Center for Science and Culture': 'Organization', 'Discovery Institute': 'Organization', 'Protein Science': 'Organization', 'Michael Behe': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Michael Behe"\n)\nOrganization_entity1 = Organization(\n    name = "Discovery Institute"\n)\nOrganization_entity2 = Organization(\n    name = "Center for Science and Culture"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Protein Science"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Michael Behe': 'Person', 'Discovery Institute': 'Organization', 'Center for Science and Culture': 'Organization', 'Protein Science': 'Miscellaneous'}}
{'idx': 210, 'sentence': 'In his ruling , Judge Jones noted that " A review of the article indicates that it does not mention either irreducible complexity or ID .', 'label': "{'Jones': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Judge Jones"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Judge Jones': 'Person'}}
{'idx': 211, 'sentence': 'Davis Gym could hold around 1,100 people .', 'label': "{'Davis Gym': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Davis Gym"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Davis Gym': 'Organization'}}
{'idx': 212, 'sentence': 'In return Magedson filed a lawsuit under RICO .', 'label': "{'RICO': 'Miscellaneous', 'Magedson': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "RICO"\n)\nPerson_entity1 = Person(\n    name = "Magedson"\n)', 'prediction': {'RICO': 'Organization', 'Magedson': 'Person'}}
{'idx': 213, 'sentence': "A descendant of farmer immigrants from Bentheim , Germany , Langejans was born and raised in Holland , Michigan , where his luthier shop keeps him busy building guitars for such notable musicians as Thom Bresh ( Merle Travis 's son ) and Jars of Clay .", 'label': "{'Thom Bresh': 'Person', 'Germany': 'Location', 'Merle Travis': 'Person', 'Langejans': 'Person', 'Holland': 'Location', 'Jars of Clay': 'Organization', 'Bentheim': 'Location', 'Michigan': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Langejans"\n)\nLocation_entity1 = Location(\n    name = "Bentheim"\n)\nLocation_entity2 = Location(\n    name = "Germany"\n)\nLocation_entity3 = Location(\n    name = "Holland"\n)\nLocation_entity4 = Location(\n    name = "Michigan"\n)\nOrganization_entity1 = Organization(\n    name = "Jars of Clay"\n)\nPerson_entity2 = Person(\n    name = "Thom Bresh"\n)\nPerson_entity3 = Person(\n    name = "Merle Travis"\n)', 'prediction': {'Langejans': 'Person', 'Bentheim': 'Location', 'Germany': 'Location', 'Holland': 'Location', 'Michigan': 'Location', 'Jars of Clay': 'Organization', 'Thom Bresh': 'Person', 'Merle Travis': 'Person'}}
{'idx': 214, 'sentence': 'He has made over 1200 guitars as of 2006 , many of them custom-made-to-order , putting Langejans guitars in the hands of numerous stars from all genre of music .', 'label': "{'Langejans': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Langejans guitars"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Langejans guitars': 'Organization'}}
{'idx': 215, 'sentence': 'The standard production time is generally one year .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "one year"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'one year': 'Miscellaneous'}}
{'idx': 216, 'sentence': 'I Dewa Gede Budjana or Dewa Budjana ( born August 30 , 1963 in Waikabubak ) is an Indonesian guitarist , songwriter and composer .', 'label': "{'Waikabubak': 'Location', 'Dewa Budjana': 'Person', 'I Dewa Gede Budjana': 'Person', 'Indonesian': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Dewa Gede Budjana"\n)\nPerson_entity2 = Person(\n    name = "Dewa Budjana"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "August 30 , 1963"\n)\nLocation_entity1 = Location(\n    name = "Waikabubak"\n)\nOrganization_entity1 = Organization(\n    name = "Indonesian"\n)', 'prediction': {'Dewa Gede Budjana': 'Person', 'Dewa Budjana': 'Person', 'August 30 , 1963': 'Miscellaneous', 'Waikabubak': 'Location', 'Indonesian': 'Organization'}}
{'idx': 217, 'sentence': "Budjana 's passion and talent in music , especially guitar , has been very dominant since he was in an elementary school in Klungkung , Bali .", 'label': "{'Klungkung': 'Location', 'Bali': 'Location', 'Budjana': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Budjana"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "music"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "guitar"\n)\nLocation_entity1 = Location(\n    name = "Klungkung"\n)\nLocation_entity2 = Location(\n    name = "Bali"\n)', 'prediction': {'Budjana': 'Person', 'music': 'Miscellaneous', 'guitar': 'Miscellaneous', 'Klungkung': 'Location', 'Bali': 'Location'}}
{'idx': 218, 'sentence': "In 1976 , when he was thirteen , Budjana 's name started to be seen in the music world in Surabaya .", 'label': "{'Budjana': 'Person', 'Surabaya': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Budjana"\n)\nLocation_entity1 = Location(\n    name = "Surabaya"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Budjana': 'Person', 'Surabaya': 'Location'}}
{'idx': 219, 'sentence': 'One year after that , Budjana decided to fly to Jakarta in order to expand his music career .', 'label': "{'Budjana': 'Person', 'Jakarta': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Budjana"\n)\nLocation_entity1 = Location(\n    name = "Jakarta"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Budjana': 'Person', 'Jakarta': 'Location'}}
{'idx': 220, 'sentence': 'His current band , Gigi , was formed in 1994 with Baron ( guitar ) , Thomas ( bass ) , Armand ( vocal ) and Ronald ( drum ) .', 'label': "{'Ronald': 'Person', 'Gigi': 'Organization', 'Armand': 'Person', 'Baron': 'Person', 'Thomas': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Gigi"\n)\nPerson_entity1 = Person(\n    name = "Baron"\n)\nPerson_entity2 = Person(\n    name = "Thomas"\n)\nPerson_entity3 = Person(\n    name = "Armand"\n)\nPerson_entity4 = Person(\n    name = "Ronald"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Gigi': 'Organization', 'Baron': 'Person', 'Thomas': 'Person', 'Armand': 'Person', 'Ronald': 'Person'}}
{'idx': 221, 'sentence': "Spain allied with France during the Seven Years ' War against Great Britain .", 'label': '{\'Great Britain\': \'Location\', \'France\': \'Location\', \'Spain\': \'Location\', "Seven Years \' War": \'Miscellaneous\'}', 'response': 'Organization_entity1 = Organization(\n    name = "Spain"\n)\nOrganization_entity2 = Organization(\n    name = "France"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Seven Years \' War"\n)\nOrganization_entity3 = Organization(\n    name = "Great Britain"\n)', 'prediction': {'Spain': 'Organization', 'France': 'Organization', "Seven Years ' War": 'Miscellaneous', 'Great Britain': 'Organization'}}
{'idx': 222, 'sentence': 'The British force never materialized .', 'label': "{'British': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "British force"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'British force': 'Organization'}}
{'idx': 223, 'sentence': 'She fled again to Abra , where she was captured .', 'label': "{'Abra': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Abra"\n)\nPerson_entity1 = Person(\n    name = "she"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Abra': 'Location', 'she': 'Person'}}
{'idx': 224, 'sentence': 'Digilogue is a music album of recordings which became the twentieth commercial release by the British avant-garde music group : zoviet*france : .', 'label': "{'British': 'Miscellaneous', 'zoviet*france': 'Organization', 'Digilogue': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "zoviet*france"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'zoviet*france': 'Organization'}}
{'idx': 225, 'sentence': 'digilogue was recorded using a mixture of failing analogue equipment and high-end digital equipment , and monitored in our studio exclusively on damaged hi-fi speakers .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "digilogue"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "analogue"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "digital"\n)\nOrganization_entity1 = Organization(\n    name = "studio"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "hi-fi speakers"\n)', 'prediction': {'digilogue': 'Miscellaneous', 'analogue': 'Miscellaneous', 'digital': 'Miscellaneous', 'studio': 'Organization', 'hi-fi speakers': 'Miscellaneous'}}
{'idx': 226, 'sentence': '1996 edition', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1996 edition"\n)', 'prediction': {'1996 edition': 'Miscellaneous'}}
{'idx': 227, 'sentence': "The island of Divar ( Divar-derived from the word Dipavati or ' small Island ' in Konkani ) lies in the state of Goa , India .", 'label': "{'Goa': 'Location', 'Konkani': 'Miscellaneous', 'Divar': 'Location', 'India': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Divar"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Dipavati"\n)\nLocation_entity2 = Location(\n    name = "Goa"\n)\nLocation_entity3 = Location(\n    name = "India"\n)', 'prediction': {'Divar': 'Location', 'Dipavati': 'Miscellaneous', 'Goa': 'Location', 'India': 'Location'}}
{'idx': 228, 'sentence': 'Though in a manner equally typical of modern Goa , of late the paddy fields lie fallow and overrun with weeds .', 'label': "{'Goa': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Goa"\n)', 'prediction': {'Goa': 'Location'}}
{'idx': 229, 'sentence': 'It was destroyed by the sultan of the Deccan in the middle of the 14th century and reconstructed at the same locality by Madhav Mantri of Vijaynagar at the close of the same century .', 'label': "{'Vijaynagar': 'Location', 'Madhav Mantri': 'Person', 'Deccan': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Deccan"\n)\nPerson_entity1 = Person(\n    name = "Madhav Mantri"\n)\nOrganization_entity2 = Organization(\n    name = "Vijaynagar"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Deccan': 'Organization', 'Madhav Mantri': 'Person', 'Vijaynagar': 'Organization'}}
{'idx': 230, 'sentence': 'And on the foundations of the same temple a prayer and catechism house was constructed in 1563 , which was later transformed into the chapel of Our Lady of Cande laria . "', 'label': "{'Our Lady of Cande laria': 'Person'}", 'response': 'Location_entity1 = Location(\n    name = "temple"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "prayer"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "catechism house"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "1563"\n)\nOrganization_entity1 = Organization(\n    name = "chapel"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "Our Lady of Cande laria"\n)', 'prediction': {'temple': 'Location', 'prayer': 'Miscellaneous', 'catechism house': 'Miscellaneous', '1563': 'Miscellaneous', 'chapel': 'Organization', 'Our Lady of Cande laria': 'Miscellaneous'}}
{'idx': 231, 'sentence': 'Bonderam Festival : The festival is a memoir to the dispute and the fury of the Villagers over the Portuguese system of resolving the disputes .', 'label': "{'Bonderam Festival': 'Miscellaneous', 'Portuguese': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Bonderam Festival"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Portuguese"\n)', 'prediction': {'Bonderam Festival': 'Miscellaneous', 'Portuguese': 'Miscellaneous'}}
{'idx': 232, 'sentence': 'Each section of the village has a float at the parade .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "village"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "float"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "parade"\n)', 'prediction': {'village': 'Location', 'float': 'Miscellaneous', 'parade': 'Miscellaneous'}}
{'idx': 233, 'sentence': 'Unfortunately though , every time the bell was struck , it shattered the windows of the church and the houses in the vicinity , so a deal was struck and the bell was exchanged with that of the Se Cathedral .', 'label': "{'Se Cathedral': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "church"\n)\nLocation_entity2 = Location(\n    name = "houses"\n)\nLocation_entity3 = Location(\n    name = "vicinity"\n)\nOrganization_entity1 = Organization(\n    name = "Se Cathedral"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'church': 'Location', 'houses': 'Location', 'vicinity': 'Location', 'Se Cathedral': 'Organization'}}
{'idx': 234, 'sentence': 'Their son , Philipp Veit , would later become part of a circle of German Christian painters called " the Nazarenes , " who influenced the later English painters in the Pre-Raphaelite Brotherhood .', 'label': "{'German Christian': 'Miscellaneous', 'the Nazarenes': 'Organization', 'Pre-Raphaelite Brotherhood': 'Organization', 'English': 'Miscellaneous', 'Philipp Veit': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Philipp Veit"\n)\nOrganization_entity1 = Organization(\n    name = "the Nazarenes"\n)\nOrganization_entity2 = Organization(\n    name = "the Pre-Raphaelite Brotherhood"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Philipp Veit': 'Person', 'the Nazarenes': 'Organization', 'the Pre-Raphaelite Brotherhood': 'Organization'}}
{'idx': 235, 'sentence': 'They lived in Paris from 1802 until 1804 , and after her divorce they married as Protestants .', 'label': "{'Protestants': 'Miscellaneous', 'Paris': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Paris"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1802"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1804"\n)\nPerson_entity1 = Person(\n    name = "Protestants"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Paris': 'Location', '1802': 'Miscellaneous', '1804': 'Miscellaneous', 'Protestants': 'Person'}}
{'idx': 236, 'sentence': 'There , she lived with her son Philipp ( also a convert to a medieval style of Catholicism ) until her death in 1839 .', 'label': "{'Philipp': 'Person', 'Catholicism': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Philipp"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "medieval style of Catholicism"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1839"\n)', 'prediction': {'Philipp': 'Person', 'medieval style of Catholicism': 'Miscellaneous', '1839': 'Miscellaneous'}}
{'idx': 237, 'sentence': 'Her nephew was Felix Mendelssohn , the composer , who with his sister , Fanny , were considered nearly the equals of the Mozarts as child prodigies .', 'label': "{'Mozarts': 'Person', 'Felix Mendelssohn': 'Person', 'Fanny': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Felix Mendelssohn"\n)\nPerson_entity2 = Person(\n    name = "Fanny"\n)', 'prediction': {'Felix Mendelssohn': 'Person', 'Fanny': 'Person'}}
{'idx': 238, 'sentence': 'For some Jews , she may be a less than admirable figure as well , having left her Jewish husband , violated her divorce settlement , and converted first to Protestantism ( which was favorable towards Judaism ) , and finally to Catholicism ( which was not ) .', 'label': "{'Judaism': 'Miscellaneous', 'Jews': 'Miscellaneous', 'Protestantism': 'Miscellaneous', 'Jewish': 'Miscellaneous', 'Catholicism': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Jews"\n)\nPerson_entity2 = Person(\n    name = "husband"\n)\nPerson_entity3 = Person(\n    name = "Protestantism"\n)\nPerson_entity4 = Person(\n    name = "Catholicism"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Jews': 'Person', 'husband': 'Person', 'Protestantism': 'Person', 'Catholicism': 'Person'}}
{'idx': 239, 'sentence': '[ 1 ] In older literature and on her gravestone one finds the date 1763 , but this is the birthyear of her older sister Sara ( May 23rd 1763-April 15 1764 ) whose untimely death was one of the reasons Moses Mendelssohn wrote the Phaedon .', 'label': "{'Moses Mendelssohn': 'Person', 'Sara': 'Person', 'Phaedon': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Sara"\n)\nPerson_entity2 = Person(\n    name = "Moses Mendelssohn"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Phaedon"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "May 23rd 1763-April 15 1764"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Sara': 'Person', 'Moses Mendelssohn': 'Person', 'Phaedon': 'Miscellaneous', 'May 23rd 1763-April 15 1764': 'Miscellaneous'}}
{'idx': 240, 'sentence': 'Stylistically , the tracks range from industrial metal to goth and electronica .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "industrial metal"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "goth"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "electronica"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'industrial metal': 'Miscellaneous', 'goth': 'Miscellaneous', 'electronica': 'Miscellaneous'}}
{'idx': 241, 'sentence': 'Six foot , three inches tall and 215 pounds in his prime , Bobick was part of a boxing family and grew up with the sport in the 1960s .', 'label': "{'Bobick': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bobick"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1960s"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bobick': 'Person', '1960s': 'Miscellaneous'}}
{'idx': 242, 'sentence': 'Bobick trained with and was managed by heavyweight legend Joe Frazier .', 'label': "{'Joe Frazier': 'Person', 'Bobick': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bobick"\n)\nPerson_entity2 = Person(\n    name = "Joe Frazier"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bobick': 'Person', 'Joe Frazier': 'Person'}}
{'idx': 243, 'sentence': 'Knockout wins that year included Ted Gullick and future champion Mike Weaver .', 'label': "{'Mike Weaver': 'Person', 'Ted Gullick': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Ted Gullick"\n)\nPerson_entity2 = Person(\n    name = "Mike Weaver"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ted Gullick': 'Person', 'Mike Weaver': 'Person'}}
{'idx': 244, 'sentence': 'He was now being dodged by some , but a win over Randy Neumann proved he could not be ignored .', 'label': "{'Randy Neumann': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Randy Neumann"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Randy Neumann': 'Person'}}
{'idx': 245, 'sentence': 'Norton connected first and very hard .', 'label': "{'Norton': 'Person'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Norton"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Norton': 'Miscellaneous'}}
{'idx': 246, 'sentence': "He finished the year 1977 40-1 with 36 KO's .", 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1977"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "40-1"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "36 KO\'s"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'1977': 'Miscellaneous', '40-1': 'Miscellaneous', "36 KO's": 'Miscellaneous'}}
{'idx': 247, 'sentence': 'All four of his pro losses were by KO .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "four"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "pro"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "KO"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'four': 'Miscellaneous', 'pro': 'Miscellaneous', 'KO': 'Miscellaneous'}}
{'idx': 248, 'sentence': 'No. 18 later moved to northern Australia , No. 120 to Western Australia and later transferring overseas ..', 'label': "{'Western Australia': 'Location', 'No. 120': 'Organization', 'Australia': 'Location', 'No. 18': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "northern Australia"\n)\nLocation_entity2 = Location(\n    name = "Western Australia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'northern Australia': 'Location', 'Western Australia': 'Location'}}
{'idx': 249, 'sentence': 'Henry Eberhard Faber is the namesake for both the college in Animal House and the character Faber in Fahrenheit 451 .', 'label': "{'Henry Eberhard Faber': 'Person', 'Fahrenheit 451': 'Miscellaneous', 'Animal House': 'Miscellaneous', 'Faber': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Henry Eberhard Faber"\n)\nOrganization_entity1 = Organization(\n    name = "Animal House"\n)\nPerson_entity2 = Person(\n    name = "Faber"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Fahrenheit 451"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Henry Eberhard Faber': 'Person', 'Animal House': 'Organization', 'Faber': 'Person', 'Fahrenheit 451': 'Miscellaneous'}}
{'idx': 250, 'sentence': 'In 1885 Hitzig became a professor at the University of Halle , where he remained until his retirement in 1903 .', 'label': "{'University of Halle': 'Organization', 'Hitzig': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Hitzig"\n)\nOrganization_entity1 = Organization(\n    name = "University of Halle"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1885"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1903"\n)', 'prediction': {'Hitzig': 'Person', 'University of Halle': 'Organization', '1885': 'Miscellaneous', '1903': 'Miscellaneous'}}
{'idx': 251, 'sentence': 'In 1870 Hitzig published his findings in an essay called " On the Electrical Excitability of the Cerebrum " . This experimentation was considered the first time anyone had done any " localized study " regarding the brain and electrical current .', 'label': "{'On the Electrical Excitability of the Cerebrum': 'Miscellaneous', 'Hitzig': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Hitzig"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Hitzig': 'Person'}}
{'idx': 252, 'sentence': 'In the late 1930s in Budapest the restaurant owner László hires the pianist András to play in his restaurant .', 'label': "{'László': 'Person', 'András': 'Person', 'Budapest': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "László"\n)\nPerson_entity2 = Person(\n    name = "András"\n)\nOrganization_entity1 = Organization(\n    name = "restaurant"\n)\nLocation_entity1 = Location(\n    name = "Budapest"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'László': 'Person', 'András': 'Person', 'restaurant': 'Organization', 'Budapest': 'Location'}}
{'idx': 253, 'sentence': 'After a few years Nazi Germany captures Budapest and Hans returns .', 'label': "{'Hans': 'Person', 'Nazi Germany': 'Location', 'Budapest': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Budapest"\n)\nPerson_entity1 = Person(\n    name = "Hans"\n)\nOrganization_entity1 = Organization(\n    name = "Nazi Germany"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Budapest': 'Location', 'Hans': 'Person', 'Nazi Germany': 'Organization'}}
{'idx': 254, 'sentence': 'The street was built in the 1880s and now hosts Brixton Market , selling a mix of African , Caribbean , English , Portuguese and Chinese products .', 'label': "{'Chinese': 'Miscellaneous', 'Caribbean': 'Miscellaneous', 'Portuguese': 'Miscellaneous', 'Brixton Market': 'Organization', 'African': 'Miscellaneous', 'English': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Brixton Market"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1880s"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "African"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Caribbean"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "English"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "Portuguese"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "Chinese"\n)', 'prediction': {'Brixton Market': 'Location', '1880s': 'Miscellaneous', 'African': 'Miscellaneous', 'Caribbean': 'Miscellaneous', 'English': 'Miscellaneous', 'Portuguese': 'Miscellaneous', 'Chinese': 'Miscellaneous'}}
{'idx': 255, 'sentence': 'Production at Elm Coulee has more than doubled the oil output of the state of Montana .', 'label': "{'Montana': 'Location', 'Elm Coulee': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Elm Coulee"\n)\nLocation_entity2 = Location(\n    name = "Montana"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Elm Coulee': 'Location', 'Montana': 'Location'}}
{'idx': 256, 'sentence': 'In 1942 , along with Dr. Haidar Abdel-Shafi , and the late Mukhlis Amer , Emil Habibi and Mufid Nashashibi , Touma was a founder of the Palestinian National Liberation League .', 'label': "{'Emil Habibi': 'Person', 'Mukhlis Amer': 'Person', 'Touma': 'Person', 'Palestinian National Liberation League': 'Organization', 'Haidar Abdel-Shafi': 'Person', 'Mufid Nashashibi': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Dr. Haidar Abdel-Shafi"\n)\nPerson_entity2 = Person(\n    name = "Mukhlis Amer"\n)\nPerson_entity3 = Person(\n    name = "Emil Habibi"\n)\nPerson_entity4 = Person(\n    name = "Mufid Nashashibi"\n)\nOrganization_entity1 = Organization(\n    name = "Palestinian National Liberation League"\n)', 'prediction': {'Dr. Haidar Abdel-Shafi': 'Person', 'Mukhlis Amer': 'Person', 'Emil Habibi': 'Person', 'Mufid Nashashibi': 'Person', 'Palestinian National Liberation League': 'Organization'}}
{'idx': 257, 'sentence': 'Eugenio Calabi ( born 1923 ) is an Italian-American mathematician and professor emeritus at the University of Pennsylvania , specializing in differential geometry , partial differential equations and their applications .', 'label': "{'University of Pennsylvania': 'Organization', 'Eugenio Calabi': 'Person', 'Italian-American': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Eugenio Calabi"\n)\nOrganization_entity1 = Organization(\n    name = "University of Pennsylvania"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1923"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Italian-American"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "mathematician"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "professor emeritus"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "differential geometry"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "partial differential equations"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "applications"\n)', 'prediction': {'Eugenio Calabi': 'Person', 'University of Pennsylvania': 'Organization', '1923': 'Miscellaneous', 'Italian-American': 'Miscellaneous', 'mathematician': 'Miscellaneous', 'professor emeritus': 'Miscellaneous', 'differential geometry': 'Miscellaneous', 'partial differential equations': 'Miscellaneous', 'applications': 'Miscellaneous'}}
{'idx': 258, 'sentence': 'Scott Chair of Mathematics at the University of Pennsylvania in 1967 .', 'label': "{'University of Pennsylvania': 'Organization', 'Scott': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "University of Pennsylvania"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1967"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'University of Pennsylvania': 'Organization', '1967': 'Miscellaneous'}}
{'idx': 259, 'sentence': 'The trains designated as Express Nakhonphink are Train No. 1 for Bangkok - Chiang Mai and Train No. 2 for Chiang Mai - Bangkok .', 'label': "{'Bangkok': 'Location', 'Express Nakhonphink': 'Miscellaneous', 'Chiang Mai': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Express Nakhonphink"\n)\nOrganization_entity2 = Organization(\n    name = "Bangkok"\n)\nLocation_entity1 = Location(\n    name = "Chiang Mai"\n)\nLocation_entity2 = Location(\n    name = "Bangkok"\n)', 'prediction': {'Express Nakhonphink': 'Organization', 'Bangkok': 'Location', 'Chiang Mai': 'Location'}}
{'idx': 260, 'sentence': 'EZ2DJ is a series of music video games created by the South Korean company Amuseworld .', 'label': "{'Amuseworld': 'Organization', 'EZ2DJ': 'Miscellaneous', 'South Korean': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Amuseworld"\n)\nLocation_entity1 = Location(\n    name = "South Korean"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Amuseworld': 'Organization', 'South Korean': 'Location'}}
{'idx': 261, 'sentence': 'Ez2DJ 2nd TraX - It Rules Once Again - ( October , 2000 )', 'label': "{'Ez2DJ 2nd TraX - It Rules Once Again': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Ez2DJ"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2nd TraX"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "October"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "2000"\n)', 'prediction': {'Ez2DJ': 'Miscellaneous', '2nd TraX': 'Miscellaneous', 'October': 'Miscellaneous', '2000': 'Miscellaneous'}}
{'idx': 262, 'sentence': 'Ez2DJ 7th TraX - Resistance - Version 1.50 ( December , 2007 )', 'label': "{'Ez2DJ 7th TraX - Resistance - Version 1.50': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Ez2DJ 7th TraX - Resistance - Version 1.50"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "December"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "2007"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ez2DJ 7th TraX - Resistance - Version 1.50': 'Miscellaneous', 'December': 'Miscellaneous', '2007': 'Miscellaneous'}}
{'idx': 263, 'sentence': 'However , unlike the Beatmania series ( including III and IIDX ) , depending on the gamemode , effector button are treated as a gameplay button , especially in the gamemode " Radio Mix " , where each player need to control 2 effector buttons .', 'label': "{'III': 'Miscellaneous', 'Beatmania': 'Miscellaneous', 'IIDX': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Beatmania"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Radio Mix"\n)', 'prediction': {'Beatmania': 'Miscellaneous', 'Radio Mix': 'Miscellaneous'}}
{'idx': 264, 'sentence': 'Written by Erin ( 10/14/07 ) , Edited by AHRISA ( 07/01/08 )', 'label': "{'AHRISA': 'Person', 'Erin': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Erin"\n)\nPerson_entity2 = Person(\n    name = "AHRISA"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "10/14/07"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "07/01/08"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Erin': 'Person', 'AHRISA': 'Person', '10/14/07': 'Miscellaneous', '07/01/08': 'Miscellaneous'}}
{'idx': 265, 'sentence': '3 .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "3"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'3': 'Miscellaneous'}}
{'idx': 266, 'sentence': '5 .', 'label': '{}', 'response': 'None', 'prediction': {}}
{'idx': 267, 'sentence': '( 1 ) 1st Tracks / 1st SE', 'label': "{'1st Tracks': 'Miscellaneous', '1st SE': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1st"\n)\nLocation_entity1 = Location(\n    name = "Tracks"\n)\nLocation_entity2 = Location(\n    name = "SE"\n)', 'prediction': {'1st': 'Miscellaneous', 'Tracks': 'Location', 'SE': 'Location'}}
{'idx': 268, 'sentence': "A Korean Judge 's ruling has ordered Amuse World to pay Konami damages and stop production of the product completely .", 'label': "{'Amuse World': 'Organization', 'Korean': 'Miscellaneous', 'Konami': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Amuse World"\n)\nOrganization_entity2 = Organization(\n    name = "Konami"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Amuse World': 'Organization', 'Konami': 'Organization'}}
{'idx': 269, 'sentence': 'This area continues to be the core of the system , and is noted for the number of residents in the Richmond Highway area who use the service at all times of the day .', 'label': "{'Richmond Highway': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Richmond Highway"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Richmond Highway': 'Location'}}
{'idx': 270, 'sentence': 'Base fare is usually $1 , but can be as much as $3 for express routes .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Base fare"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "$1"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "$3"\n)\nOrganization_entity1 = Organization(\n    name = "express routes"\n)', 'prediction': {'Base fare': 'Miscellaneous', '$1': 'Miscellaneous', '$3': 'Miscellaneous', 'express routes': 'Organization'}}
{'idx': 271, 'sentence': 'Fairmont State University is a public university located in Fairmont , West Virginia ( population 19,097 ) .', 'label': "{'West Virginia': 'Location', 'Fairmont': 'Location', 'Fairmont State University': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Fairmont State University"\n)\nLocation_entity1 = Location(\n    name = "Fairmont"\n)\nLocation_entity2 = Location(\n    name = "West Virginia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Fairmont State University': 'Organization', 'Fairmont': 'Location', 'West Virginia': 'Location'}}
{'idx': 272, 'sentence': 'On April 7 , 2004 , Governor Bob Wise signed legislation allowing Fairmont State College to change its name to Fairmont State University .', 'label': "{'Fairmont State College': 'Organization', 'Fairmont State University': 'Organization', 'Bob Wise': 'Person'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "April 7"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2004"\n)\nPerson_entity1 = Person(\n    name = "Bob Wise"\n)\nOrganization_entity1 = Organization(\n    name = "Fairmont State College"\n)\nOrganization_entity2 = Organization(\n    name = "Fairmont State University"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'April 7': 'Miscellaneous', '2004': 'Miscellaneous', 'Bob Wise': 'Person', 'Fairmont State College': 'Organization', 'Fairmont State University': 'Organization'}}
{'idx': 273, 'sentence': "Fairmont State 's athletic teams , known as the Falcons , compete in the West Virginia Intercollegiate Athletic Conference in NCAA Division II .", 'label': "{'Falcons': 'Organization', 'NCAA Division II': 'Organization', 'West Virginia Intercollegiate Athletic Conference': 'Organization', 'Fairmont State': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Fairmont State"\n)\nOrganization_entity2 = Organization(\n    name = "West Virginia Intercollegiate Athletic Conference"\n)\nOrganization_entity3 = Organization(\n    name = "NCAA Division II"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Falcons"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Fairmont State': 'Organization', 'West Virginia Intercollegiate Athletic Conference': 'Organization', 'NCAA Division II': 'Organization', 'Falcons': 'Miscellaneous'}}
{'idx': 0, 'sentence': 'UK Edition came with the OSC-DIS video , and most of the tracks were re-engineered .', 'label': "{'OSC-DIS': 'Miscellaneous', 'UK': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "UK Edition"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "OSC-DIS"\n)', 'prediction': {'UK Edition': 'Organization', 'OSC-DIS': 'Miscellaneous'}}
{'idx': 1, 'sentence': "During this time Couch 's Division was detached from the Army and was occupied with guarding the fords on the Potomac .", 'label': '{\'Potomac\': \'Location\', "Couch \'s Division": \'Organization\', \'Army\': \'Organization\'}', 'response': 'Organization_entity1 = Organization(\n    name = "Couch \'s Division"\n)\nLocation_entity1 = Location(\n    name = "Army"\n)\nLocation_entity2 = Location(\n    name = "Potomac"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {"Couch 's Division": 'Organization', 'Army': 'Location', 'Potomac': 'Location'}}
{'idx': 2, 'sentence': 'At the Battle of Gettysburg in July , it helped defend the left flank of the Union army .', 'label': "{'Union': 'Organization', 'Battle of Gettysburg': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Gettysburg"\n)\nOrganization_entity1 = Organization(\n    name = "Union army"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Gettysburg': 'Location', 'Union army': 'Organization'}}
{'idx': 3, 'sentence': "The 139th supported Sheridan in the Appomattox Campaign and fought in the Battle of Sayler 's Creek .", 'label': '{\'139th\': \'Organization\', \'Appomattox Campaign\': \'Miscellaneous\', "Battle of Sayler \'s Creek": \'Miscellaneous\', \'Sheridan\': \'Person\'}', 'response': 'Organization_entity1 = Organization(\n    name = "139th"\n)\nPerson_entity1 = Person(\n    name = "Sheridan"\n)\nLocation_entity1 = Location(\n    name = "Appomattox Campaign"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Battle of Sayler\'s Creek"\n)', 'prediction': {'139th': 'Organization', 'Sheridan': 'Person', 'Appomattox Campaign': 'Location', "Battle of Sayler's Creek": 'Miscellaneous'}}
{'idx': 4, 'sentence': 'Two cars were demolished and the two following cars were telescoped .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "cars"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "following cars"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'cars': 'Miscellaneous', 'following cars': 'Miscellaneous'}}
{'idx': 5, 'sentence': 'The second car of the West Jersey train was also carried into the ditch , the third and fourth cars being telescoped .', 'label': "{'West Jersey': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "West Jersey train"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'West Jersey train': 'Organization'}}
{'idx': 6, 'sentence': 'As onlookers watched through the night , the mangled and burned bodies of the dead were carried from the wreckage which trapped them and laid side by side on the gravel bank near the track , with no other covering than the few newspapers gathered from the passengers .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "track"\n)\n\nMiscellaneous_entity1 = Miscellaneous(\n    name = "newspapers"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'track': 'Location', 'newspapers': 'Miscellaneous'}}
{'idx': 7, 'sentence': 'James W. Hoyt , Secretary of the New Jersey Department of Public Safety , immediately upon learning of the extent of the accident , telegraphed for the Philadelphia Medical Emergency Corps , fifteen of whom responded , and hurried to Atlantic City on a special train which left Philadelphia at 10:45 pm .', 'label': "{'Philadelphia': 'Location', 'Atlantic City': 'Location', 'James W. Hoyt': 'Person', 'Philadelphia Medical Emergency Corps': 'Organization', 'New Jersey Department of Public Safety': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "James W. Hoyt"\n)\nOrganization_entity1 = Organization(\n    name = "New Jersey Department of Public Safety"\n)\nOrganization_entity2 = Organization(\n    name = "Philadelphia Medical Emergency Corps"\n)\nLocation_entity1 = Location(\n    name = "Atlantic City"\n)\nLocation_entity2 = Location(\n    name = "Philadelphia"\n)', 'prediction': {'James W. Hoyt': 'Person', 'New Jersey Department of Public Safety': 'Organization', 'Philadelphia Medical Emergency Corps': 'Organization', 'Atlantic City': 'Location', 'Philadelphia': 'Location'}}
{'idx': 8, 'sentence': 'He went directly into the block tower and questioned operator George F. Hauser. Houser told him that he thought the excursion train had time to cross the tracks of the Reading before the express got there and he set the " clear " signal for the West Jersey train .', 'label': "{'West Jersey': 'Location', 'George F. Hauser. Houser': 'Person', 'Reading': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "George F. Hauser"\n)\nOrganization_entity1 = Organization(\n    name = "Reading"\n)\nOrganization_entity2 = Organization(\n    name = "West Jersey"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'George F. Hauser': 'Person', 'Reading': 'Organization', 'West Jersey': 'Organization'}}
{'idx': 9, 'sentence': 'Before Hauser could make a further explanation to the coroner he received an order from the railroad officials to say nothing .', 'label': "{'Hauser': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Hauser"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "coroner"\n)\nOrganization_entity1 = Organization(\n    name = "railroad officials"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Hauser': 'Person', 'coroner': 'Miscellaneous', 'railroad officials': 'Organization'}}
{'idx': 10, 'sentence': 'His reputation was that of an experienced engineer and a man of exceptionally high moral character , and not of a reckless or careless disposition .', 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "engineer"\n)\nPerson_entity2 = Person(\n    name = "man"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "reputation"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "moral character"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "disposition"\n)', 'prediction': {'engineer': 'Person', 'man': 'Person', 'reputation': 'Miscellaneous', 'moral character': 'Miscellaneous', 'disposition': 'Miscellaneous'}}
{'idx': 11, 'sentence': 'Three others found that " the cause of the collision was the failure of Edward Farr , engineer of Train No. 23 , to give heed in time to the semaphore signals and crossing under the rules. .. the tower man , George F. Hauser , may have used poor judgment in his estimate of the distance away of the Atlantic City Railroad train when he gave the white boards to the West Jersey and Seashore Excursion Train No . 700 . "', 'label': "{'Edward Farr': 'Person', 'George F. Hauser': 'Person', 'Seashore': 'Location', 'West Jersey': 'Location', 'Atlantic City Railroad': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Edward Farr"\n)\nOrganization_entity1 = Organization(\n    name = "Atlantic City Railroad"\n)\nOrganization_entity2 = Organization(\n    name = "West Jersey and Seashore Excursion Train"\n)', 'prediction': {'Edward Farr': 'Person', 'Atlantic City Railroad': 'Organization', 'West Jersey and Seashore Excursion Train': 'Organization'}}
{'idx': 12, 'sentence': 'They participated in the GMAC Bowl , losing to Tulsa 63-7 .', 'label': "{'GMAC Bowl': 'Miscellaneous', 'Tulsa': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "GMAC Bowl"\n)\nLocation_entity1 = Location(\n    name = "Tulsa"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'GMAC Bowl': 'Organization', 'Tulsa': 'Location'}}
{'idx': 13, 'sentence': 'Overall , 53 lettermen are returning from the 2006 team ( 25 on offense , 28 on defense and 0 on special teams ) .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "2006"\n)\nOrganization_entity1 = Organization(\n    name = "team"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "25"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "28"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "0"\n)', 'prediction': {'2006': 'Miscellaneous', 'team': 'Organization', '25': 'Miscellaneous', '28': 'Miscellaneous', '0': 'Miscellaneous'}}
{'idx': 14, 'sentence': '30 Seconds to Mars ( or Thirty Seconds to Mars ) is an alternative rock band from Los Angeles , California , featuring Jared Leto , Shannon Leto , Tomo Milicevic .', 'label': "{'Shannon Leto': 'Person', 'Tomo Milicevic': 'Person', 'Los Angeles': 'Location', 'Jared Leto': 'Person', '30 Seconds to Mars': 'Organization', 'Thirty Seconds to Mars': 'Organization', 'California': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "30 Seconds to Mars"\n)\nLocation_entity1 = Location(\n    name = "Los Angeles"\n)\nLocation_entity2 = Location(\n    name = "California"\n)\nPerson_entity1 = Person(\n    name = "Jared Leto"\n)\nPerson_entity2 = Person(\n    name = "Shannon Leto"\n)\nPerson_entity3 = Person(\n    name = "Tomo Milicevic"\n)', 'prediction': {'30 Seconds to Mars': 'Organization', 'Los Angeles': 'Location', 'California': 'Location', 'Jared Leto': 'Person', 'Shannon Leto': 'Person', 'Tomo Milicevic': 'Person'}}
{'idx': 15, 'sentence': 'Their sophomore album , A Beautiful Lie , was released on August 30 , 2005 .', 'label': "{'A Beautiful Lie': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Their sophomore album"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "A Beautiful Lie"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "August 30"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "2005"\n)', 'prediction': {'Their sophomore album': 'Organization', 'A Beautiful Lie': 'Miscellaneous', 'August 30': 'Miscellaneous', '2005': 'Miscellaneous'}}
{'idx': 16, 'sentence': 'The second nomination was for Best Rock Video ; however , they lost to AFI \'s " Miss Murder " .', 'label': "{'AFI': 'Organization', 'Miss Murder': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "AFI"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Best Rock Video"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Miss Murder"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'AFI': 'Organization', 'Best Rock Video': 'Miscellaneous', 'Miss Murder': 'Miscellaneous'}}
{'idx': 17, 'sentence': '" Jared and Shannon put together this thing called Environmentor which is illustrating ways --- alternatives --- to kind of clean up some of the mess we leave behind .', 'label': "{'Jared': 'Person', 'Shannon': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Jared"\n)\nPerson_entity2 = Person(\n    name = "Shannon"\n)\nOrganization_entity1 = Organization(\n    name = "Environmentor"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Jared': 'Person', 'Shannon': 'Person', 'Environmentor': 'Organization'}}
{'idx': 18, 'sentence': 'They are also scheduled to play Roskilde , Rock am Ring , Pinkpop , Give It A Name Festival and Download .', 'label': "{'Rock am Ring': 'Miscellaneous', 'Pinkpop': 'Miscellaneous', 'Roskilde': 'Miscellaneous', 'Download': 'Miscellaneous', 'Give It A Name Festival': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Roskilde"\n)\nOrganization_entity1 = Organization(\n    name = "Rock am Ring"\n)\nOrganization_entity2 = Organization(\n    name = "Pinkpop"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Give It A Name Festival"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Download"\n)', 'prediction': {'Roskilde': 'Location', 'Rock am Ring': 'Organization', 'Pinkpop': 'Organization', 'Give It A Name Festival': 'Miscellaneous', 'Download': 'Miscellaneous'}}
{'idx': 19, 'sentence': 'On August 8th , 2007 , Kerrang ! announced that 30 Seconds to Mars has been nominated for two categories of the Kerrang !', 'label': "{'Kerrang !': 'Organization', '30 Seconds to Mars': 'Organization'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "August 8th"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2007"\n)\nOrganization_entity1 = Organization(\n    name = "Kerrang"\n)\nOrganization_entity2 = Organization(\n    name = "30 Seconds to Mars"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "two categories"\n)\nOrganization_entity3 = Organization(\n    name = "Kerrang"\n)', 'prediction': {'August 8th': 'Miscellaneous', '2007': 'Miscellaneous', 'Kerrang': 'Organization', '30 Seconds to Mars': 'Organization', 'two categories': 'Miscellaneous'}}
{'idx': 20, 'sentence': 'They beat out Korn and had amassed over 7 million votes .', 'label': "{'Korn': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Korn"\n)', 'prediction': {'Korn': 'Organization'}}
{'idx': 21, 'sentence': 'It is also the name of one of their songs in the album 30 Seconds to Mars .', 'label': "{'30 Seconds to Mars': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "30 Seconds to Mars"\n)', 'prediction': {'30 Seconds to Mars': 'Organization'}}
{'idx': 22, 'sentence': 'Another track featured on certain imported 30 Seconds to Mars titles is " Anarchy in Tokyo " , a song that was recorded during the process of their self-titled debut .', 'label': "{'30 Seconds to Mars': 'Organization', 'Anarchy in Tokyo': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "30 Seconds to Mars"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Anarchy in Tokyo"\n)', 'prediction': {'30 Seconds to Mars': 'Organization', 'Anarchy in Tokyo': 'Miscellaneous'}}
{'idx': 23, 'sentence': 'Also made available are the demo versions of " Buddha for Mary " and " 93 Million Miles " ; the latter originally had lyrics referring to the band Deadsy , whose members Dr. Nner and P. Exeter Blue I provided extra instrumentation on several tracks , but the lyrics were changed after the two bands were involved in a small feud .', 'label': "{'Buddha for Mary': 'Miscellaneous', '93 Million Miles': 'Miscellaneous', 'Dr. Nner': 'Person', 'P. Exeter Blue I': 'Person', 'Deadsy': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Deadsy"\n)\nPerson_entity1 = Person(\n    name = "Dr. Nner"\n)\nPerson_entity2 = Person(\n    name = "P. Exeter Blue I"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Deadsy': 'Organization', 'Dr. Nner': 'Person', 'P. Exeter Blue I': 'Person'}}
{'idx': 24, 'sentence': 'The 38th NAACP Image Awards honored the best in film , television and music for 2006 .', 'label': "{'38th NAACP Image Awards': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "38th"\n)\nOrganization_entity1 = Organization(\n    name = "NAACP Image Awards"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2006"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'38th': 'Miscellaneous', 'NAACP Image Awards': 'Organization', '2006': 'Miscellaneous'}}
{'idx': 25, 'sentence': 'The following recipients received distinguished awards by the NAACP for their contributions to arts , civil rights , news , and humanitarian efforts .', 'label': "{'NAACP': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "NAACP"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'NAACP': 'Organization'}}
{'idx': 26, 'sentence': 'Its units supported the Allied invasion of Normandy ( June 1944 ) ; the Allied ground troops during the Battle of the Bulge ( December 1944 through January 1945 ) ; the Allied airborne attack on Holland ( Operation Market Garden , September 1944 ) ; the defense of the Remagen bridgehead against German air attacks ( March 1945 ) ; and the airborne attack across the Rhine ( March 1945 ) .', 'label': "{'Battle of the Bulge': 'Miscellaneous', 'Allied': 'Organization', 'German': 'Miscellaneous', 'Holland': 'Location', 'Remagen': 'Location', 'Operation Market Garden': 'Miscellaneous', 'Rhine': 'Location', 'Normandy': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Allied"\n)\nLocation_entity1 = Location(\n    name = "Normandy"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "June 1944"\n)\nOrganization_entity2 = Organization(\n    name = "Allied"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Battle of the Bulge"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "December 1944"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "January 1945"\n)\nOrganization_entity3 = Organization(\n    name = "Allied"\n)\nLocation_entity2 = Location(\n    name = "Holland"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "Operation Market Garden"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "September 1944"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "Remagen bridgehead"\n)\nMiscellaneous_entity8 = Miscellaneous(\n    name = "German"\n)\nMiscellaneous_entity9 = Miscellaneous(\n    name = "March 1945"\n)\nMiscellaneous_entity10 = Miscellaneous(\n    name = "Rhine"\n)\nMiscellaneous_entity11 = Miscellaneous(\n    name = "March 1945"\n)', 'prediction': {'Allied': 'Organization', 'Normandy': 'Location', 'June 1944': 'Miscellaneous', 'Battle of the Bulge': 'Miscellaneous', 'December 1944': 'Miscellaneous', 'January 1945': 'Miscellaneous', 'Holland': 'Location', 'Operation Market Garden': 'Miscellaneous', 'September 1944': 'Miscellaneous', 'Remagen bridgehead': 'Miscellaneous', 'German': 'Miscellaneous', 'March 1945': 'Miscellaneous', 'Rhine': 'Miscellaneous'}}
{'idx': 27, 'sentence': 'Assigned or attached units of the division participated in numerous exercises with the Spanish Air Defense Command , and in some instances , with the U.S. Sixth Fleet .', 'label': "{'U.S. Sixth Fleet': 'Organization', 'Spanish Air Defense Command': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Spanish Air Defense Command"\n)\nOrganization_entity2 = Organization(\n    name = "U.S. Sixth Fleet"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Spanish Air Defense Command': 'Organization', 'U.S. Sixth Fleet': 'Organization'}}
{'idx': 28, 'sentence': 'Redesignated 65 Air Division ( Defense ) on 17 April 1952 .', 'label': "{'65 Air Division ( Defense )': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "65 Air Division"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Defense"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "17 April 1952"\n)', 'prediction': {'65 Air Division': 'Organization', 'Defense': 'Miscellaneous', '17 April 1952': 'Miscellaneous'}}
{'idx': 29, 'sentence': 'Inactivated on 30 June 1991 .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "30 June 1991"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'30 June 1991': 'Miscellaneous'}}
{'idx': 30, 'sentence': 'Iceland Air Defense Force , 24 April 1952 -- 8 March 1954 .', 'label': "{'Iceland Air Defense Force': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Iceland Air Defense Force"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "24 April 1952"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "8 March 1954"\n)', 'prediction': {'Iceland Air Defense Force': 'Organization', '24 April 1952': 'Miscellaneous', '8 March 1954': 'Miscellaneous'}}
{'idx': 31, 'sentence': 'Sembach Air Base , Germany , 1 June 1985 ; Lindsey Air Station , Germany , 1 October 1987 -- 30 June 1991 .', 'label': "{'Germany': 'Location', 'Sembach Air Base': 'Organization', 'Lindsey Air Station': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "Sembach Air Base"\n)\nLocation_entity2 = Location(\n    name = "Germany"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1 June 1985"\n)\nLocation_entity3 = Location(\n    name = "Lindsey Air Station"\n)\nLocation_entity4 = Location(\n    name = "Germany"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1 October 1987"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "30 June 1991"\n)', 'prediction': {'Sembach Air Base': 'Location', 'Germany': 'Location', '1 June 1985': 'Miscellaneous', 'Lindsey Air Station': 'Location', '1 October 1987': 'Miscellaneous', '30 June 1991': 'Miscellaneous'}}
{'idx': 32, 'sentence': 'Curry , 29 July 1945 -- unkn .', 'label': "{'Curry': 'Person'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Curry"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "29 July 1945"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Curry': 'Miscellaneous', '29 July 1945': 'Miscellaneous'}}
{'idx': 33, 'sentence': "In 1963 the Victorian Broadcasting Network purchased Nicholson 's and sold the electrical division of the organisation to Vox Adeon .", 'label': '{"Nicholson \'s": \'Organization\', \'Vox Adeon\': \'Organization\', \'Victorian Broadcasting Network\': \'Organization\'}', 'response': 'Organization_entity1 = Organization(\n    name = "Victorian Broadcasting Network"\n)\nOrganization_entity2 = Organization(\n    name = "Nicholson\'s"\n)\nOrganization_entity3 = Organization(\n    name = "Vox Adeon"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Victorian Broadcasting Network': 'Organization', "Nicholson's": 'Organization', 'Vox Adeon': 'Organization'}}
{'idx': 34, 'sentence': 'The limited hours of broadcasting 69 years ago have gradually been increased to a 24 hour , seven day a week service .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "69 years ago"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "24 hour"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "seven day a week service"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'69 years ago': 'Miscellaneous', '24 hour': 'Miscellaneous', 'seven day a week service': 'Miscellaneous'}}
{'idx': 35, 'sentence': 'In 1987 the TAB purchased 6PR to secure the future of race broadcasts in Western Australia and races were broadcast across the station during popular talkback programs .', 'label': "{'TAB': 'Organization', 'Western Australia': 'Location', '6PR': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "TAB"\n)\nOrganization_entity2 = Organization(\n    name = "6PR"\n)\nLocation_entity1 = Location(\n    name = "Western Australia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'TAB': 'Organization', '6PR': 'Organization', 'Western Australia': 'Location'}}
{'idx': 36, 'sentence': "During the Australian Rules Football Season 882 6PR is Perth 's Football Leader .", 'label': "{'882 6PR': 'Organization', 'Perth': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Australian Rules Football Season 882 6PR"\n)\nLocation_entity1 = Location(\n    name = "Perth"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Australian Rules Football Season 882 6PR': 'Organization', 'Perth': 'Location'}}
{'idx': 37, 'sentence': 'Peter Vlahos is based in the 6PR Studio while Karl Langdon & Harvey Deegan base themselves at different matches .', 'label': "{'Harvey Deegan': 'Person', '6PR': 'Organization', 'Peter Vlahos': 'Person', 'Karl Langdon': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Peter Vlahos"\n)\nOrganization_entity1 = Organization(\n    name = "6PR Studio"\n)\nPerson_entity2 = Person(\n    name = "Karl Langdon"\n)\nPerson_entity3 = Person(\n    name = "Harvey Deegan"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Peter Vlahos': 'Person', '6PR Studio': 'Organization', 'Karl Langdon': 'Person', 'Harvey Deegan': 'Person'}}
{'idx': 38, 'sentence': 'As of the 2007/2008 A-League season 6PR will again broadcast every Perth Glory Home & Away fixture .', 'label': "{'6PR': 'Organization', 'Perth Glory': 'Organization', '2007/2008 A-League': 'Organization'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "2007/2008 A-League season"\n)\nOrganization_entity1 = Organization(\n    name = "6PR"\n)\nOrganization_entity2 = Organization(\n    name = "Perth Glory"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'2007/2008 A-League season': 'Miscellaneous', '6PR': 'Organization', 'Perth Glory': 'Organization'}}
{'idx': 39, 'sentence': '883JIA FM , is a Chinese radio station of SAFRA Radio in Singapore .', 'label': "{'Singapore': 'Location', 'Chinese': 'Miscellaneous', 'SAFRA Radio': 'Organization', '883JIA FM': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "883JIA FM"\n)\nOrganization_entity2 = Organization(\n    name = "SAFRA Radio"\n)\nLocation_entity1 = Location(\n    name = "Singapore"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'883JIA FM': 'Organization', 'SAFRA Radio': 'Organization', 'Singapore': 'Location'}}
{'idx': 40, 'sentence': '883Jia FM Official Website', 'label': "{'883Jia FM': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "883Jia FM"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'883Jia FM': 'Organization'}}
{'idx': 41, 'sentence': 'Both were transferred from Kreis Flensburg with the establishment of the current Danish-German border .', 'label': "{'Danish-German': 'Location', 'Kreis Flensburg': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Kreis Flensburg"\n)\nLocation_entity2 = Location(\n    name = "Danish-German border"\n)', 'prediction': {'Kreis Flensburg': 'Location', 'Danish-German border': 'Location'}}
{'idx': 42, 'sentence': 'He is known to have composed three chansons de geste as well as the romance Cleomadé .', 'label': "{'Cleomadé': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "chansons de geste"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "romance Cleomadé"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'chansons de geste': 'Miscellaneous', 'romance Cleomadé': 'Miscellaneous'}}
{'idx': 43, 'sentence': 'Despite being born in the West African country of the Cape Verde islands he plays for the Swiss Under-19s side .', 'label': "{'West African': 'Miscellaneous', 'Cape Verde islands': 'Location', 'Swiss': 'Miscellaneous', 'Under-19s': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "Cape Verde islands"\n)\nOrganization_entity1 = Organization(\n    name = "Swiss Under-19s"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Cape Verde islands': 'Location', 'Swiss Under-19s': 'Organization'}}
{'idx': 44, 'sentence': 'Born on April 16 , 1819 in Gostkócity near Łęczyca in a Polish szlachta family of Lipscy to Jacob Lipski and Marjania Zaluska , she spent her life in the Prussian partition , including the Grand Duchy of Poznań .', 'label': "{'Polish': 'Miscellaneous', 'Łęczyca': 'Location', 'Jacob Lipski': 'Person', 'Prussian': 'Miscellaneous', 'Lipscy': 'Location', 'Grand Duchy of Poznań': 'Location', 'Marjania Zaluska': 'Person'}", 'response': 'Location_entity1 = Location(\n    name = "Gostkócity"\n)\nLocation_entity2 = Location(\n    name = "Łęczyca"\n)\nOrganization_entity1 = Organization(\n    name = "Prussian partition"\n)\nLocation_entity3 = Location(\n    name = "Grand Duchy of Poznań"\n)\nPerson_entity1 = Person(\n    name = "Jacob Lipski"\n)\nPerson_entity2 = Person(\n    name = "Marjania Zaluska"\n)\nPerson_entity3 = Person(\n    name = "Lipscy"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Gostkócity': 'Location', 'Łęczyca': 'Location', 'Prussian partition': 'Organization', 'Grand Duchy of Poznań': 'Location', 'Jacob Lipski': 'Person', 'Marjania Zaluska': 'Person', 'Lipscy': 'Person'}}
{'idx': 45, 'sentence': 'She took part in many activities designed to promote Polish culture , and sponsored and organized various festivities or organizations ( such as the Society of Scientific Help for Girls ( Towarzystwo Pomocy Naukowej dla dziewcząt ) ) .', 'label': "{'Society of Scientific Help for Girls': 'Organization', 'Polish': 'Miscellaneous', 'Towarzystwo Pomocy Naukowej dla dziewcząt': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "She"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Polish"\n)\nOrganization_entity1 = Organization(\n    name = "Society of Scientific Help for Girls"\n)', 'prediction': {'She': 'Person', 'Polish': 'Miscellaneous', 'Society of Scientific Help for Girls': 'Organization'}}
{'idx': 46, 'sentence': 'Excluded from all political and social rights , they were only allowed to enter a church by a special door , and during the service a rail separated them from the other worshippers .', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "church"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "political"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "social"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "rights"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "service"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "rail"\n)\nPerson_entity1 = Person(\n    name = "worshippers"\n)', 'prediction': {'church': 'Organization', 'political': 'Miscellaneous', 'social': 'Miscellaneous', 'rights': 'Miscellaneous', 'service': 'Miscellaneous', 'rail': 'Miscellaneous', 'worshippers': 'Person'}}
{'idx': 47, 'sentence': 'It has been suggested that they were descendants of the Visigoths , and somebody derives the name from caas ( dog ) and Goth .', 'label': "{'Goth': 'Miscellaneous', 'Visigoths': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Visigoths"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Visigoths': 'Organization'}}
{'idx': 48, 'sentence': 'It was not until the French Revolution that any steps were taken to ameliorate their lot , but today they no longer form a class and have been practically lost sight of in the general peasantry .', 'label': "{'French Revolution': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "French Revolution"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "steps"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "lot"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "class"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "peasantry"\n)', 'prediction': {'French Revolution': 'Location', 'steps': 'Miscellaneous', 'lot': 'Miscellaneous', 'class': 'Miscellaneous', 'peasantry': 'Miscellaneous'}}
{'idx': 49, 'sentence': 'Robert Gibson succeeded Wren as the " Liberal-Labour " MPP for Kenora and served until the 1967 election .', 'label': "{'Liberal-Labour': 'Organization', 'Kenora': 'Location', 'Robert Gibson': 'Person', 'Wren': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Robert Gibson"\n)\nPerson_entity2 = Person(\n    name = "Wren"\n)\nOrganization_entity1 = Organization(\n    name = "Liberal-Labour"\n)\nLocation_entity1 = Location(\n    name = "Kenora"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1967 election"\n)', 'prediction': {'Robert Gibson': 'Person', 'Wren': 'Person', 'Liberal-Labour': 'Organization', 'Kenora': 'Location', '1967 election': 'Miscellaneous'}}
{'idx': 50, 'sentence': 'It was probably first performed by Gradsky on August 20 , 1998 on Vasilievsky Spusk next to the Red Square in Moscow .', 'label': "{'Gradsky': 'Person', 'Red Square': 'Location', 'Vasilievsky Spusk': 'Location', 'Moscow': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Gradsky"\n)\nLocation_entity1 = Location(\n    name = "Vasilievsky Spusk"\n)\nLocation_entity2 = Location(\n    name = "Red Square"\n)\nLocation_entity3 = Location(\n    name = "Moscow"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "August 20"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1998"\n)', 'prediction': {'Gradsky': 'Person', 'Vasilievsky Spusk': 'Location', 'Red Square': 'Location', 'Moscow': 'Location', 'August 20': 'Miscellaneous', '1998': 'Miscellaneous'}}
{'idx': 51, 'sentence': "The Amateur Hockey Association of Canada ( AHAC ) was an amateur men 's ice hockey league founded in 1886 , in existence until 1898 .", 'label': "{'AHAC': 'Organization', 'Amateur Hockey Association of Canada': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Amateur Hockey Association of Canada"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "AHAC"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1886"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "1898"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Amateur Hockey Association of Canada': 'Organization', 'AHAC': 'Miscellaneous', '1886': 'Miscellaneous', '1898': 'Miscellaneous'}}
{'idx': 52, 'sentence': 'They agreed that the season should run from the 1st of January until the 15th of March .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "season"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "January"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "March"\n)', 'prediction': {'season': 'Miscellaneous', 'January': 'Miscellaneous', 'March': 'Miscellaneous'}}
{'idx': 53, 'sentence': "The rover would line up behind the centre , with the point and coverpoint following , in an ' I ' formation towards the goaltender .", 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "rover"\n)\nOrganization_entity2 = Organization(\n    name = "centre"\n)\nOrganization_entity3 = Organization(\n    name = "point"\n)\nOrganization_entity4 = Organization(\n    name = "coverpoint"\n)\nOrganization_entity5 = Organization(\n    name = "goaltender"\n)', 'prediction': {'rover': 'Organization', 'centre': 'Organization', 'point': 'Organization', 'coverpoint': 'Organization', 'goaltender': 'Organization'}}
{'idx': 54, 'sentence': 'There were no boards along the sides of the ice , and there were no standard dimensions for a rink , although dimensions were instituted for the positioning of the goal out from the ends of the rink .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "ice"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "boards"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "dimensions"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "rink"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "goal"\n)', 'prediction': {'ice': 'Location', 'boards': 'Miscellaneous', 'dimensions': 'Miscellaneous', 'rink': 'Miscellaneous', 'goal': 'Miscellaneous'}}
{'idx': 55, 'sentence': 'The first championship team of the AHAC was the Montreal Crystals , having unofficially being declared the champions before the AHAC .', 'label': "{'AHAC': 'Organization', 'Montreal Crystals': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "AHAC"\n)\nOrganization_entity2 = Organization(\n    name = "Montreal Crystals"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'AHAC': 'Organization', 'Montreal Crystals': 'Organization'}}
{'idx': 56, 'sentence': 'In 1893 , the first year since 1888 where the AHAC played under a series system , the Montreal Hockey Club lost their first game against the Ottawa Hockey Club , and proceeded to win their next seven en route to the championship .', 'label': "{'Ottawa Hockey Club': 'Organization', 'Montreal Hockey Club': 'Organization', 'AHAC': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "AHAC"\n)\nOrganization_entity2 = Organization(\n    name = "Montreal Hockey Club"\n)\nOrganization_entity3 = Organization(\n    name = "Ottawa Hockey Club"\n)', 'prediction': {'AHAC': 'Organization', 'Montreal Hockey Club': 'Organization', 'Ottawa Hockey Club': 'Organization'}}
{'idx': 57, 'sentence': 'In the end , the MAAA investigated into why its hockey club wanted to refuse and return the trophy , even though such an action would damage the reputation of the MAAA .', 'label': "{'MAAA': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "MAAA"\n)\nOrganization_entity2 = Organization(\n    name = "MAAA"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'MAAA': 'Organization'}}
{'idx': 58, 'sentence': '† Stanley Cup winner', 'label': "{'Stanley Cup': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Stanley Cup winner"\n)', 'prediction': {'Stanley Cup winner': 'Miscellaneous'}}
{'idx': 59, 'sentence': 'Andrew Sant ( b. 1950 ) is an English born Australian poet .', 'label': "{'Andrew Sant': 'Person', 'English': 'Miscellaneous', 'Australian': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Andrew Sant"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1950"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "English"\n)\nOrganization_entity1 = Organization(\n    name = "Australian"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Andrew Sant': 'Person', '1950': 'Miscellaneous', 'English': 'Miscellaneous', 'Australian': 'Organization'}}
{'idx': 60, 'sentence': 'Individual poems have appeared in The Times Literary Supplement , Poetry ( Chicago ) , Poetry London , The Australian , Antipodes and many other publications .', 'label': "{'Antipodes': 'Organization', 'Poetry': 'Organization', 'Poetry London': 'Organization', 'The Times Literary Supplement': 'Organization', 'Chicago': 'Location', 'The Australian': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "The Times Literary Supplement"\n)\nOrganization_entity2 = Organization(\n    name = "Poetry"\n)\nLocation_entity1 = Location(\n    name = "Chicago"\n)\nOrganization_entity3 = Organization(\n    name = "Poetry London"\n)\nOrganization_entity4 = Organization(\n    name = "The Australian"\n)\nOrganization_entity5 = Organization(\n    name = "Antipodes"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'The Times Literary Supplement': 'Organization', 'Poetry': 'Organization', 'Chicago': 'Location', 'Poetry London': 'Organization', 'The Australian': 'Organization', 'Antipodes': 'Organization'}}
{'idx': 61, 'sentence': 'Ten years after the initial diagnosis she developed another form of cancer , which she and her doctors fought with equal determination .', 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "she"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Ten years"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "cancer"\n)', 'prediction': {'she': 'Person', 'Ten years': 'Miscellaneous', 'cancer': 'Miscellaneous'}}
{'idx': 62, 'sentence': 'Fearing a lawsuit by pro-life activists , they convened a court hearing at the hospital and obtained separate counsels for Carder , her fetus , and the hospital .', 'label': "{'Carder': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "hospital"\n)\nPerson_entity1 = Person(\n    name = "Carder"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "lawsuit"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "pro-life activists"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "court hearing"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "fetus"\n)', 'prediction': {'hospital': 'Organization', 'Carder': 'Person', 'lawsuit': 'Miscellaneous', 'pro-life activists': 'Miscellaneous', 'court hearing': 'Miscellaneous', 'fetus': 'Miscellaneous'}}
{'idx': 63, 'sentence': 'Obstetricians at the hospital initially refused to carry out the procedure , but eventually one reluctantly agreed .', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "hospital"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'hospital': 'Organization'}}
{'idx': 64, 'sentence': "In the wake of the surgery , Carder 's family and the American Civil Liberties Union 's Reproductive Freedom Project asked the D.C. Court of Appeals to vacate the order and its legal precedent , on grounds that the order had violated Carder 's right to informed consent and her constitutional rights of privacy and bodily integrity .", 'label': "{'Reproductive Freedom Project': 'Organization', 'American Civil Liberties Union': 'Organization', 'D.C. Court of Appeals': 'Organization', 'Carder': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Carder"\n)\nOrganization_entity1 = Organization(\n    name = "American Civil Liberties Union"\n)\nOrganization_entity2 = Organization(\n    name = "Reproductive Freedom Project"\n)\nLocation_entity1 = Location(\n    name = "D.C. Court of Appeals"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "surgery"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "legal precedent"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "informed consent"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "constitutional rights"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "privacy"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "bodily integrity"\n)', 'prediction': {'Carder': 'Person', 'American Civil Liberties Union': 'Organization', 'Reproductive Freedom Project': 'Organization', 'D.C. Court of Appeals': 'Location', 'surgery': 'Miscellaneous', 'legal precedent': 'Miscellaneous', 'informed consent': 'Miscellaneous', 'constitutional rights': 'Miscellaneous', 'privacy': 'Miscellaneous', 'bodily integrity': 'Miscellaneous'}}
{'idx': 65, 'sentence': 'With a very diverse background in every type of industry imaginable Angelo began his growth in Miami as a young Actor / Model working many non-union & later union jobs .', 'label': "{'Angelo': 'Person', 'Miami': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Angelo"\n)\nLocation_entity1 = Location(\n    name = "Miami"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Actor"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Model"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Angelo': 'Person', 'Miami': 'Location', 'Actor': 'Miscellaneous', 'Model': 'Miscellaneous'}}
{'idx': 66, 'sentence': 'During this time he was also working in Corporate America for Fortune 500 Corporations leading their marketing departments in companies like AT&T , Wachovia , Carnival Cruise Lines , and many more .', 'label': "{'AT&T': 'Organization', 'Fortune': 'Organization', 'Carnival Cruise Lines': 'Organization', 'America': 'Location', 'Wachovia': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Corporate America"\n)\nOrganization_entity2 = Organization(\n    name = "Fortune 500 Corporations"\n)\nOrganization_entity3 = Organization(\n    name = "AT&T"\n)\nOrganization_entity4 = Organization(\n    name = "Wachovia"\n)\nOrganization_entity5 = Organization(\n    name = "Carnival Cruise Lines"\n)', 'prediction': {'Corporate America': 'Organization', 'Fortune 500 Corporations': 'Organization', 'AT&T': 'Organization', 'Wachovia': 'Organization', 'Carnival Cruise Lines': 'Organization'}}
{'idx': 67, 'sentence': 'In 2002 , Angelo launched NOK Entertainment to create a company that could market , promote , produce , & create all types of special events at any venue from Miami , South Beach to West Palm Beach , including L.A. , NYC , & Vegas .', 'label': "{'South Beach': 'Location', 'West Palm Beach': 'Location', 'L.A.': 'Location', 'NOK Entertainment': 'Organization', 'Angelo': 'Person', 'Miami': 'Location', 'NYC': 'Location', 'Vegas': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Angelo"\n)\nOrganization_entity1 = Organization(\n    name = "NOK Entertainment"\n)\nLocation_entity1 = Location(\n    name = "Miami"\n)\nLocation_entity2 = Location(\n    name = "South Beach"\n)\nLocation_entity3 = Location(\n    name = "West Palm Beach"\n)\nLocation_entity4 = Location(\n    name = "L.A."\n)\nLocation_entity5 = Location(\n    name = "NYC"\n)\nLocation_entity6 = Location(\n    name = "Vegas"\n)', 'prediction': {'Angelo': 'Person', 'NOK Entertainment': 'Organization', 'Miami': 'Location', 'South Beach': 'Location', 'West Palm Beach': 'Location', 'L.A.': 'Location', 'NYC': 'Location', 'Vegas': 'Location'}}
{'idx': 68, 'sentence': 'Angelo has reached out to corporate America , the young and successful , the trendy , the tourist , the wealthy , the professional , the rich & famous .', 'label': "{'America': 'Location', 'Angelo': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "corporate America"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "young and successful"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "trendy"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "tourist"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "wealthy"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "professional"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "rich & famous"\n)', 'prediction': {'corporate America': 'Organization', 'young and successful': 'Miscellaneous', 'trendy': 'Miscellaneous', 'tourist': 'Miscellaneous', 'wealthy': 'Miscellaneous', 'professional': 'Miscellaneous', 'rich & famous': 'Miscellaneous'}}
{'idx': 69, 'sentence': 'Current News : Angelo is working on a book , the date for release is Dec. 2008 . He is also launching several businesses as well as launching several concerts in the Miami Area .', 'label': "{'Miami': 'Location', 'Angelo': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Angelo"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Dec. 2008"\n)\nOrganization_entity1 = Organization(\n    name = "businesses"\n)\nLocation_entity1 = Location(\n    name = "Miami Area"\n)', 'prediction': {'Angelo': 'Person', 'Dec. 2008': 'Miscellaneous', 'businesses': 'Organization', 'Miami Area': 'Location'}}
{'idx': 70, 'sentence': 'Influence rather than position . "', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Influence"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "position"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Influence': 'Miscellaneous', 'position': 'Miscellaneous'}}
{'idx': 71, 'sentence': 'It was written by Henrique Lopes de Mendonça ( lyrics ) and Alfredo Keil ( music ) after the nationalist resurgence provoked by the British Ultimatum ( for Portuguese troops to vacate the territory between Angola and Mozambique ) , was adopted as a Republican anthem and , finally , by the new Portuguese Republic in 1910 as the national anthem , replacing " O Hymno da Carta " , the last anthem of the Constitutional Monarchy in Portugal .', 'label': "{'Henrique Lopes de Mendonça': 'Person', 'Portuguese Republic': 'Location', 'British Ultimatum': 'Miscellaneous', 'Angola': 'Location', 'O Hymno da Carta': 'Miscellaneous', 'Constitutional Monarchy': 'Organization', 'Alfredo Keil': 'Person', 'Mozambique': 'Location', 'Portugal': 'Location', 'Republican': 'Organization', 'Portuguese': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Henrique Lopes de Mendonça"\n)\nPerson_entity2 = Person(\n    name = "Alfredo Keil"\n)\nOrganization_entity1 = Organization(\n    name = "British Ultimatum"\n)\nLocation_entity1 = Location(\n    name = "Angola"\n)\nLocation_entity2 = Location(\n    name = "Mozambique"\n)\nOrganization_entity2 = Organization(\n    name = "Portuguese Republic"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1910"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "O Hymno da Carta"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Constitutional Monarchy"\n)', 'prediction': {'Henrique Lopes de Mendonça': 'Person', 'Alfredo Keil': 'Person', 'British Ultimatum': 'Organization', 'Angola': 'Location', 'Mozambique': 'Location', 'Portuguese Republic': 'Organization', '1910': 'Miscellaneous', 'O Hymno da Carta': 'Miscellaneous', 'Constitutional Monarchy': 'Miscellaneous'}}
{'idx': 72, 'sentence': 'On January 31 , 1891 , a republican revolution broke out in the northern city of Porto and " A Portuguesa " was adopted by the rebels as their anthem .', 'label': "{'A Portuguesa': 'Miscellaneous', 'Porto': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Porto"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "January 31"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1891"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "A Portuguesa"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Porto': 'Location', 'January 31': 'Miscellaneous', '1891': 'Miscellaneous', 'A Portuguesa': 'Miscellaneous'}}
{'idx': 73, 'sentence': 'The fifth line of the chorus : " Contra os canhões marchar , marchar " ( Against the cannons march , march ! ) is an alteration of the original " Contra os bretões marchar , marchar " ( Against the Britos march , march ! ) , a reference to the Pink Map .', 'label': "{'Britos': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Pink Map"\n)', 'prediction': {'Pink Map': 'Location'}}
{'idx': 74, 'sentence': 'After World War II , it was changed to Veterans Day in the United States and to Remembrance Day in the British Commonwealth of Nations .', 'label': "{'Remembrance Day': 'Miscellaneous', 'United States': 'Location', 'World War II': 'Miscellaneous', 'British Commonwealth of Nations': 'Organization', 'Veterans Day': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Veterans Day"\n)\nOrganization_entity2 = Organization(\n    name = "Remembrance Day"\n)\nLocation_entity1 = Location(\n    name = "United States"\n)\nLocation_entity2 = Location(\n    name = "British Commonwealth of Nations"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Veterans Day': 'Organization', 'Remembrance Day': 'Organization', 'United States': 'Location', 'British Commonwealth of Nations': 'Location'}}
{'idx': 75, 'sentence': 'November 11th 2008 will be the 90th anniversary of Armistice Day .', 'label': "{'Armistice Day': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "November 11th 2008"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "90th anniversary"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Armistice Day"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'November 11th 2008': 'Miscellaneous', '90th anniversary': 'Miscellaneous', 'Armistice Day': 'Miscellaneous'}}
{'idx': 76, 'sentence': 'The ISAP , ILPAP and ETHEL companies belong to the public company OASA ( Organismos Astikon Syngoinonion Athinon / Athens Urban Transport Organisation / Οργανισμός Αστικών Συγκοινωνιών Αθηνών . The AMEL and Tram companies belong to Attiko Metro ( Αττικό Μετρό Α.Ε. in Greek ) , a company that is currently wholly owned by the Greek government .', 'label': "{'Greek government': 'Organization', 'ILPAP': 'Organization', 'Attiko Metro': 'Organization', 'Athens Urban Transport Organisation': 'Organization', 'ISAP': 'Organization', 'Tram': 'Organization', 'Greek': 'Miscellaneous', 'ETHEL': 'Organization', 'OASA': 'Organization', 'AMEL': 'Organization', 'Organismos Astikon Syngoinonion Athinon': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "ISAP"\n)\nOrganization_entity2 = Organization(\n    name = "ILPAP"\n)\nOrganization_entity3 = Organization(\n    name = "ETHEL"\n)\nOrganization_entity4 = Organization(\n    name = "OASA"\n)\nOrganization_entity5 = Organization(\n    name = "Attiko Metro"\n)\nOrganization_entity6 = Organization(\n    name = "Greek government"\n)', 'prediction': {'ISAP': 'Organization', 'ILPAP': 'Organization', 'ETHEL': 'Organization', 'OASA': 'Organization', 'Attiko Metro': 'Organization', 'Greek government': 'Organization'}}
{'idx': 77, 'sentence': 'According to the 2001 UK census , Atwick parish had a population of 318 .', 'label': "{'Atwick': 'Location', 'UK': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "UK"\n)\nLocation_entity2 = Location(\n    name = "Atwick"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2001"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "318"\n)', 'prediction': {'UK': 'Location', 'Atwick': 'Location', '2001': 'Miscellaneous', '318': 'Miscellaneous'}}
{'idx': 78, 'sentence': 'It is not a political party , but rather sees itself as a watchdog against government intervention .', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "political party"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "watchdog"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "government intervention"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'political party': 'Organization', 'watchdog': 'Miscellaneous', 'government intervention': 'Miscellaneous'}}
{'idx': 79, 'sentence': 'The League is distinctive for asserting that The Protocols of the Elders of Zion is a genuine Jewish document ( the Encyclopædi Britannica for example describes the Protocols as a " fraudulent document that served as a pretext and rationale for anti-Semitism in the early 20th century " ) .', 'label': "{'The Protocols of the Elders of Zion': 'Miscellaneous', 'Encyclopædi Britannica': 'Miscellaneous', 'League': 'Organization', 'Jewish': 'Miscellaneous', 'Protocols': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "The League"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "The Protocols of the Elders of Zion"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Jewish"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Encyclopædi Britannica"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "fraudulent document that served as a pretext and rationale for anti-Semitism in the early 20th century"\n)', 'prediction': {'The League': 'Organization', 'The Protocols of the Elders of Zion': 'Miscellaneous', 'Jewish': 'Miscellaneous', 'Encyclopædi Britannica': 'Miscellaneous', 'fraudulent document that served as a pretext and rationale for anti-Semitism in the early 20th century': 'Miscellaneous'}}
{'idx': 80, 'sentence': 'Former Western Australian Labor MP , founder of the Australia First Party and later One Nation member Graeme Campbell was associated with the League at the same time as he was a member of One Nation and Australia First .', 'label': "{'Graeme Campbell': 'Person', 'Australia First': 'Organization', 'Labor': 'Organization', 'One Nation': 'Organization', 'Western Australian': 'Miscellaneous', 'Australia First Party': 'Organization', 'League': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "Graeme Campbell"\n)\nOrganization_entity1 = Organization(\n    name = "Australia First Party"\n)\nOrganization_entity2 = Organization(\n    name = "One Nation"\n)\nOrganization_entity3 = Organization(\n    name = "League"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Graeme Campbell': 'Person', 'Australia First Party': 'Organization', 'One Nation': 'Organization', 'League': 'Organization'}}
{'idx': 81, 'sentence': 'In the 1970s and early 1980s , the League attempted to gain control of the National Party of Australia , encouraging members to join the party in sufficient numbers to take control , a tactic known as entryism .', 'label': "{'League': 'Organization', 'National Party of Australia': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "League"\n)\nOrganization_entity2 = Organization(\n    name = "National Party of Australia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'League': 'Organization', 'National Party of Australia': 'Organization'}}
{'idx': 82, 'sentence': 'Critics have pointed to the past participation of the League in the former World Anti-Communist League alongside dictatorial regimes like that of Augusto Pinochet .', 'label': "{'World Anti-Communist League': 'Organization', 'Augusto Pinochet': 'Person', 'League': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "League"\n)\nOrganization_entity2 = Organization(\n    name = "World Anti-Communist League"\n)\nPerson_entity1 = Person(\n    name = "Augusto Pinochet"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'League': 'Organization', 'World Anti-Communist League': 'Organization', 'Augusto Pinochet': 'Person'}}
{'idx': 83, 'sentence': 'The Ayalon Cave is a large underground limestone cave located near Ramla , Israel .', 'label': "{'Ayalon Cave': 'Location', 'Ramla': 'Location', 'Israel': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Ayalon Cave"\n)\nLocation_entity2 = Location(\n    name = "Ramla"\n)\nLocation_entity3 = Location(\n    name = "Israel"\n)', 'prediction': {'Ayalon Cave': 'Location', 'Ramla': 'Location', 'Israel': 'Location'}}
{'idx': 84, 'sentence': 'The cave will remain closed to the public to allow scientific investigation to continue undisturbed .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "cave"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'cave': 'Location'}}
{'idx': 85, 'sentence': 'Baatsagaan is a sum ( district ) of Bayankhongor Province in southern Mongolia .', 'label': "{'Mongolia': 'Location', 'Baatsagaan': 'Location', 'Bayankhongor Province': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Baatsagaan"\n)\nLocation_entity2 = Location(\n    name = "Bayankhongor Province"\n)\nLocation_entity3 = Location(\n    name = "Mongolia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Baatsagaan': 'Location', 'Bayankhongor Province': 'Location', 'Mongolia': 'Location'}}
{'idx': 86, 'sentence': 'The Badminton World Federation ( BWF ) is the international governing body for the sport of badminton .', 'label': "{'Badminton World Federation': 'Organization', 'BWF': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Badminton World Federation"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "BWF"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "badminton"\n)', 'prediction': {'Badminton World Federation': 'Organization', 'BWF': 'Miscellaneous', 'badminton': 'Miscellaneous'}}
{'idx': 87, 'sentence': 'About ten miles from Bandarlapalle the Deccan Plateau ends in a dense forest range , sloping down into the plains of Tamilnadu .', 'label': "{'Tamilnadu': 'Location', 'Deccan Plateau': 'Location', 'Bandarlapalle': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Bandarlapalle"\n)\nLocation_entity2 = Location(\n    name = "Deccan Plateau"\n)\nLocation_entity3 = Location(\n    name = "Tamilnadu"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bandarlapalle': 'Location', 'Deccan Plateau': 'Location', 'Tamilnadu': 'Location'}}
{'idx': 88, 'sentence': 'However , since the last decade there has lot of developmental work taken place , with good roads , drinking water and schools being built .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "last decade"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "developmental work"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "good roads"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "drinking water"\n)\nOrganization_entity1 = Organization(\n    name = "schools"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'last decade': 'Miscellaneous', 'developmental work': 'Miscellaneous', 'good roads': 'Miscellaneous', 'drinking water': 'Miscellaneous', 'schools': 'Organization'}}
{'idx': 89, 'sentence': 'Following its independence , Bangladesh became an independent member of the World Organization of the Scout Movement in 1974 .', 'label': "{'World Organization of the Scout Movement': 'Organization', 'Bangladesh': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "World Organization of the Scout Movement"\n)\nLocation_entity1 = Location(\n    name = "Bangladesh"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'World Organization of the Scout Movement': 'Organization', 'Bangladesh': 'Location'}}
{'idx': 90, 'sentence': 'Membership is open to youth between 6 and 25 years of age , regardless of caste , creed or color .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Membership"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "youth"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "6"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "25"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "caste"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "creed"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "color"\n)', 'prediction': {'Membership': 'Miscellaneous', 'youth': 'Miscellaneous', '6': 'Miscellaneous', '25': 'Miscellaneous', 'caste': 'Miscellaneous', 'creed': 'Miscellaneous', 'color': 'Miscellaneous'}}
{'idx': 91, 'sentence': '5 .', 'label': '{}', 'response': 'None.', 'prediction': {}}
{'idx': 92, 'sentence': 'In addition , there are American Boy Scouts in Dhaka , linked to the Direct Service branch of the Boy Scouts of America , which supports units around the world .', 'label': "{'Boy Scouts of America': 'Organization', 'Dhaka': 'Location', 'American Boy Scouts': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "American Boy Scouts"\n)\nLocation_entity1 = Location(\n    name = "Dhaka"\n)\nOrganization_entity2 = Organization(\n    name = "Direct Service branch of the Boy Scouts of America"\n)\nOrganization_entity3 = Organization(\n    name = "Boy Scouts of America"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'American Boy Scouts': 'Organization', 'Dhaka': 'Location', 'Direct Service branch of the Boy Scouts of America': 'Organization', 'Boy Scouts of America': 'Organization'}}
{'idx': 93, 'sentence': 'Li Shimin led a siege on the city of Luoyang , head of the self-declared emperor Wang Shichong , who solicited help from Dou Jiande from the east .', 'label': "{'Wang Shichong': 'Person', 'Luoyang': 'Location', 'Li Shimin': 'Person', 'Dou Jiande': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Li Shimin"\n)\nLocation_entity1 = Location(\n    name = "Luoyang"\n)\nPerson_entity2 = Person(\n    name = "Wang Shichong"\n)\nPerson_entity3 = Person(\n    name = "Dou Jiande"\n)\n\nOrganization_entity1 = Organization(\n    name = "Tang"\n)', 'prediction': {'Li Shimin': 'Person', 'Luoyang': 'Location', 'Wang Shichong': 'Person', 'Dou Jiande': 'Person', 'Tang': 'Organization'}}
{'idx': 94, 'sentence': 'The French Voulet-Chanoine Mission , led by the captains Paul Voulet and Julien Chanoine , had been dispatched in 1898 to Africa by the French government with the mission to conquer the territories between the Niger River and Lake Chad and join in uniting French territories in West Africa .', 'label': "{'French': 'Miscellaneous', 'Voulet-Chanoine Mission': 'Organization', 'Paul Voulet': 'Person', 'West Africa': 'Location', 'Lake Chad': 'Location', 'Julien Chanoine': 'Person', 'French government': 'Organization', 'Niger River': 'Location', 'Africa': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "French Voulet-Chanoine Mission"\n)\nPerson_entity1 = Person(\n    name = "Paul Voulet"\n)\nPerson_entity2 = Person(\n    name = "Julien Chanoine"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1898"\n)\nLocation_entity1 = Location(\n    name = "Africa"\n)\nLocation_entity2 = Location(\n    name = "Niger River"\n)\nLocation_entity3 = Location(\n    name = "Lake Chad"\n)\nLocation_entity4 = Location(\n    name = "West Africa"\n)', 'prediction': {'French Voulet-Chanoine Mission': 'Organization', 'Paul Voulet': 'Person', 'Julien Chanoine': 'Person', '1898': 'Miscellaneous', 'Africa': 'Location', 'Niger River': 'Location', 'Lake Chad': 'Location', 'West Africa': 'Location'}}
{'idx': 95, 'sentence': 'The French found the enemy assembled on the field , while women and children had already retired themselves in a small thick and almost impenetrable bush where the Azna defended themselves when facing a superior enemy .', 'label': "{'Azna': 'Miscellaneous', 'French': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "French"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Azna"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'French': 'Organization', 'Azna': 'Miscellaneous'}}
{'idx': 96, 'sentence': 'The Battle of Vilcapugio was fought on October 1 , 1813 during the Campaign of Alto Peru in the Argentine War of Independence , where the pro-independence forces led by General Manuel Belgrano were defeated by the pro-Spanish Realists , led by Joaquin de la Pazuela .', 'label': "{'Campaign of Alto Peru': 'Miscellaneous', 'Argentine War of Independence': 'Miscellaneous', 'Manuel Belgrano': 'Person', 'Joaquin de la Pazuela': 'Person', 'Battle of Vilcapugio': 'Miscellaneous', 'pro-Spanish Realists': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Campaign of Alto Peru"\n)\nOrganization_entity2 = Organization(\n    name = "Argentine War of Independence"\n)\nPerson_entity1 = Person(\n    name = "General Manuel Belgrano"\n)\nPerson_entity2 = Person(\n    name = "Joaquin de la Pazuela"\n)', 'prediction': {'Campaign of Alto Peru': 'Organization', 'Argentine War of Independence': 'Organization', 'General Manuel Belgrano': 'Person', 'Joaquin de la Pazuela': 'Person'}}
{'idx': 97, 'sentence': "At the end of September 1813 , most of Belgrano 's army arrived in the prairie of Vilcapugio , which was a plateau surrounded by tall mountains to the north of Potosí .", 'label': "{'Potosí': 'Location', 'Belgrano': 'Person', 'Vilcapugio': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Vilcapugio"\n)\nLocation_entity2 = Location(\n    name = "Potosí"\n)\nOrganization_entity1 = Organization(\n    name = "Belgrano"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Vilcapugio': 'Location', 'Potosí': 'Location', 'Belgrano': 'Organization'}}
{'idx': 98, 'sentence': 'Belgrano and Eustaquio Díaz Vélez had decided that Vel would be the one to go to Potosí to reunite with the dispersed troops .', 'label': "{'Vel': 'Person', 'Eustaquio Díaz Vélez': 'Person', 'Potosí': 'Location', 'Belgrano': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Belgrano"\n)\nPerson_entity2 = Person(\n    name = "Eustaquio Díaz Vélez"\n)\nLocation_entity1 = Location(\n    name = "Potosí"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Belgrano': 'Person', 'Eustaquio Díaz Vélez': 'Person', 'Potosí': 'Location'}}
{'idx': 99, 'sentence': 'BayCon is a large convention topping two thousand attendees over the last several years .', 'label': "{'BayCon': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "BayCon"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "two thousand"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'BayCon': 'Organization', 'two thousand': 'Miscellaneous'}}
{'idx': 100, 'sentence': "BayCon ' 83 was also held over Thanksgiving weekend .", 'label': "{'BayCon': 'Miscellaneous', 'Thanksgiving': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "BayCon \'83"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {"BayCon '83": 'Organization'}}
{'idx': 101, 'sentence': 'The BEL20 is the benchmark stock market index of Euronext Brussels .', 'label': "{'Euronext Brussels': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "BEL20"\n)\nLocation_entity1 = Location(\n    name = "Euronext Brussels"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'BEL20': 'Organization', 'Euronext Brussels': 'Location'}}
{'idx': 102, 'sentence': 'In addition , a candidate for inclusion must possess a free float market capitalisation ( in Euros ) of at least 300000 times the price of the index on the last trading day of December .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Euros"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "300000"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "December"\n)', 'prediction': {'Euros': 'Miscellaneous', '300000': 'Miscellaneous', 'December': 'Miscellaneous'}}
{'idx': 103, 'sentence': 'He began his career as a short film comedy director and gradually moved into feature film directing and production later in his career .', 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "He"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "short film comedy director"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "feature film directing"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "production"\n)', 'prediction': {'He': 'Person', 'short film comedy director': 'Miscellaneous', 'feature film directing': 'Miscellaneous', 'production': 'Miscellaneous'}}
{'idx': 104, 'sentence': 'He played professionally for the Rochester Jeffersons and Buffalo Bisons', 'label': "{'Buffalo Bisons': 'Organization', 'Rochester Jeffersons': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Rochester Jeffersons"\n)\nOrganization_entity2 = Organization(\n    name = "Buffalo Bisons"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Rochester Jeffersons': 'Organization', 'Buffalo Bisons': 'Organization'}}
{'idx': 105, 'sentence': 'Ben now also helps run Movement Bodyboarding Magazine .', 'label': "{'Movement Bodyboarding Magazine': 'Organization', 'Ben': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Ben"\n)\nOrganization_entity1 = Organization(\n    name = "Movement Bodyboarding Magazine"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ben': 'Person', 'Movement Bodyboarding Magazine': 'Organization'}}
{'idx': 106, 'sentence': 'At 28 , he sensed his chances of ever winning a world title receding with each hand raised in opposition : he had fancied his chances at the infamous Island .', 'label': "{'Island': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Island"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Island': 'Person'}}
{'idx': 107, 'sentence': "The irony of that frigid afternoon in Cronulla did n't dawn on Player as he paddled out in flawless , two-metre waves for the final of the Pipeline Pro ; he was too preoccupied with matters at hand .", 'label': "{'Player': 'Person', 'Pipeline Pro': 'Miscellaneous', 'Cronulla': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Cronulla"\n)\nPerson_entity1 = Person(\n    name = "Player"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Pipeline Pro"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Cronulla': 'Location', 'Player': 'Person', 'Pipeline Pro': 'Miscellaneous'}}
{'idx': 108, 'sentence': 'Then , further controversy .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "controversy"\n)', 'prediction': {'controversy': 'Miscellaneous'}}
{'idx': 109, 'sentence': 'No such contest debacles this year , which means Ben Player is more ambitious than ever to win it clean .', 'label': "{'Ben Player': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Ben Player"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ben Player': 'Person'}}
{'idx': 110, 'sentence': "That wiry frame has filled out during the 13 seasons he 's spent hassling for waves amongst the hungry pack of board riders who converge on the famous stretch of sand every northern winter .", 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "None"\n)\nOrganization_entity1 = Organization(\n    name = "None"\n)\nLocation_entity1 = Location(\n    name = "None"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "13 seasons"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "northern winter"\n)', 'prediction': {'None': 'Location', '13 seasons': 'Miscellaneous', 'northern winter': 'Miscellaneous'}}
{'idx': 111, 'sentence': 'Player won Australian titles as a cadet ( under-16s ) and as a pro in 2000 , part of the new generation that reshaped bodyboarding in Australia .', 'label': "{'Australia': 'Location', 'Australian': 'Miscellaneous', 'Player': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Player"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Australian"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "cadet"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "under-16s"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "pro"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "2000"\n)\nLocation_entity1 = Location(\n    name = "Australia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Player': 'Person', 'Australian': 'Miscellaneous', 'cadet': 'Miscellaneous', 'under-16s': 'Miscellaneous', 'pro': 'Miscellaneous', '2000': 'Miscellaneous', 'Australia': 'Location'}}
{'idx': 112, 'sentence': 'Basically I lost $85,000 for that year and $35,000 that was owed to me , " says Player .', 'label': "{'Player': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Player"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Player': 'Person'}}
{'idx': 113, 'sentence': '" It \'s still growing , but with the money remaining in bodyboarding . "', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "money"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "bodyboarding"\n)', 'prediction': {'money': 'Miscellaneous', 'bodyboarding': 'Miscellaneous'}}
{'idx': 114, 'sentence': 'For the first two years Player sold advertising for the mag , which was named Movement .', 'label': "{'Player': 'Person', 'Movement': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "Player"\n)\nOrganization_entity1 = Organization(\n    name = "Movement"\n)', 'prediction': {'Player': 'Person', 'Movement': 'Organization'}}
{'idx': 115, 'sentence': 'Bodyboarders now seek out the sort of aquatic slabs breaking in shallow water that stand-up surfers leave alone .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Bodyboarders"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "aquatic slabs"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "shallow water"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "stand-up surfers"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bodyboarders': 'Miscellaneous', 'aquatic slabs': 'Miscellaneous', 'shallow water': 'Miscellaneous', 'stand-up surfers': 'Miscellaneous'}}
{'idx': 116, 'sentence': '" I think surfing actually embraces bodyboarding much more now , because it \'s not really seen as competition -- we \'re something totally different , " he says .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "surfing"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "bodyboarding"\n)\nPerson_entity1 = Person(\n    name = "he"\n)', 'prediction': {'surfing': 'Miscellaneous', 'bodyboarding': 'Miscellaneous', 'he': 'Person'}}
{'idx': 117, 'sentence': 'Portugal is the exception on the tour , a playful beach break , but it retains its status on the tour due to the carnival atmosphere that the sport attracts in Europe , as well as in South America .', 'label': "{'Europe': 'Location', 'Portugal': 'Location', 'South America': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Portugal"\n)\nLocation_entity2 = Location(\n    name = "Europe"\n)\nLocation_entity3 = Location(\n    name = "South America"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Portugal': 'Location', 'Europe': 'Location', 'South America': 'Location'}}
{'idx': 118, 'sentence': 'Kopački Rit , situated at the confluence of the Drava and the Danube , the unique preserved wetland area in this part of Europe is not far from Mece .', 'label': "{'Mece': 'Location', 'Kopački Rit': 'Location', 'Drava': 'Location', 'Europe': 'Location', 'Danube': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Kopački Rit"\n)\nLocation_entity2 = Location(\n    name = "Drava"\n)\nLocation_entity3 = Location(\n    name = "Danube"\n)\nLocation_entity4 = Location(\n    name = "Europe"\n)\nLocation_entity5 = Location(\n    name = "Mece"\n)', 'prediction': {'Kopački Rit': 'Location', 'Drava': 'Location', 'Danube': 'Location', 'Europe': 'Location', 'Mece': 'Location'}}
{'idx': 119, 'sentence': 'The name Bilka is believed by many to be a mix of the German Billiges Kaufhaus ( low-price department store ) , which its founder , Herman Salling had encountered during his business trips to West Germany .', 'label': "{'Herman Salling': 'Person', 'Bilka': 'Organization', 'West Germany': 'Location', 'German': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Bilka"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "German"\n)\nOrganization_entity2 = Organization(\n    name = "Billiges Kaufhaus"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Herman Salling"\n)\nLocation_entity1 = Location(\n    name = "West Germany"\n)', 'prediction': {'Bilka': 'Organization', 'German': 'Miscellaneous', 'Billiges Kaufhaus': 'Organization', 'Herman Salling': 'Miscellaneous', 'West Germany': 'Location'}}
{'idx': 120, 'sentence': 'Attended James High School , in Houston .', 'label': "{'James High School': 'Organization', 'Houston': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Houston"\n)\nOrganization_entity1 = Organization(\n    name = "James High School"\n)', 'prediction': {'Houston': 'Location', 'James High School': 'Organization'}}
{'idx': 121, 'sentence': 'Atessis was a member of teams which set school record 30-game winning streak that currently stands as the twelfth-longest in NCAA history and was a three-year letterman and three year starter at left defensive end .', 'label': "{'NCAA': 'Organization', 'Atessis': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Atessis"\n)\nOrganization_entity1 = Organization(\n    name = "NCAA"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "thirty"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "twelfth"\n)', 'prediction': {'Atessis': 'Person', 'NCAA': 'Organization', 'thirty': 'Miscellaneous', 'twelfth': 'Miscellaneous'}}
{'idx': 122, 'sentence': 'Played in the Senior Bowl in Mobile , Alabama , in January 1971 .', 'label': "{'Senior Bowl': 'Miscellaneous', 'Mobile': 'Location', 'Alabama': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Mobile"\n)\nLocation_entity2 = Location(\n    name = "Alabama"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Senior Bowl"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "January 1971"\n)', 'prediction': {'Mobile': 'Location', 'Alabama': 'Location', 'Senior Bowl': 'Miscellaneous', 'January 1971': 'Miscellaneous'}}
{'idx': 123, 'sentence': 'In 2005 was named to the All-Time University of Texas team by the Austin American-Statesman and was named to the Red River Rivalry All-time team by the Fort Worth Star-Telegram , also in 2005 .', 'label': "{'Fort Worth Star-Telegram': 'Organization', 'Austin American-Statesman': 'Organization', 'Red River Rivalry All-time team': 'Organization', 'University of Texas': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "University of Texas"\n)\nOrganization_entity2 = Organization(\n    name = "Austin American-Statesman"\n)\nOrganization_entity3 = Organization(\n    name = "Red River Rivalry"\n)\nOrganization_entity4 = Organization(\n    name = "Fort Worth Star-Telegram"\n)\n\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2005"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'University of Texas': 'Organization', 'Austin American-Statesman': 'Organization', 'Red River Rivalry': 'Organization', 'Fort Worth Star-Telegram': 'Organization', '2005': 'Miscellaneous'}}
{'idx': 124, 'sentence': 'Asked to drop weight and move to outside linebacker , a position he had never played .', 'label': '{}', 'response': 'Person_entity1 = Person(\n    name = "None"\n)\nOrganization_entity1 = Organization(\n    name = "None"\n)\nLocation_entity1 = Location(\n    name = "None"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "None"\n)', 'prediction': {'None': 'Miscellaneous'}}
{'idx': 125, 'sentence': 'Frequently injured , he was on track to shatter the league record for scoring in 1944 when another injury ended his season two points short .', 'label': "{'1944': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "he"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1944"\n)', 'prediction': {'he': 'Person', '1944': 'Miscellaneous'}}
{'idx': 126, 'sentence': 'In 1998 , he was ranked number 53 on The Hockey News list of the 100 Greatest Hockey Players .', 'label': "{'The Hockey News': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "he"\n)\nOrganization_entity1 = Organization(\n    name = "The Hockey News"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1998"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "53"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "100"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "Greatest"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "Players"\n)', 'prediction': {'he': 'Person', 'The Hockey News': 'Organization', '1998': 'Miscellaneous', '53': 'Miscellaneous', '100': 'Miscellaneous', 'Greatest': 'Miscellaneous', 'Players': 'Miscellaneous'}}
{'idx': 127, 'sentence': 'Brampton City Council is the governing body for the City of Brampton , Ontario .', 'label': "{'Ontario': 'Location', 'Brampton City Council': 'Organization', 'City of Brampton': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Brampton City Council"\n)\nLocation_entity1 = Location(\n    name = "Brampton"\n)\nLocation_entity2 = Location(\n    name = "Ontario"\n)', 'prediction': {'Brampton City Council': 'Organization', 'Brampton': 'Location', 'Ontario': 'Location'}}
{'idx': 128, 'sentence': 'The municipality is a part of the administrative municipality of Wörlitze Winkel , which has a seat in the city of Oranienbau .', 'label': "{'Wörlitze Winkel': 'Location', 'Oranienbau': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "municipality"\n)\nOrganization_entity2 = Organization(\n    name = "administrative municipality"\n)\nLocation_entity1 = Location(\n    name = "Wörlitze Winkel"\n)\nLocation_entity2 = Location(\n    name = "Oranienbau"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'municipality': 'Organization', 'administrative municipality': 'Organization', 'Wörlitze Winkel': 'Location', 'Oranienbau': 'Location'}}
{'idx': 129, 'sentence': 'Hinkley Locomotive Works modified their 2-foot gauge Forney design to run boiler first with an extended frame similar to that installed on Sandy River Railroad # 1 following a wreck in early 1882 .', 'label': "{'Sandy River Railroad': 'Location', 'Hinkley Locomotive Works': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Hinkley Locomotive Works"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Forney"\n)\nOrganization_entity2 = Organization(\n    name = "Sandy River Railroad"\n)', 'prediction': {'Hinkley Locomotive Works': 'Organization', 'Forney': 'Miscellaneous', 'Sandy River Railroad': 'Organization'}}
{'idx': 130, 'sentence': 'Original Hinkley locomotives # 1-2 were replaced by # 5-6 of an improved design with pilot wheels .', 'label': "{'Hinkley': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Hinkley"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "locomotives # 1-2"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "pilot wheels"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Hinkley': 'Organization', 'locomotives # 1-2': 'Miscellaneous', 'pilot wheels': 'Miscellaneous'}}
{'idx': 131, 'sentence': 'The first consisted of baggage # 10 , RPO # 25 , and one or two coaches .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "baggage # 10"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "RPO # 25"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "coaches"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'baggage # 10': 'Miscellaneous', 'RPO # 25': 'Miscellaneous', 'coaches': 'Miscellaneous'}}
{'idx': 132, 'sentence': 'Locomotive # 8 was the heaviest locomotive on any 2-foot gauge railway in Maine .', 'label': "{'Maine': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Maine"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Locomotive # 8"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Maine': 'Location', 'Locomotive # 8': 'Miscellaneous'}}
{'idx': 133, 'sentence': 'Milepost 0 : Bridgton Junction - Interchange yard with the Portland and Ogdensburg ( later Maine Central Railroad Mountain Division . )', 'label': "{'Bridgton Junction': 'Location', 'Portland and Ogdensburg': 'Location', 'Maine Central Railroad Mountain Division': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Portland and Ogdensburg"\n)\nOrganization_entity2 = Organization(\n    name = "Maine Central Railroad Mountain Division"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Portland and Ogdensburg': 'Organization', 'Maine Central Railroad Mountain Division': 'Organization'}}
{'idx': 134, 'sentence': 'Milepost 1 : granite masonry arch over Hancock Brook .', 'label': "{'Hancock Brook': 'Location'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Milepost 1"\n)\nLocation_entity1 = Location(\n    name = "Hancock Brook"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Milepost 1': 'Miscellaneous', 'Hancock Brook': 'Location'}}
{'idx': 135, 'sentence': 'Milepost 4.4 : Twin Lake - small flag stop passenger shelter .', 'label': "{'Twin Lake': 'Location'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Milepost 4.4"\n)\nLocation_entity1 = Location(\n    name = "Twin Lake"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "small flag stop passenger shelter"\n)', 'prediction': {'Milepost 4.4': 'Miscellaneous', 'Twin Lake': 'Location', 'small flag stop passenger shelter': 'Miscellaneous'}}
{'idx': 136, 'sentence': "Milepost 9.0 : Perley 's Mills - southbound spur with small flag stop passenger shelter .", 'label': '{"Perley \'s Mills": \'Location\'}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Milepost 9.0"\n)\nLocation_entity1 = Location(\n    name = "Perley \'s Mills"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "southbound spur"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "small flag stop passenger shelter"\n)', 'prediction': {'Milepost 9.0': 'Miscellaneous', "Perley 's Mills": 'Location', 'southbound spur': 'Miscellaneous', 'small flag stop passenger shelter': 'Miscellaneous'}}
{'idx': 137, 'sentence': 'Milepost 15.8 : Bridgton - had the largest population of any village served by the Maine 2-foot gauge railroads .', 'label': "{'Maine': 'Location', 'Bridgton': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Milepost 15.8"\n)\nOrganization_entity1 = Organization(\n    name = "Bridgton"\n)\nLocation_entity2 = Location(\n    name = "Maine"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Milepost 15.8': 'Location', 'Bridgton': 'Organization', 'Maine': 'Location'}}
{'idx': 138, 'sentence': "Milepost 20.7 : Harrison - agent 's station with a passing siding and several southbound spurs serving a freight house , a cannery , a grain store , a 2-track car shed , and a turntable with a single-stall enginehouse .", 'label': "{'Harrison': 'Location'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Milepost 20.7"\n)\nLocation_entity1 = Location(\n    name = "Harrison"\n)\nOrganization_entity1 = Organization(\n    name = "agent\'s station"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "freight house"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "cannery"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "grain store"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "2-track car shed"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "turntable"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "single-stall enginehouse"\n)', 'prediction': {'Milepost 20.7': 'Miscellaneous', 'Harrison': 'Location', "agent's station": 'Organization', 'freight house': 'Miscellaneous', 'cannery': 'Miscellaneous', 'grain store': 'Miscellaneous', '2-track car shed': 'Miscellaneous', 'turntable': 'Miscellaneous', 'single-stall enginehouse': 'Miscellaneous'}}
{'idx': 139, 'sentence': 'The car was sold for use as a restaurant in 1935 .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "car"\n)\nOrganization_entity1 = Organization(\n    name = "restaurant"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1935"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'car': 'Miscellaneous', 'restaurant': 'Organization', '1935': 'Miscellaneous'}}
{'idx': 140, 'sentence': 'Cars # 22 and # 21/14 were the only 2-foot gauge tank cars in Maine .', 'label': "{'Maine': 'Location'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Cars"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "22"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "21/14"\n)\nLocation_entity1 = Location(\n    name = "Maine"\n)', 'prediction': {'Cars': 'Miscellaneous', '22': 'Miscellaneous', '21/14': 'Miscellaneous', 'Maine': 'Location'}}
{'idx': 141, 'sentence': 'It is also a partner in the Masters of Digital Media program run by Great Northern Way Campus Ltd , and rents training space there with several other institutions .', 'label': "{'Great Northern Way Campus Ltd': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Masters of Digital Media program"\n)\nOrganization_entity2 = Organization(\n    name = "Great Northern Way Campus Ltd"\n)', 'prediction': {'Masters of Digital Media program': 'Organization', 'Great Northern Way Campus Ltd': 'Organization'}}
{'idx': 142, 'sentence': 'His manager was future Hall of Famer Bill McKechnie .', 'label': "{'Bill McKechnie': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bill McKechnie"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bill McKechnie': 'Person'}}
{'idx': 143, 'sentence': 'Stan believes that this will destroy his chance for a promotion .', 'label': "{'Stan': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Stan"\n)', 'prediction': {'Stan': 'Person'}}
{'idx': 144, 'sentence': 'At a diner , Bullock calls Hayley a slut , which offends Stan , and the two CIA men get into a lengthy fist-fight ( with some audio-commentary from Klaus ) .', 'label': "{'Stan': 'Person', 'Hayley': 'Person', 'Bullock': 'Person', 'CIA': 'Organization', 'Klaus': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bullock"\n)\nPerson_entity2 = Person(\n    name = "Hayley"\n)\nPerson_entity3 = Person(\n    name = "Stan"\n)\nOrganization_entity1 = Organization(\n    name = "CIA"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Klaus"\n)', 'prediction': {'Bullock': 'Person', 'Hayley': 'Person', 'Stan': 'Person', 'CIA': 'Organization', 'Klaus': 'Miscellaneous'}}
{'idx': 145, 'sentence': 'A parcel just south of it was named Lincoln Park the same year .', 'label': "{'Lincoln Park': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Lincoln Park"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Lincoln Park': 'Location'}}
{'idx': 146, 'sentence': 'Rebuilding of the reservoir to convert it from open-air to covered started in April 2003 and lasted through summer 2005 .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "reservoir"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "April 2003"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "summer 2005"\n)', 'prediction': {'reservoir': 'Location', 'April 2003': 'Miscellaneous', 'summer 2005': 'Miscellaneous'}}
{'idx': 147, 'sentence': 'In 1972 , Caloi introduced the Caloi 10 , which became a cultural landmark and established the name Caloi in Brazil .', 'label': "{'Caloi': 'Organization', 'Caloi 10': 'Miscellaneous', 'Brazil': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Caloi"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Caloi 10"\n)\nLocation_entity1 = Location(\n    name = "Brazil"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Caloi': 'Organization', 'Caloi 10': 'Miscellaneous', 'Brazil': 'Location'}}
{'idx': 148, 'sentence': 'Guido died in 1955 , and the company was directed by his son Bruno Caloi until 1999 .', 'label': "{'Bruno Caloi': 'Person', 'Guido': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Guido"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1955"\n)\nOrganization_entity1 = Organization(\n    name = "Bruno Caloi"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1999"\n)', 'prediction': {'Guido': 'Person', '1955': 'Miscellaneous', 'Bruno Caloi': 'Organization', '1999': 'Miscellaneous'}}
{'idx': 149, 'sentence': 'This tracks comes off their 1998 album , Electro-Shock Blues .', 'label': "{'Electro-Shock Blues': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1998"\n)\nOrganization_entity1 = Organization(\n    name = "Electro-Shock Blues"\n)', 'prediction': {'1998': 'Miscellaneous', 'Electro-Shock Blues': 'Organization'}}
{'idx': 150, 'sentence': 'Savage lives in Saskatchewan .', 'label': "{'Saskatchewan': 'Location', 'Savage': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Savage"\n)\nLocation_entity1 = Location(\n    name = "Saskatchewan"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Savage': 'Person', 'Saskatchewan': 'Location'}}
{'idx': 151, 'sentence': '" She insists on \' a clean sound \' , has banned backing vocals and says her pet hate is \' over-singing \' . "', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "clean sound"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "backing vocals"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "over-singing"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'clean sound': 'Miscellaneous', 'backing vocals': 'Miscellaneous', 'over-singing': 'Miscellaneous'}}
{'idx': 152, 'sentence': 'Because of the power of the drugs the handlers then have to move quickly to secure the animal for transport , monitor its vital signs , protect its eyes and ears , and then inject reversing drugs when needed .', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "handlers"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "drugs"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "animal"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "transport"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "vital signs"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "eyes"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "ears"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "reversing drugs"\n)', 'prediction': {'handlers': 'Organization', 'drugs': 'Miscellaneous', 'animal': 'Miscellaneous', 'transport': 'Miscellaneous', 'vital signs': 'Miscellaneous', 'eyes': 'Miscellaneous', 'ears': 'Miscellaneous', 'reversing drugs': 'Miscellaneous'}}
{'idx': 153, 'sentence': "He began playing in 2001 and has won tournaments in Walsall , Melbourne , Luton and London ( where he won the £500 no limit hold'em event of the 200 British Open , defeating Lucy Rokach in the heads-up confrontation .", 'label': "{'Walsall': 'Location', 'British Open': 'Miscellaneous', 'Luton': 'Location', 'Lucy Rokach': 'Person', 'Melbourne': 'Location', 'London': 'Location', '200': 'Person'}", 'response': 'Location_entity1 = Location(\n    name = "Walsall"\n)\nLocation_entity2 = Location(\n    name = "Melbourne"\n)\nLocation_entity3 = Location(\n    name = "Luton"\n)\nLocation_entity4 = Location(\n    name = "London"\n)\nPerson_entity1 = Person(\n    name = "Lucy Rokach"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2001"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "£500"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "200"\n)\nOrganization_entity1 = Organization(\n    name = "British Open"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Walsall': 'Location', 'Melbourne': 'Location', 'Luton': 'Location', 'London': 'Location', 'Lucy Rokach': 'Person', '2001': 'Miscellaneous', '£500': 'Miscellaneous', '200': 'Miscellaneous', 'British Open': 'Organization'}}
{'idx': 154, 'sentence': 'Citrone eventually served approximately twelve months for the offence and was ordered to pay some £370,000 as part of a Confiscation Order ordered in favour of the Crown .', 'label': "{'Crown': 'Organization', 'Citrone': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Citrone"\n)\nOrganization_entity1 = Organization(\n    name = "Crown"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Citrone': 'Person', 'Crown': 'Organization'}}
{'idx': 155, 'sentence': 'As of 2007 his total live tournament winnings exceed $670,000 .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "2007"\n)\nPerson_entity1 = Person(\n    name = "his"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "total live tournament winnings"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "$670,000"\n)', 'prediction': {'2007': 'Miscellaneous', 'his': 'Person', 'total live tournament winnings': 'Miscellaneous', '$670,000': 'Miscellaneous'}}
{'idx': 156, 'sentence': 'Carmen Cavallaro ( May 6 , 1913 -- October 12 , 1989 ) was an American pianist born in New York .', 'label': "{'American': 'Miscellaneous', 'New York': 'Location', 'Carmen Cavallaro': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Carmen Cavallaro"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "May 6"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1913"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "October 12"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "1989"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "American"\n)\nLocation_entity1 = Location(\n    name = "New York"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Carmen Cavallaro': 'Person', 'May 6': 'Miscellaneous', '1913': 'Miscellaneous', 'October 12': 'Miscellaneous', '1989': 'Miscellaneous', 'American': 'Miscellaneous', 'New York': 'Location'}}
{'idx': 157, 'sentence': "After four years he switched to a series of other big bands , including Rudy Vallee 's in 1937 .", 'label': "{'Rudy Vallee': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Rudy Vallee"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1937"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Rudy Vallee': 'Organization', '1937': 'Miscellaneous'}}
{'idx': 158, 'sentence': 'Cavallaro developed a piano style of glittering and rippling arpeggios to augment his melody , which was often arranged in thick and lush triple and quadruple octave chords .', 'label': "{'Cavallaro': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Cavallaro"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "piano"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "arpeggios"\n)\nPerson_entity2 = Person(\n    name = "melody"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "triple"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "quadruple"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "octave chords"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Cavallaro': 'Person', 'piano': 'Miscellaneous', 'arpeggios': 'Miscellaneous', 'melody': 'Person', 'triple': 'Miscellaneous', 'quadruple': 'Miscellaneous', 'octave chords': 'Miscellaneous'}}
{'idx': 159, 'sentence': "His most celebrated film achievement was playing the piano music for actor Tyrone Power 's hands to mime , in The Eddy Duchin Story ( 1956 ) .", 'label': "{'Tyrone Power': 'Person', 'The Eddy Duchin Story': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Tyrone Power"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "The Eddy Duchin Story"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1956"\n)', 'prediction': {'Tyrone Power': 'Person', 'The Eddy Duchin Story': 'Miscellaneous', '1956': 'Miscellaneous'}}
{'idx': 160, 'sentence': 'At the time , his father had bought tickets to a Buddy Rich concert and could not find someone to watch his son , so he took young Carter along to the show .', 'label': "{'Buddy Rich': 'Person', 'Carter': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Buddy Rich"\n)\nPerson_entity2 = Person(\n    name = "Carter"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Buddy Rich': 'Person', 'Carter': 'Person'}}
{'idx': 161, 'sentence': "Secrets would perform throughout Virginia , often at Miller's , the bar in Charlottesville where Dave Matthews worked as a bartender .", 'label': '{\'Dave Matthews\': \'Person\', \'Charlottesville\': \'Location\', "Miller\'s": \'Organization\', \'Virginia\': \'Location\'}', 'response': 'Location_entity1 = Location(\n    name = "Virginia"\n)\nOrganization_entity1 = Organization(\n    name = "Miller\'s"\n)\nLocation_entity2 = Location(\n    name = "Charlottesville"\n)\nPerson_entity1 = Person(\n    name = "Dave Matthews"\n)', 'prediction': {'Virginia': 'Location', "Miller's": 'Organization', 'Charlottesville': 'Location', 'Dave Matthews': 'Person'}}
{'idx': 162, 'sentence': 'With his second wife , Karen , he has two children : a daughter , Nadja Angelique Beauford born October 5th 2001 and a son Marcus Carrington Beauford born in December 2004 .', 'label': "{'Karen': 'Person', 'October 5th 2001': 'Person', 'Marcus Carrington Beauford': 'Person', 'Nadja Angelique Beauford': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Karen"\n)\nPerson_entity2 = Person(\n    name = "Nadja Angelique Beauford"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "October 5th 2001"\n)\nPerson_entity3 = Person(\n    name = "Marcus Carrington Beauford"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "December 2004"\n)', 'prediction': {'Karen': 'Person', 'Nadja Angelique Beauford': 'Person', 'October 5th 2001': 'Miscellaneous', 'Marcus Carrington Beauford': 'Person', 'December 2004': 'Miscellaneous'}}
{'idx': 163, 'sentence': "In 1991 , the mall expanded , adding a food court and three new anchors : Thalhimer's , JC Penney , and Sears , and was renamed Cary Towne Center .", 'label': '{\'Cary Towne Center\': \'Organization\', "Thalhimer\'s": \'Organization\', \'Sears\': \'Organization\', \'JC Penney\': \'Organization\'}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1991"\n)\nOrganization_entity1 = Organization(\n    name = "Thalhimer\'s"\n)\nOrganization_entity2 = Organization(\n    name = "JC Penney"\n)\nOrganization_entity3 = Organization(\n    name = "Sears"\n)\nOrganization_entity4 = Organization(\n    name = "Cary Towne Center"\n)', 'prediction': {'1991': 'Miscellaneous', "Thalhimer's": 'Organization', 'JC Penney': 'Organization', 'Sears': 'Organization', 'Cary Towne Center': 'Organization'}}
{'idx': 164, 'sentence': 'Cable systems in the early 1980s had far more limited channel capacity than they do today ( usually only a few dozen channels in most cities ) .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Cable systems"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1980s"\n)\nLocation_entity1 = Location(\n    name = "cities"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Cable systems': 'Miscellaneous', '1980s': 'Miscellaneous', 'cities': 'Location'}}
{'idx': 165, 'sentence': 'Centennial Tower and PlazaCenter are next door .', 'label': "{'PlazaCenter': 'Organization', 'Centennial Tower': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "Centennial Tower"\n)\nOrganization_entity1 = Organization(\n    name = "PlazaCenter"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Centennial Tower': 'Location', 'PlazaCenter': 'Organization'}}
{'idx': 166, 'sentence': 'He played in Single A in 2002 and recorded a 2.26 ERA which ranked him 10th in all of minor league baseball .', 'label': "{'Single A': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Single A"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2002"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2.26 ERA"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "10th"\n)\nOrganization_entity2 = Organization(\n    name = "minor league baseball"\n)', 'prediction': {'Single A': 'Organization', '2002': 'Miscellaneous', '2.26 ERA': 'Miscellaneous', '10th': 'Miscellaneous', 'minor league baseball': 'Organization'}}
{'idx': 167, 'sentence': 'On December 12 , 2004 , Gaudin was traded to the Toronto Blue Jays for backup catcher Kevin Cash .', 'label': "{'Gaudin': 'Person', 'Toronto Blue Jays': 'Organization', 'Kevin Cash': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Toronto Blue Jays"\n)\nPerson_entity1 = Person(\n    name = "Gaudin"\n)\nPerson_entity2 = Person(\n    name = "Kevin Cash"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Toronto Blue Jays': 'Organization', 'Gaudin': 'Person', 'Kevin Cash': 'Person'}}
{'idx': 168, 'sentence': 'In his first season as an Athletic , he posted various career highs and his ERA ( 3.09 ) and opponents batting average were the lowest of his career .', 'label': "{'Athletic': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Athletic"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "ERA"\n)', 'prediction': {'Athletic': 'Organization', 'ERA': 'Miscellaneous'}}
{'idx': 169, 'sentence': 'The language is of the Chamicuro people who number between 10 and 20 .', 'label': "{'Chamicuro': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Chamicuro"\n)\nOrganization_entity1 = Organization(\n    name = "people"\n)', 'prediction': {'Chamicuro': 'Miscellaneous', 'people': 'Organization'}}
{'idx': 170, 'sentence': 'Champdor is a commune in the French département of Ai .', 'label': "{'Ai': 'Location', 'Champdor': 'Location', 'French': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Champdor"\n)\nLocation_entity2 = Location(\n    name = "Ai"\n)\nOrganization_entity1 = Organization(\n    name = "French"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Champdor': 'Location', 'Ai': 'Location', 'French': 'Organization'}}
{'idx': 171, 'sentence': 'Charan Jeath Singh is a Fiji Indian who has been involved in local Government and national politics in Fiji representing various political organisations .', 'label': "{'Charan Jeath Singh': 'Person', 'Indian': 'Miscellaneous', 'Fiji': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Charan Jeath Singh"\n)\nLocation_entity1 = Location(\n    name = "Fiji"\n)\nOrganization_entity1 = Organization(\n    name = "local Government"\n)\nOrganization_entity2 = Organization(\n    name = "national politics"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Charan Jeath Singh': 'Person', 'Fiji': 'Location', 'local Government': 'Organization', 'national politics': 'Organization'}}
{'idx': 172, 'sentence': 'In the 2006 general election , he contested the Vanua Levu West Indian Communal Constituency , Fiji ) for the National Alliance Party ( NAPF ) and again lost with only 14% of the votes cast .', 'label': "{'NAPF': 'Organization', 'Vanua Levu West Indian': 'Location', 'Fiji': 'Location', 'National Alliance Party': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "National Alliance Party"\n)\nLocation_entity1 = Location(\n    name = "Fiji"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'National Alliance Party': 'Organization', 'Fiji': 'Location'}}
{'idx': 173, 'sentence': 'After just a year at Coburg he returned to the league and played with North Melbourne , becoming a regular in their side during the 1930s .', 'label': "{'Coburg': 'Organization', 'North Melbourne': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "Coburg"\n)\nOrganization_entity1 = Organization(\n    name = "North Melbourne"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1930s"\n)', 'prediction': {'Coburg': 'Person', 'North Melbourne': 'Organization', '1930s': 'Miscellaneous'}}
{'idx': 174, 'sentence': 'It has been used as a political prison by Germans during the occupation of France from 1940 to 1944 .', 'label': "{'Germans': 'Miscellaneous', 'France': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Germans"\n)\nLocation_entity1 = Location(\n    name = "France"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1940"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1944"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Germans': 'Organization', 'France': 'Location', '1940': 'Miscellaneous', '1944': 'Miscellaneous'}}
{'idx': 175, 'sentence': 'Christopher Bailey is a lecturer of English at the University of Brighton and is an occasional screenwriter for television .', 'label': "{'University of Brighton': 'Organization', 'Christopher Bailey': 'Person', 'English': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Christopher Bailey"\n)\nOrganization_entity1 = Organization(\n    name = "University of Brighton"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Christopher Bailey': 'Person', 'University of Brighton': 'Organization'}}
{'idx': 176, 'sentence': "As a result , the two Mara scripts were Bailey 's final broadcast work for both Doctor Who and television in general and he returned to a career in academia .", 'label': "{'Doctor Who': 'Miscellaneous', 'Bailey': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bailey"\n)\nOrganization_entity1 = Organization(\n    name = "Doctor Who"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Mara scripts"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "television"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "academia"\n)', 'prediction': {'Bailey': 'Person', 'Doctor Who': 'Organization', 'Mara scripts': 'Miscellaneous', 'television': 'Miscellaneous', 'academia': 'Miscellaneous'}}
{'idx': 177, 'sentence': 'After a twenty minute stand-off he aimed the pistol at Lieutenant Michael Weippert , who responded by opening fire .', 'label': "{'Michael Weippert': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Lieutenant Michael Weippert"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Lieutenant Michael Weippert': 'Person'}}
{'idx': 178, 'sentence': 'The Orlando Sentinel reported that Ralph Penley was not told of events until after his son was shot .', 'label': "{'Ralph Penley': 'Person', 'Orlando Sentinel': 'Organization'}", 'response': 'Person_entity1 = Person(\n    name = "Ralph Penley"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ralph Penley': 'Person'}}
{'idx': 179, 'sentence': 'It remained on the F1 calendar for 30 out of the next 34 years .', 'label': "{'F1': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "F1"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'F1': 'Organization'}}
{'idx': 180, 'sentence': 'The most famous corner in the circuit is the Tarzanbocht ( Tarzan corner ) which provides excellent overtaking opportunities .', 'label': "{'Tarzan corner': 'Location', 'Tarzanbocht': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Tarzan"\n)', 'prediction': {'Tarzan': 'Person'}}
{'idx': 181, 'sentence': "This was later converted to NASCAR 4 , NASCAR 2002 , 2003 and other simulations using a converter from website ' The Pits ' .", 'label': "{'NASCAR 4': 'Miscellaneous', 'NASCAR 2002': 'Miscellaneous', 'The Pits': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "NASCAR"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "4"\n)\nOrganization_entity2 = Organization(\n    name = "NASCAR 2002"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2003"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "simulations"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "converter"\n)\nOrganization_entity3 = Organization(\n    name = "website \' The Pits \'"\n)', 'prediction': {'NASCAR': 'Organization', '4': 'Miscellaneous', 'NASCAR 2002': 'Organization', '2003': 'Miscellaneous', 'simulations': 'Miscellaneous', 'converter': 'Miscellaneous', "website ' The Pits '": 'Organization'}}
{'idx': 182, 'sentence': 'Clergoux is a village and commune in the Corrèz département of central Franc .', 'label': "{'Franc': 'Location', 'Clergoux': 'Location', 'Corrèz': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Clergoux"\n)\nLocation_entity2 = Location(\n    name = "Corrèz"\n)\nLocation_entity3 = Location(\n    name = "Franc"\n)', 'prediction': {'Clergoux': 'Location', 'Corrèz': 'Location', 'Franc': 'Location'}}
{'idx': 183, 'sentence': 'Clinical Hospital Mostar ( Croatian Klinička bolnica Mostar ) is the largest hospital in Mostar , Bosnia and Herzegovina .', 'label': "{'Mostar': 'Location', 'Clinical Hospital Mostar': 'Organization', 'Croatian': 'Miscellaneous', 'Bosnia and Herzegovina': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Clinical Hospital Mostar"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Croatian Klinička bolnica Mostar"\n)\nLocation_entity1 = Location(\n    name = "Mostar"\n)\nLocation_entity2 = Location(\n    name = "Bosnia and Herzegovina"\n)', 'prediction': {'Clinical Hospital Mostar': 'Organization', 'Croatian Klinička bolnica Mostar': 'Miscellaneous', 'Mostar': 'Location', 'Bosnia and Herzegovina': 'Location'}}
{'idx': 184, 'sentence': 'The Cold Spring Harbor Laboratory ( CSHL ) is a private , non-profit institution with research programs focusing on cancer , neurobiology , plant genetics , genomics and bioinformatics .', 'label': "{'CSHL': 'Organization', 'Cold Spring Harbor Laboratory': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Cold Spring Harbor Laboratory"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "CSHL"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "cancer"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "neurobiology"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "plant genetics"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "genomics"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "bioinformatics"\n)', 'prediction': {'Cold Spring Harbor Laboratory': 'Organization', 'CSHL': 'Miscellaneous', 'cancer': 'Miscellaneous', 'neurobiology': 'Miscellaneous', 'plant genetics': 'Miscellaneous', 'genomics': 'Miscellaneous', 'bioinformatics': 'Miscellaneous'}}
{'idx': 185, 'sentence': "The Carnegie Institution Department of Genetics scientists at Cold Spring Harbor made innumerable contributions to the sciences of genetics , medicine , and the then-infant science of molecular biology , and in 1962 its facilities merged with those of The Brooklyn Institute 's Biological Laboratory to create what is known today as Cold Spring Harbor Laboratory .", 'label': "{'Cold Spring Harbor Laboratory': 'Organization', 'Carnegie Institution Department of Genetics': 'Organization', 'Cold Spring Harbor': 'Organization', 'The Brooklyn Institute': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Carnegie Institution Department of Genetics"\n)\nLocation_entity1 = Location(\n    name = "Cold Spring Harbor"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1962"\n)\nOrganization_entity2 = Organization(\n    name = "Brooklyn Institute"\n)\nOrganization_entity3 = Organization(\n    name = "Biological Laboratory"\n)\nOrganization_entity4 = Organization(\n    name = "Cold Spring Harbor Laboratory"\n)', 'prediction': {'Carnegie Institution Department of Genetics': 'Organization', 'Cold Spring Harbor': 'Location', '1962': 'Miscellaneous', 'Brooklyn Institute': 'Organization', 'Biological Laboratory': 'Organization', 'Cold Spring Harbor Laboratory': 'Organization'}}
{'idx': 186, 'sentence': 'Currently , cancer biologist Bruce Stillman serves as laboratory President .', 'label': "{'Bruce Stillman': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bruce Stillman"\n)\nOrganization_entity1 = Organization(\n    name = "laboratory"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bruce Stillman': 'Person', 'laboratory': 'Organization'}}
{'idx': 187, 'sentence': 'Aside from its scientific mission , the laboratory is host to world-class scientific conferences on a variety of topics .', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "laboratory"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'laboratory': 'Organization'}}
{'idx': 188, 'sentence': 'Salvador Luria and Max Delbrüc founded the Phage Course in 1948 , a course that trained many of the leaders of the new field of molecular genetics .', 'label': "{'Salvador Luria': 'Person', 'Max Delbrüc': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Salvador Luria"\n)\nPerson_entity2 = Person(\n    name = "Max Delbrüc"\n)\nOrganization_entity1 = Organization(\n    name = "Phage Course"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1948"\n)', 'prediction': {'Salvador Luria': 'Person', 'Max Delbrüc': 'Person', 'Phage Course': 'Organization', '1948': 'Miscellaneous'}}
{'idx': 189, 'sentence': 'It is part of the Coleman Federal Correctional Complex .', 'label': "{'Coleman Federal Correctional Complex': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Coleman Federal Correctional Complex"\n)', 'prediction': {'Coleman Federal Correctional Complex': 'Location'}}
{'idx': 190, 'sentence': 'Held since 1990 , the tournament is played on outdoor hardcourts .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1990"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "tournament"\n)\nLocation_entity1 = Location(\n    name = "outdoor hardcourts"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'1990': 'Miscellaneous', 'tournament': 'Miscellaneous', 'outdoor hardcourts': 'Location'}}
{'idx': 191, 'sentence': 'Later it became a 6/40 game .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "6/40"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'6/40': 'Miscellaneous'}}
{'idx': 192, 'sentence': 'Top-prize winners choose lump sum or annuity within 60 days of claiming the jackpot .', 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "Top-prize winners"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "lump sum"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "annuity"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "60 days"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "jackpot"\n)', 'prediction': {'Top-prize winners': 'Organization', 'lump sum': 'Miscellaneous', 'annuity': 'Miscellaneous', '60 days': 'Miscellaneous', 'jackpot': 'Miscellaneous'}}
{'idx': 193, 'sentence': 'A Classic Lotto jackpot of $3.5 million ( annuity ) on a ticket bought in February 2006 went unclaimed .', 'label': "{'Classic Lotto': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Classic Lotto"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "February 2006"\n)', 'prediction': {'Classic Lotto': 'Miscellaneous', 'February 2006': 'Miscellaneous'}}
{'idx': 194, 'sentence': 'It is currently served by the South West Trains , Southern , and First Great Western train operating companies .', 'label': "{'First Great Western': 'Organization', 'South West Trains': 'Organization', 'Southern': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "South West Trains"\n)\nOrganization_entity2 = Organization(\n    name = "Southern"\n)\nOrganization_entity3 = Organization(\n    name = "First Great Western"\n)', 'prediction': {'South West Trains': 'Organization', 'Southern': 'Organization', 'First Great Western': 'Organization'}}
{'idx': 195, 'sentence': 'Crazyhead are an English punk rock / garage rock band from Leicester .', 'label': "{'Crazyhead': 'Organization', 'English': 'Miscellaneous', 'Leicester': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Crazyhead"\n)\nLocation_entity1 = Location(\n    name = "Leicester"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Crazyhead': 'Organization', 'Leicester': 'Location'}}
{'idx': 196, 'sentence': 'Their second single " Baby Turpentine " reached number 4 in the Indie Chart .', 'label': "{'Baby Turpentine': 'Miscellaneous', 'Indie Chart': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Baby Turpentine"\n)\nOrganization_entity1 = Organization(\n    name = "Indie Chart"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Baby Turpentine': 'Miscellaneous', 'Indie Chart': 'Organization'}}
{'idx': 197, 'sentence': 'Later that year they played at the Namibian Independence Day concert to an audience of 50,000 .', 'label': "{'Namibian Independence Day concert': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Namibian Independence Day concert"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Namibian Independence Day concert': 'Location'}}
{'idx': 198, 'sentence': 'They started recording material for a new album , but the departure of Anderson to work abroad meant the end of the band .', 'label': "{'Anderson': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "band"\n)\nPerson_entity1 = Person(\n    name = "Anderson"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'band': 'Organization', 'Anderson': 'Person'}}
{'idx': 199, 'sentence': 'The partnership went public in 1994 , trading under the stock symbol CRO on the New York Stock Exchange .', 'label': "{'New York Stock Exchange': 'Organization'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1994"\n)\nOrganization_entity1 = Organization(\n    name = "CRO"\n)\nLocation_entity1 = Location(\n    name = "New York Stock Exchange"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'1994': 'Miscellaneous', 'CRO': 'Organization', 'New York Stock Exchange': 'Location'}}
{'idx': 200, 'sentence': 'He was born in Humberstone Township in 1825 , the son of John Near , and grew up there .', 'label': "{'John Near': 'Person', 'Humberstone Township': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Humberstone Township"\n)\nPerson_entity1 = Person(\n    name = "John Near"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Humberstone Township': 'Location', 'John Near': 'Person'}}
{'idx': 201, 'sentence': 'Prodan won five consecutive league titles with Steaua before moving to play in Spain .', 'label': "{'Spain': 'Location', 'Steaua': 'Organization', 'Prodan': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Steaua"\n)\nLocation_entity1 = Location(\n    name = "Spain"\n)', 'prediction': {'Steaua': 'Organization', 'Spain': 'Location'}}
{'idx': 202, 'sentence': 'He specialises in algebra and group theory .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "algebra"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "group theory"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'algebra': 'Miscellaneous', 'group theory': 'Miscellaneous'}}
{'idx': 203, 'sentence': 'It was released in 2003 on Aftermath Records .', 'label': "{'Aftermath Records': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Aftermath Records"\n)\n\nMiscellaneous_entity1 = Miscellaneous(\n    name = "2003"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Aftermath Records': 'Organization', '2003': 'Miscellaneous'}}
{'idx': 204, 'sentence': "The band 's music has been described as electro / synthpop with a slightly sombre overtone and introverted lyrical sensibility .", 'label': '{}', 'response': 'Organization_entity1 = Organization(\n    name = "band"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "music"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "electro"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "synthpop"\n)', 'prediction': {'band': 'Organization', 'music': 'Miscellaneous', 'electro': 'Miscellaneous', 'synthpop': 'Miscellaneous'}}
{'idx': 205, 'sentence': 'The band were recently selected to play on the 6th series of the acclaimed RTÉ music show Other Voices .', 'label': "{'RTÉ': 'Organization', 'Other Voices': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "RTÉ"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Other Voices"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'RTÉ': 'Organization', 'Other Voices': 'Miscellaneous'}}
{'idx': 206, 'sentence': 'The start was given in 1990 with the first Cyrillic fonts in the PostScript format , the first Laser printer with in - built Cyrillic fonts in 1991 and the first professional program for complete Cyrillic support under MS Windows - the Flex Type - in 1992 .', 'label': "{'Cyrillic': 'Miscellaneous', 'MS': 'Organization', 'Windows': 'Miscellaneous', 'Flex Type': 'Miscellaneous', 'PostScript': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1990"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "PostScript"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "1991"\n)\nOrganization_entity1 = Organization(\n    name = "MS Windows"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "Flex Type"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "1992"\n)', 'prediction': {'1990': 'Miscellaneous', 'PostScript': 'Miscellaneous', '1991': 'Miscellaneous', 'MS Windows': 'Organization', 'Flex Type': 'Miscellaneous', '1992': 'Miscellaneous'}}
{'idx': 207, 'sentence': 'In only a few years - and 100 000 devices sold in 11 countries around the World - Datecs became the best known brand of electronic cash registers with fiscal memory in Central and Eastern Europe .', 'label': "{'Central and Eastern Europe': 'Location', 'Datecs': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Datecs"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "World"\n)\nLocation_entity1 = Location(\n    name = "Central and Eastern Europe"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Datecs': 'Organization', 'World': 'Miscellaneous', 'Central and Eastern Europe': 'Location'}}
{'idx': 208, 'sentence': 'Snoke received his PhD in physics from the University of Illinois at Urbana-Champaign .', 'label': "{'Urbana-Champaign': 'Location', 'University of Illinois': 'Organization', 'Snoke': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Snoke"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "PhD"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "physics"\n)\nOrganization_entity1 = Organization(\n    name = "University of Illinois at Urbana-Champaign"\n)', 'prediction': {'Snoke': 'Person', 'PhD': 'Miscellaneous', 'physics': 'Miscellaneous', 'University of Illinois at Urbana-Champaign': 'Organization'}}
{'idx': 209, 'sentence': "In 2004 co-authored an article , with Michael Behe , a senior fellow of the Discovery Institute 's Center for Science and Culture , in the scientific journal Protein Science , which received widespread criticism .", 'label': "{'Center for Science and Culture': 'Organization', 'Discovery Institute': 'Organization', 'Protein Science': 'Organization', 'Michael Behe': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Michael Behe"\n)\nOrganization_entity1 = Organization(\n    name = "Discovery Institute"\n)\nOrganization_entity2 = Organization(\n    name = "Center for Science and Culture"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Protein Science"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Michael Behe': 'Person', 'Discovery Institute': 'Organization', 'Center for Science and Culture': 'Organization', 'Protein Science': 'Miscellaneous'}}
{'idx': 210, 'sentence': 'In his ruling , Judge Jones noted that " A review of the article indicates that it does not mention either irreducible complexity or ID .', 'label': "{'Jones': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Judge Jones"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Judge Jones': 'Person'}}
{'idx': 211, 'sentence': 'Davis Gym could hold around 1,100 people .', 'label': "{'Davis Gym': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Davis Gym"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Davis Gym': 'Organization'}}
{'idx': 212, 'sentence': 'In return Magedson filed a lawsuit under RICO .', 'label': "{'RICO': 'Miscellaneous', 'Magedson': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "RICO"\n)\nPerson_entity1 = Person(\n    name = "Magedson"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'RICO': 'Organization', 'Magedson': 'Person'}}
{'idx': 213, 'sentence': "A descendant of farmer immigrants from Bentheim , Germany , Langejans was born and raised in Holland , Michigan , where his luthier shop keeps him busy building guitars for such notable musicians as Thom Bresh ( Merle Travis 's son ) and Jars of Clay .", 'label': "{'Thom Bresh': 'Person', 'Germany': 'Location', 'Merle Travis': 'Person', 'Langejans': 'Person', 'Holland': 'Location', 'Jars of Clay': 'Organization', 'Bentheim': 'Location', 'Michigan': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Langejans"\n)\nLocation_entity1 = Location(\n    name = "Bentheim"\n)\nLocation_entity2 = Location(\n    name = "Germany"\n)\nLocation_entity3 = Location(\n    name = "Holland"\n)\nLocation_entity4 = Location(\n    name = "Michigan"\n)\nPerson_entity2 = Person(\n    name = "Thom Bresh"\n)\nPerson_entity3 = Person(\n    name = "Merle Travis"\n)\nOrganization_entity1 = Organization(\n    name = "Jars of Clay"\n)', 'prediction': {'Langejans': 'Person', 'Bentheim': 'Location', 'Germany': 'Location', 'Holland': 'Location', 'Michigan': 'Location', 'Thom Bresh': 'Person', 'Merle Travis': 'Person', 'Jars of Clay': 'Organization'}}
{'idx': 214, 'sentence': 'He has made over 1200 guitars as of 2006 , many of them custom-made-to-order , putting Langejans guitars in the hands of numerous stars from all genre of music .', 'label': "{'Langejans': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Langejans guitars"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Langejans guitars': 'Organization'}}
{'idx': 215, 'sentence': 'The standard production time is generally one year .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "one year"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'one year': 'Miscellaneous'}}
{'idx': 216, 'sentence': 'I Dewa Gede Budjana or Dewa Budjana ( born August 30 , 1963 in Waikabubak ) is an Indonesian guitarist , songwriter and composer .', 'label': "{'Waikabubak': 'Location', 'Dewa Budjana': 'Person', 'I Dewa Gede Budjana': 'Person', 'Indonesian': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Dewa Gede Budjana"\n)\nPerson_entity2 = Person(\n    name = "Dewa Budjana"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "August 30 , 1963"\n)\nLocation_entity1 = Location(\n    name = "Waikabubak"\n)\nOrganization_entity1 = Organization(\n    name = "Indonesian"\n)', 'prediction': {'Dewa Gede Budjana': 'Person', 'Dewa Budjana': 'Person', 'August 30 , 1963': 'Miscellaneous', 'Waikabubak': 'Location', 'Indonesian': 'Organization'}}
{'idx': 217, 'sentence': "Budjana 's passion and talent in music , especially guitar , has been very dominant since he was in an elementary school in Klungkung , Bali .", 'label': "{'Klungkung': 'Location', 'Bali': 'Location', 'Budjana': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Budjana"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "music"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "guitar"\n)\nLocation_entity1 = Location(\n    name = "Klungkung"\n)\nLocation_entity2 = Location(\n    name = "Bali"\n)', 'prediction': {'Budjana': 'Person', 'music': 'Miscellaneous', 'guitar': 'Miscellaneous', 'Klungkung': 'Location', 'Bali': 'Location'}}
{'idx': 218, 'sentence': "In 1976 , when he was thirteen , Budjana 's name started to be seen in the music world in Surabaya .", 'label': "{'Budjana': 'Person', 'Surabaya': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Budjana"\n)\nLocation_entity1 = Location(\n    name = "Surabaya"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Budjana': 'Person', 'Surabaya': 'Location'}}
{'idx': 219, 'sentence': 'One year after that , Budjana decided to fly to Jakarta in order to expand his music career .', 'label': "{'Budjana': 'Person', 'Jakarta': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "Budjana"\n)\nLocation_entity1 = Location(\n    name = "Jakarta"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Budjana': 'Person', 'Jakarta': 'Location'}}
{'idx': 220, 'sentence': 'His current band , Gigi , was formed in 1994 with Baron ( guitar ) , Thomas ( bass ) , Armand ( vocal ) and Ronald ( drum ) .', 'label': "{'Ronald': 'Person', 'Gigi': 'Organization', 'Armand': 'Person', 'Baron': 'Person', 'Thomas': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "Gigi"\n)\nPerson_entity1 = Person(\n    name = "Baron"\n)\nPerson_entity2 = Person(\n    name = "Thomas"\n)\nPerson_entity3 = Person(\n    name = "Armand"\n)\nPerson_entity4 = Person(\n    name = "Ronald"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Gigi': 'Organization', 'Baron': 'Person', 'Thomas': 'Person', 'Armand': 'Person', 'Ronald': 'Person'}}
{'idx': 221, 'sentence': "Spain allied with France during the Seven Years ' War against Great Britain .", 'label': '{\'Great Britain\': \'Location\', \'France\': \'Location\', \'Spain\': \'Location\', "Seven Years \' War": \'Miscellaneous\'}', 'response': 'Organization_entity1 = Organization(\n    name = "Spain"\n)\nOrganization_entity2 = Organization(\n    name = "France"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Seven Years \' War"\n)\nOrganization_entity3 = Organization(\n    name = "Great Britain"\n)', 'prediction': {'Spain': 'Organization', 'France': 'Organization', "Seven Years ' War": 'Miscellaneous', 'Great Britain': 'Organization'}}
{'idx': 222, 'sentence': 'The British force never materialized .', 'label': "{'British': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "British force"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'British force': 'Organization'}}
{'idx': 223, 'sentence': 'She fled again to Abra , where she was captured .', 'label': "{'Abra': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Abra"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Abra': 'Location'}}
{'idx': 224, 'sentence': 'Digilogue is a music album of recordings which became the twentieth commercial release by the British avant-garde music group : zoviet*france : .', 'label': "{'British': 'Miscellaneous', 'zoviet*france': 'Organization', 'Digilogue': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "zoviet*france"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'zoviet*france': 'Organization'}}
{'idx': 225, 'sentence': 'digilogue was recorded using a mixture of failing analogue equipment and high-end digital equipment , and monitored in our studio exclusively on damaged hi-fi speakers .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "digilogue"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "analogue"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "digital"\n)\nOrganization_entity1 = Organization(\n    name = "studio"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "hi-fi speakers"\n)', 'prediction': {'digilogue': 'Miscellaneous', 'analogue': 'Miscellaneous', 'digital': 'Miscellaneous', 'studio': 'Organization', 'hi-fi speakers': 'Miscellaneous'}}
{'idx': 226, 'sentence': '1996 edition', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1996 edition"\n)', 'prediction': {'1996 edition': 'Miscellaneous'}}
{'idx': 227, 'sentence': "The island of Divar ( Divar-derived from the word Dipavati or ' small Island ' in Konkani ) lies in the state of Goa , India .", 'label': "{'Goa': 'Location', 'Konkani': 'Miscellaneous', 'Divar': 'Location', 'India': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Divar"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Dipavati"\n)\nLocation_entity2 = Location(\n    name = "Goa"\n)\nLocation_entity3 = Location(\n    name = "India"\n)', 'prediction': {'Divar': 'Location', 'Dipavati': 'Miscellaneous', 'Goa': 'Location', 'India': 'Location'}}
{'idx': 228, 'sentence': 'Though in a manner equally typical of modern Goa , of late the paddy fields lie fallow and overrun with weeds .', 'label': "{'Goa': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Goa"\n)', 'prediction': {'Goa': 'Location'}}
{'idx': 229, 'sentence': 'It was destroyed by the sultan of the Deccan in the middle of the 14th century and reconstructed at the same locality by Madhav Mantri of Vijaynagar at the close of the same century .', 'label': "{'Vijaynagar': 'Location', 'Madhav Mantri': 'Person', 'Deccan': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Deccan"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "14th century"\n)\nPerson_entity1 = Person(\n    name = "Madhav Mantri"\n)\nOrganization_entity2 = Organization(\n    name = "Vijaynagar"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "same century"\n)', 'prediction': {'Deccan': 'Organization', '14th century': 'Miscellaneous', 'Madhav Mantri': 'Person', 'Vijaynagar': 'Organization', 'same century': 'Miscellaneous'}}
{'idx': 230, 'sentence': 'And on the foundations of the same temple a prayer and catechism house was constructed in 1563 , which was later transformed into the chapel of Our Lady of Cande laria . "', 'label': "{'Our Lady of Cande laria': 'Person'}", 'response': 'Location_entity1 = Location(\n    name = "temple"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "prayer"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "catechism house"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "1563"\n)\nOrganization_entity1 = Organization(\n    name = "chapel"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "Our Lady of Cande laria"\n)', 'prediction': {'temple': 'Location', 'prayer': 'Miscellaneous', 'catechism house': 'Miscellaneous', '1563': 'Miscellaneous', 'chapel': 'Organization', 'Our Lady of Cande laria': 'Miscellaneous'}}
{'idx': 231, 'sentence': 'Bonderam Festival : The festival is a memoir to the dispute and the fury of the Villagers over the Portuguese system of resolving the disputes .', 'label': "{'Bonderam Festival': 'Miscellaneous', 'Portuguese': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Bonderam Festival"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Portuguese"\n)', 'prediction': {'Bonderam Festival': 'Miscellaneous', 'Portuguese': 'Miscellaneous'}}
{'idx': 232, 'sentence': 'Each section of the village has a float at the parade .', 'label': '{}', 'response': 'Location_entity1 = Location(\n    name = "village"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "float"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "parade"\n)', 'prediction': {'village': 'Location', 'float': 'Miscellaneous', 'parade': 'Miscellaneous'}}
{'idx': 233, 'sentence': 'Unfortunately though , every time the bell was struck , it shattered the windows of the church and the houses in the vicinity , so a deal was struck and the bell was exchanged with that of the Se Cathedral .', 'label': "{'Se Cathedral': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "church"\n)\nLocation_entity2 = Location(\n    name = "houses"\n)\nLocation_entity3 = Location(\n    name = "vicinity"\n)\nOrganization_entity1 = Organization(\n    name = "Se Cathedral"\n)', 'prediction': {'church': 'Location', 'houses': 'Location', 'vicinity': 'Location', 'Se Cathedral': 'Organization'}}
{'idx': 234, 'sentence': 'Their son , Philipp Veit , would later become part of a circle of German Christian painters called " the Nazarenes , " who influenced the later English painters in the Pre-Raphaelite Brotherhood .', 'label': "{'German Christian': 'Miscellaneous', 'the Nazarenes': 'Organization', 'Pre-Raphaelite Brotherhood': 'Organization', 'English': 'Miscellaneous', 'Philipp Veit': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Philipp Veit"\n)\nOrganization_entity1 = Organization(\n    name = "the Nazarenes"\n)\nOrganization_entity2 = Organization(\n    name = "the Pre-Raphaelite Brotherhood"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Philipp Veit': 'Person', 'the Nazarenes': 'Organization', 'the Pre-Raphaelite Brotherhood': 'Organization'}}
{'idx': 235, 'sentence': 'They lived in Paris from 1802 until 1804 , and after her divorce they married as Protestants .', 'label': "{'Protestants': 'Miscellaneous', 'Paris': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Paris"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1802"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1804"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Protestants"\n)\nPerson_entity1 = Person(\n    name = "her"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Paris': 'Location', '1802': 'Miscellaneous', '1804': 'Miscellaneous', 'Protestants': 'Miscellaneous', 'her': 'Person'}}
{'idx': 236, 'sentence': 'There , she lived with her son Philipp ( also a convert to a medieval style of Catholicism ) until her death in 1839 .', 'label': "{'Philipp': 'Person', 'Catholicism': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Philipp"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "medieval style of Catholicism"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1839"\n)', 'prediction': {'Philipp': 'Person', 'medieval style of Catholicism': 'Miscellaneous', '1839': 'Miscellaneous'}}
{'idx': 237, 'sentence': 'Her nephew was Felix Mendelssohn , the composer , who with his sister , Fanny , were considered nearly the equals of the Mozarts as child prodigies .', 'label': "{'Mozarts': 'Person', 'Felix Mendelssohn': 'Person', 'Fanny': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Felix Mendelssohn"\n)\nPerson_entity2 = Person(\n    name = "Fanny"\n)', 'prediction': {'Felix Mendelssohn': 'Person', 'Fanny': 'Person'}}
{'idx': 238, 'sentence': 'For some Jews , she may be a less than admirable figure as well , having left her Jewish husband , violated her divorce settlement , and converted first to Protestantism ( which was favorable towards Judaism ) , and finally to Catholicism ( which was not ) .', 'label': "{'Judaism': 'Miscellaneous', 'Jews': 'Miscellaneous', 'Protestantism': 'Miscellaneous', 'Jewish': 'Miscellaneous', 'Catholicism': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Jews"\n)\nPerson_entity2 = Person(\n    name = "husband"\n)\nOrganization_entity1 = Organization(\n    name = "Protestantism"\n)\nOrganization_entity2 = Organization(\n    name = "Catholicism"\n)', 'prediction': {'Jews': 'Person', 'husband': 'Person', 'Protestantism': 'Organization', 'Catholicism': 'Organization'}}
{'idx': 239, 'sentence': '[ 1 ] In older literature and on her gravestone one finds the date 1763 , but this is the birthyear of her older sister Sara ( May 23rd 1763-April 15 1764 ) whose untimely death was one of the reasons Moses Mendelssohn wrote the Phaedon .', 'label': "{'Moses Mendelssohn': 'Person', 'Sara': 'Person', 'Phaedon': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Sara"\n)\nPerson_entity2 = Person(\n    name = "Moses Mendelssohn"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Phaedon"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "May 23rd 1763-April 15 1764"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Sara': 'Person', 'Moses Mendelssohn': 'Person', 'Phaedon': 'Miscellaneous', 'May 23rd 1763-April 15 1764': 'Miscellaneous'}}
{'idx': 240, 'sentence': 'Stylistically , the tracks range from industrial metal to goth and electronica .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "industrial metal"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "goth"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "electronica"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'industrial metal': 'Miscellaneous', 'goth': 'Miscellaneous', 'electronica': 'Miscellaneous'}}
{'idx': 241, 'sentence': 'Six foot , three inches tall and 215 pounds in his prime , Bobick was part of a boxing family and grew up with the sport in the 1960s .', 'label': "{'Bobick': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bobick"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1960s"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bobick': 'Person', '1960s': 'Miscellaneous'}}
{'idx': 242, 'sentence': 'Bobick trained with and was managed by heavyweight legend Joe Frazier .', 'label': "{'Joe Frazier': 'Person', 'Bobick': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Bobick"\n)\nPerson_entity2 = Person(\n    name = "Joe Frazier"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Bobick': 'Person', 'Joe Frazier': 'Person'}}
{'idx': 243, 'sentence': 'Knockout wins that year included Ted Gullick and future champion Mike Weaver .', 'label': "{'Mike Weaver': 'Person', 'Ted Gullick': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Ted Gullick"\n)\nPerson_entity2 = Person(\n    name = "Mike Weaver"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ted Gullick': 'Person', 'Mike Weaver': 'Person'}}
{'idx': 244, 'sentence': 'He was now being dodged by some , but a win over Randy Neumann proved he could not be ignored .', 'label': "{'Randy Neumann': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Randy Neumann"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Randy Neumann': 'Person'}}
{'idx': 245, 'sentence': 'Norton connected first and very hard .', 'label': "{'Norton': 'Person'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Norton"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Norton': 'Miscellaneous'}}
{'idx': 246, 'sentence': "He finished the year 1977 40-1 with 36 KO's .", 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1977"\n)', 'prediction': {'1977': 'Miscellaneous'}}
{'idx': 247, 'sentence': 'All four of his pro losses were by KO .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "four"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "pro"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "KO"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'four': 'Miscellaneous', 'pro': 'Miscellaneous', 'KO': 'Miscellaneous'}}
{'idx': 248, 'sentence': 'No. 18 later moved to northern Australia , No. 120 to Western Australia and later transferring overseas ..', 'label': "{'Western Australia': 'Location', 'No. 120': 'Organization', 'Australia': 'Location', 'No. 18': 'Organization'}", 'response': 'Location_entity1 = Location(\n    name = "northern Australia"\n)\nLocation_entity2 = Location(\n    name = "Western Australia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'northern Australia': 'Location', 'Western Australia': 'Location'}}
{'idx': 249, 'sentence': 'Henry Eberhard Faber is the namesake for both the college in Animal House and the character Faber in Fahrenheit 451 .', 'label': "{'Henry Eberhard Faber': 'Person', 'Fahrenheit 451': 'Miscellaneous', 'Animal House': 'Miscellaneous', 'Faber': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Henry Eberhard Faber"\n)\nOrganization_entity1 = Organization(\n    name = "Animal House"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Fahrenheit 451"\n)', 'prediction': {'Henry Eberhard Faber': 'Person', 'Animal House': 'Organization', 'Fahrenheit 451': 'Miscellaneous'}}
{'idx': 250, 'sentence': 'In 1885 Hitzig became a professor at the University of Halle , where he remained until his retirement in 1903 .', 'label': "{'University of Halle': 'Organization', 'Hitzig': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Hitzig"\n)\nOrganization_entity1 = Organization(\n    name = "University of Halle"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1885"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "1903"\n)', 'prediction': {'Hitzig': 'Person', 'University of Halle': 'Organization', '1885': 'Miscellaneous', '1903': 'Miscellaneous'}}
{'idx': 251, 'sentence': 'In 1870 Hitzig published his findings in an essay called " On the Electrical Excitability of the Cerebrum " . This experimentation was considered the first time anyone had done any " localized study " regarding the brain and electrical current .', 'label': "{'On the Electrical Excitability of the Cerebrum': 'Miscellaneous', 'Hitzig': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Hitzig"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Hitzig': 'Person'}}
{'idx': 252, 'sentence': 'In the late 1930s in Budapest the restaurant owner László hires the pianist András to play in his restaurant .', 'label': "{'László': 'Person', 'András': 'Person', 'Budapest': 'Location'}", 'response': 'Person_entity1 = Person(\n    name = "László"\n)\nPerson_entity2 = Person(\n    name = "András"\n)\nOrganization_entity1 = Organization(\n    name = "restaurant"\n)\nLocation_entity1 = Location(\n    name = "Budapest"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'László': 'Person', 'András': 'Person', 'restaurant': 'Organization', 'Budapest': 'Location'}}
{'idx': 253, 'sentence': 'After a few years Nazi Germany captures Budapest and Hans returns .', 'label': "{'Hans': 'Person', 'Nazi Germany': 'Location', 'Budapest': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Budapest"\n)\nPerson_entity1 = Person(\n    name = "Hans"\n)\nOrganization_entity1 = Organization(\n    name = "Nazi Germany"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Budapest': 'Location', 'Hans': 'Person', 'Nazi Germany': 'Organization'}}
{'idx': 254, 'sentence': 'The street was built in the 1880s and now hosts Brixton Market , selling a mix of African , Caribbean , English , Portuguese and Chinese products .', 'label': "{'Chinese': 'Miscellaneous', 'Caribbean': 'Miscellaneous', 'Portuguese': 'Miscellaneous', 'Brixton Market': 'Organization', 'African': 'Miscellaneous', 'English': 'Miscellaneous'}", 'response': 'Location_entity1 = Location(\n    name = "Brixton Market"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1880s"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "African"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "Caribbean"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "English"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "Portuguese"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "Chinese"\n)', 'prediction': {'Brixton Market': 'Location', '1880s': 'Miscellaneous', 'African': 'Miscellaneous', 'Caribbean': 'Miscellaneous', 'English': 'Miscellaneous', 'Portuguese': 'Miscellaneous', 'Chinese': 'Miscellaneous'}}
{'idx': 255, 'sentence': 'Production at Elm Coulee has more than doubled the oil output of the state of Montana .', 'label': "{'Montana': 'Location', 'Elm Coulee': 'Location'}", 'response': 'Location_entity1 = Location(\n    name = "Elm Coulee"\n)\nLocation_entity2 = Location(\n    name = "Montana"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Elm Coulee': 'Location', 'Montana': 'Location'}}
{'idx': 256, 'sentence': 'In 1942 , along with Dr. Haidar Abdel-Shafi , and the late Mukhlis Amer , Emil Habibi and Mufid Nashashibi , Touma was a founder of the Palestinian National Liberation League .', 'label': "{'Emil Habibi': 'Person', 'Mukhlis Amer': 'Person', 'Touma': 'Person', 'Palestinian National Liberation League': 'Organization', 'Haidar Abdel-Shafi': 'Person', 'Mufid Nashashibi': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Dr. Haidar Abdel-Shafi"\n)\nPerson_entity2 = Person(\n    name = "Mukhlis Amer"\n)\nPerson_entity3 = Person(\n    name = "Emil Habibi"\n)\nPerson_entity4 = Person(\n    name = "Mufid Nashashibi"\n)\nOrganization_entity1 = Organization(\n    name = "Palestinian National Liberation League"\n)', 'prediction': {'Dr. Haidar Abdel-Shafi': 'Person', 'Mukhlis Amer': 'Person', 'Emil Habibi': 'Person', 'Mufid Nashashibi': 'Person', 'Palestinian National Liberation League': 'Organization'}}
{'idx': 257, 'sentence': 'Eugenio Calabi ( born 1923 ) is an Italian-American mathematician and professor emeritus at the University of Pennsylvania , specializing in differential geometry , partial differential equations and their applications .', 'label': "{'University of Pennsylvania': 'Organization', 'Eugenio Calabi': 'Person', 'Italian-American': 'Miscellaneous'}", 'response': 'Person_entity1 = Person(\n    name = "Eugenio Calabi"\n)\nOrganization_entity1 = Organization(\n    name = "University of Pennsylvania"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1923"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "Italian-American"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "mathematician"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "professor emeritus"\n)\nMiscellaneous_entity5 = Miscellaneous(\n    name = "differential geometry"\n)\nMiscellaneous_entity6 = Miscellaneous(\n    name = "partial differential equations"\n)\nMiscellaneous_entity7 = Miscellaneous(\n    name = "applications"\n)', 'prediction': {'Eugenio Calabi': 'Person', 'University of Pennsylvania': 'Organization', '1923': 'Miscellaneous', 'Italian-American': 'Miscellaneous', 'mathematician': 'Miscellaneous', 'professor emeritus': 'Miscellaneous', 'differential geometry': 'Miscellaneous', 'partial differential equations': 'Miscellaneous', 'applications': 'Miscellaneous'}}
{'idx': 258, 'sentence': 'Scott Chair of Mathematics at the University of Pennsylvania in 1967 .', 'label': "{'University of Pennsylvania': 'Organization', 'Scott': 'Person'}", 'response': 'Organization_entity1 = Organization(\n    name = "University of Pennsylvania"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "1967"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'University of Pennsylvania': 'Organization', '1967': 'Miscellaneous'}}
{'idx': 259, 'sentence': 'The trains designated as Express Nakhonphink are Train No. 1 for Bangkok - Chiang Mai and Train No. 2 for Chiang Mai - Bangkok .', 'label': "{'Bangkok': 'Location', 'Express Nakhonphink': 'Miscellaneous', 'Chiang Mai': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Express Nakhonphink"\n)\nOrganization_entity2 = Organization(\n    name = "Bangkok"\n)\nLocation_entity1 = Location(\n    name = "Chiang Mai"\n)\nLocation_entity2 = Location(\n    name = "Bangkok"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Express Nakhonphink': 'Organization', 'Bangkok': 'Location', 'Chiang Mai': 'Location'}}
{'idx': 260, 'sentence': 'EZ2DJ is a series of music video games created by the South Korean company Amuseworld .', 'label': "{'Amuseworld': 'Organization', 'EZ2DJ': 'Miscellaneous', 'South Korean': 'Miscellaneous'}", 'response': 'Organization_entity1 = Organization(\n    name = "Amuseworld"\n)\nLocation_entity1 = Location(\n    name = "South Korean"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Amuseworld': 'Organization', 'South Korean': 'Location'}}
{'idx': 261, 'sentence': 'Ez2DJ 2nd TraX - It Rules Once Again - ( October , 2000 )', 'label': "{'Ez2DJ 2nd TraX - It Rules Once Again': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Ez2DJ"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2nd TraX"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "October"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "2000"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Ez2DJ': 'Miscellaneous', '2nd TraX': 'Miscellaneous', 'October': 'Miscellaneous', '2000': 'Miscellaneous'}}
{'idx': 262, 'sentence': 'Ez2DJ 7th TraX - Resistance - Version 1.50 ( December , 2007 )', 'label': "{'Ez2DJ 7th TraX - Resistance - Version 1.50': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Ez2DJ 7th TraX - Resistance - Version 1.50"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "December"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "2007"\n)', 'prediction': {'Ez2DJ 7th TraX - Resistance - Version 1.50': 'Miscellaneous', 'December': 'Miscellaneous', '2007': 'Miscellaneous'}}
{'idx': 263, 'sentence': 'However , unlike the Beatmania series ( including III and IIDX ) , depending on the gamemode , effector button are treated as a gameplay button , especially in the gamemode " Radio Mix " , where each player need to control 2 effector buttons .', 'label': "{'III': 'Miscellaneous', 'Beatmania': 'Miscellaneous', 'IIDX': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Beatmania"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "III"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "IIDX"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "Radio Mix"\n)', 'prediction': {'Beatmania': 'Miscellaneous', 'III': 'Miscellaneous', 'IIDX': 'Miscellaneous', 'Radio Mix': 'Miscellaneous'}}
{'idx': 264, 'sentence': 'Written by Erin ( 10/14/07 ) , Edited by AHRISA ( 07/01/08 )', 'label': "{'AHRISA': 'Person', 'Erin': 'Person'}", 'response': 'Person_entity1 = Person(\n    name = "Erin"\n)\nPerson_entity2 = Person(\n    name = "AHRISA"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "10/14/07"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "07/01/08"\n)', 'prediction': {'Erin': 'Person', 'AHRISA': 'Person', '10/14/07': 'Miscellaneous', '07/01/08': 'Miscellaneous'}}
{'idx': 265, 'sentence': '3 .', 'label': '{}', 'response': 'None', 'prediction': {}}
{'idx': 266, 'sentence': '5 .', 'label': '{}', 'response': 'None', 'prediction': {}}
{'idx': 267, 'sentence': '( 1 ) 1st Tracks / 1st SE', 'label': "{'1st Tracks': 'Miscellaneous', '1st SE': 'Miscellaneous'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "1st"\n)\nLocation_entity1 = Location(\n    name = "Tracks"\n)\nLocation_entity2 = Location(\n    name = "SE"\n)', 'prediction': {'1st': 'Miscellaneous', 'Tracks': 'Location', 'SE': 'Location'}}
{'idx': 268, 'sentence': "A Korean Judge 's ruling has ordered Amuse World to pay Konami damages and stop production of the product completely .", 'label': "{'Amuse World': 'Organization', 'Korean': 'Miscellaneous', 'Konami': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Amuse World"\n)\nOrganization_entity2 = Organization(\n    name = "Konami"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Amuse World': 'Organization', 'Konami': 'Organization'}}
{'idx': 269, 'sentence': 'This area continues to be the core of the system , and is noted for the number of residents in the Richmond Highway area who use the service at all times of the day .', 'label': "{'Richmond Highway': 'Location'}", 'response': 'Organization_entity1 = Organization(\n    name = "Richmond Highway"\n)\nLocation_entity1 = Location(\n    name = "system"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "residents"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "service"\n)\nMiscellaneous_entity3 = Miscellaneous(\n    name = "times"\n)\nMiscellaneous_entity4 = Miscellaneous(\n    name = "day"\n)', 'prediction': {'Richmond Highway': 'Organization', 'system': 'Location', 'residents': 'Miscellaneous', 'service': 'Miscellaneous', 'times': 'Miscellaneous', 'day': 'Miscellaneous'}}
{'idx': 270, 'sentence': 'Base fare is usually $1 , but can be as much as $3 for express routes .', 'label': '{}', 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "Base fare"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "express routes"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Base fare': 'Miscellaneous', 'express routes': 'Miscellaneous'}}
{'idx': 271, 'sentence': 'Fairmont State University is a public university located in Fairmont , West Virginia ( population 19,097 ) .', 'label': "{'West Virginia': 'Location', 'Fairmont': 'Location', 'Fairmont State University': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Fairmont State University"\n)\nLocation_entity1 = Location(\n    name = "Fairmont"\n)\nLocation_entity2 = Location(\n    name = "West Virginia"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Fairmont State University': 'Organization', 'Fairmont': 'Location', 'West Virginia': 'Location'}}
{'idx': 272, 'sentence': 'On April 7 , 2004 , Governor Bob Wise signed legislation allowing Fairmont State College to change its name to Fairmont State University .', 'label': "{'Fairmont State College': 'Organization', 'Fairmont State University': 'Organization', 'Bob Wise': 'Person'}", 'response': 'Miscellaneous_entity1 = Miscellaneous(\n    name = "April 7"\n)\nMiscellaneous_entity2 = Miscellaneous(\n    name = "2004"\n)\nPerson_entity1 = Person(\n    name = "Bob Wise"\n)\nOrganization_entity1 = Organization(\n    name = "Fairmont State College"\n)\nOrganization_entity2 = Organization(\n    name = "Fairmont State University"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'April 7': 'Miscellaneous', '2004': 'Miscellaneous', 'Bob Wise': 'Person', 'Fairmont State College': 'Organization', 'Fairmont State University': 'Organization'}}
{'idx': 273, 'sentence': "Fairmont State 's athletic teams , known as the Falcons , compete in the West Virginia Intercollegiate Athletic Conference in NCAA Division II .", 'label': "{'Falcons': 'Organization', 'NCAA Division II': 'Organization', 'West Virginia Intercollegiate Athletic Conference': 'Organization', 'Fairmont State': 'Organization'}", 'response': 'Organization_entity1 = Organization(\n    name = "Fairmont State"\n)\nOrganization_entity2 = Organization(\n    name = "West Virginia Intercollegiate Athletic Conference"\n)\nOrganization_entity3 = Organization(\n    name = "NCAA Division II"\n)\nMiscellaneous_entity1 = Miscellaneous(\n    name = "Falcons"\n)\n\n# No other entities belong to predefined Entity subclasses in this sentence.', 'prediction': {'Fairmont State': 'Organization', 'West Virginia Intercollegiate Athletic Conference': 'Organization', 'NCAA Division II': 'Organization', 'Falcons': 'Miscellaneous'}}
