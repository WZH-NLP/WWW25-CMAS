"""Provide complete code. Do not delete anything!"""
class Entity:
    def __init__(self, name: str):
        self.name = name

class Person(Entity):
    """Person entities are limited to humans. A Person entity may be a single person or a group."""
    def __init__(self, name: str):
        super().__init__(name=name)

helpfulness = []
target_sentence = "UK Edition came with the OSC-DIS video, and most of the tracks were re-engineered."

def predict_helpfulness(score: int):
    """Predict the helpfulness score, which indicates the degree to which providing the current sentence can aid in extracting named entities from the target_sentence. The score ranges from 1 to 5, with 1 being the least helpful and 5 being the most helpful."""
    helpfulness.append(score)

"""
List all the entities in the following sentence as instances of corresponding subclasses of class Entity. If there do not exist any entities that belong to the Entity subclasses we defined, output "None".
"His parents were encouraged by a friend to develop the child 's musical talents and he studied classical piano in the United States."
"""
None
# No other entities belong to predefined Entity subclasses in this sentence.

# Then, predict the helpfulness score (Answer with predict_helpfulness function and give reasons in the comment!)

"""
List all the entities in the following sentence as instances of corresponding subclasses of class Entity. If there do not exist any Entity words that belong to the Entity subclasses we defined, output "None".
"In this , he is often cited as being influenced by pianist Eddy Duchin."
"""
person_entity1 = Person(
    name = "Eddy Duchin"
)
# No other entities belong to predefined Entity subclasses in this sentence.

# Then, predict the helpfulness score (Answer with predict_helpfulness function and give reasons in the comment!)

"""
Using the provided examples as guidance and considering their helpfulness, list all the entities in target_sentence as instances of corresponding subclasses of class Entity. If there do not exist any Entity words that belong to the Entity subclasses we defined, output "None".
target_sentence = "During this time Couch 's Division was detached from the Army and was occupied with guarding the fords on the Potomac ."
"""
